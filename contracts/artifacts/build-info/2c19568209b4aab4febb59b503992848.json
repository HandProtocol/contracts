{
	"id": "2c19568209b4aab4febb59b503992848",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/sweetspot.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\n\r\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\r\nimport { IERC20 } from '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\nimport { SafeERC20 } from '@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol';\r\nimport \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\";\r\nimport \"./interface/IScorer.sol\"; // Import the IScorer interface\r\n\r\ncontract sweetspot is OwnableUpgradeable, ReentrancyGuardUpgradeable  {\r\n    using SafeERC20 for IERC20;\r\n\r\n    address public constant NATIVE_TOKEN = address(0);\r\n    IScorer public scorer; // Scoring contract for eligibility\r\n\r\n    struct Round {\r\n        uint64 start; // Start timestamp of the round\r\n        uint64 end; // End timestamp of the round\r\n        string metadataURI; // IPFS URI for round metadata\r\n    }\r\n\r\n    Round public currentRound; // Current round details\r\n\r\n    // Tracks balances for each token (including Ether)\r\n    mapping(address => uint256) public totalBalances;\r\n    // Allowed amounts per user per token\r\n    mapping(address => mapping(address => uint256)) public allowedAmounts;\r\n \r\n    event Deposit(address indexed depositor, address indexed token, uint256 amount);\r\n    event Withdraw(address indexed withdrawer, address indexed token, uint256 amount);\r\n    event Claimed(address indexed claimant, address indexed token, uint256 amount);\r\n    event AllowedAmountUpdated(address indexed user, address indexed token, uint256 newAmount);\r\n    event RoundUpdated(uint256 start, uint256 end, string metadataURI);\r\n\r\n    error NotWithinRound(uint256 currentTime, uint256 start, uint256 end);\r\n\r\n    modifier onlyAdmin() {\r\n        require(scorer.isAdmin(msg.sender), \"Caller is not an admin\");\r\n        _;\r\n    }\r\n\r\n    /// @notice Initializes this contract with its initial state.\r\n    ///\r\n    /// @param _scorer The scoring contract address.\r\n    /// @param owner The owner address.\r\n    function initialize(address _scorer, address owner) external initializer {\r\n        __Ownable_init(owner); // Initialize OwnableUpgradeable\r\n        __ReentrancyGuard_init();\r\n        scorer = IScorer(_scorer);\r\n    }\r\n\r\n    /// @notice Deposits funds into this jar for a specific token or Ether.\r\n    ///\r\n    /// @param token The token address (address(0) for Ether).\r\n    /// @param amount The value to add (in wei for Ether).\r\n    function deposit(address token, uint256 amount) external payable nonReentrant  {\r\n        if (token == NATIVE_TOKEN) {\r\n            require(msg.value == amount, \"Incorrect Ether amount\");\r\n        } else {\r\n            require(amount > 0, \"Deposit amount must be greater than zero\");\r\n            IERC20(token).safeTransferFrom(msg.sender, address(this), amount);\r\n        }\r\n\r\n        totalBalances[token] += amount;\r\n        emit Deposit(msg.sender, token, amount);\r\n    }\r\n\r\n    /// @notice Claims the full allowed amount for a user during the round.\r\n    function claim(address token) external nonReentrant {\r\n        \r\n        if (block.timestamp < currentRound.start || block.timestamp > currentRound.end) {\r\n            revert NotWithinRound(block.timestamp, currentRound.start, currentRound.end);\r\n        }\r\n\r\n        uint256 userAllowedAmount = allowedAmounts[msg.sender][token];\r\n        require(userAllowedAmount > 0, \"No claimable amount\");\r\n        require(totalBalances[token] >= userAllowedAmount, \"Insufficient funds in jar\");\r\n\r\n        allowedAmounts[msg.sender][token] = 0;\r\n        totalBalances[token] -= userAllowedAmount;\r\n\r\n        if (token == NATIVE_TOKEN) {\r\n            (bool success, ) = msg.sender.call{value: userAllowedAmount}(\"\");\r\n            require(success, \"Ether transfer failed\");\r\n        } else {\r\n            IERC20(token).safeTransfer(msg.sender, userAllowedAmount);\r\n        }\r\n\r\n        emit Claimed(msg.sender, token, userAllowedAmount);\r\n    }\r\n\r\n    /// @notice Sets the allowed amount for a specific user and token.\r\n    ///\r\n    /// @param user The address of the user.\r\n    /// @param token The token address.\r\n    /// @param amount The allowed amount for the user.\r\n    function setAllowedAmount(address user, address token, uint256 amount) external onlyAdmin {\r\n        require(user != address(0), \"Zero address user\");\r\n        allowedAmounts[user][token] = amount;\r\n        emit AllowedAmountUpdated(user, token, amount);\r\n    }\r\n\r\n    /// @notice Sets the allowed amount for multiple users for a given token in one call.\r\n    function bulkSetAllowedAmount(\r\n        address token,\r\n        address[] calldata users,\r\n        uint256[] calldata amounts\r\n    ) external onlyAdmin {\r\n        require(users.length == amounts.length, \"Mismatched array lengths\");\r\n        for (uint256 i = 0; i < users.length; i++) {\r\n            // You might want to check that the user is not a zero address if needed\r\n            allowedAmounts[users[i]][token] = amounts[i];\r\n            emit AllowedAmountUpdated(users[i], token, amounts[i]);\r\n        }\r\n    }\r\n\r\n    /// @notice Sets the round duration and metadata URI.\r\n    ///\r\n    /// @param start The start timestamp of the round.\r\n    /// @param end The end timestamp of the round.\r\n    /// @param metadataURI The IPFS URI for the round metadata.\r\n    function setRound(uint64  start, uint64  end, string memory metadataURI) external onlyAdmin {\r\n        require(start < end, \"Start time must be before end time\");\r\n        currentRound = Round(start, end, metadataURI);\r\n        emit RoundUpdated(start, end, metadataURI);\r\n    }\r\n\r\n    /// @notice Withdraws funds from the jar for a specific token or Ether.\r\n    ///\r\n    /// @param token The token address (address(0) for Ether).\r\n    /// @param amount The amount to withdraw.\r\n    function withdraw(address token, uint256 amount) external onlyOwner nonReentrant  {\r\n        require(amount > 0, \"Withdrawal amount must be greater than zero\");\r\n        require(totalBalances[token] >= amount, \"Insufficient funds\");\r\n\r\n        totalBalances[token] -= amount;\r\n\r\n        if (token == NATIVE_TOKEN) {\r\n            (bool success, ) = owner().call{value: amount}(\"\");\r\n            require(success, \"Ether transfer failed\");\r\n        } else {\r\n            IERC20(token).safeTransfer(owner(), amount);\r\n        }\r\n        emit Withdraw(owner(), token, amount);\r\n    }\r\n\r\n    /// @notice Allows Ether deposits directly via fallback function.\r\n    receive() external payable {\r\n        totalBalances[NATIVE_TOKEN] += msg.value;\r\n        emit Deposit(msg.sender, NATIVE_TOKEN, msg.value);\r\n    }\r\n\r\n    fallback() external payable {\r\n        // Typically revert to avoid accidental calls with data\r\n        revert(\"Sweetspot: use deposit()\");\r\n    }\r\n}\r\n"
			},
			"contracts/interface/IScorer.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\n\r\ninterface IScorer {\r\n    /**\r\n     * @dev Returns the score of a specific user for a given score type.\r\n     *      The score type is represented as a `bytes32` hash (e.g., keccak256(\"Trust\")).\r\n     *      The score is typically used to determine the user's eligibility for certain actions or claims.\r\n     *      The exact logic for scoring is determined by the implementation of the contract that inherits this interface.\r\n     *\r\n     * @param user The address of the user whose score is being queried.\r\n     * @param scoreType The type of score to query, represented as a `bytes32` hash.\r\n     * @return The score of the user as a uint256 value.\r\n     * @notice This function should be implemented in the contract that inherits the `IScorer` interface.\r\n     */\r\n    function score(address user, string memory scoreType) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Checks if the provided address is an admin.\r\n     * @param admin The address to check for admin status.\r\n     * @return True if the address is an admin, false otherwise.\r\n     * @notice This function should be implemented in the contract that inherits the `IScorer` interface.\r\n     */\r\n    function isAdmin(address admin) external view returns (bool);\r\n}\r\n"
			},
			"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardUpgradeable is Initializable {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    function __ReentrancyGuard_init() internal onlyInitializing {\n        __ReentrancyGuard_init_unchained();\n    }\n\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "paris"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
				"ReentrancyGuardUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x2025ccf05f6f1f2fd4e078e552836f525a1864e3854ed555047cd732320ab29b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d27f4b23c2dee42394aebaf42bf238285230f472dfd3282a39c3f000ec28214f\",\"dweb:/ipfs/QmQa3DnvccwdWJeWrjgXPnFMTWbzWQWR39hVqC7eEwo2PC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 463,
								"contract": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 532,
								"contract": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":750:9442  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":750:9442  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122035cb9288e2fbc856f87650e8f678bb42b51a4dcdfd56e97a105638d7130a86aa64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122035cb9288e2fbc856f87650e8f678bb42b51a4dcdfd56e97a105638d7130a86aa64736f6c634300081c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD 0xCB SWAP3 DUP9 0xE2 0xFB 0xC8 JUMP 0xF8 PUSH23 0x50E8F678BB42B51A4DCDFD56E97A105638D7130A86AA64 PUSH20 0x6F6C634300081C00330000000000000000000000 ",
							"sourceMap": "750:8692:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122035cb9288e2fbc856f87650e8f678bb42b51a4dcdfd56e97a105638d7130a86aa64736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD 0xCB SWAP3 DUP9 0xE2 0xFB 0xC8 JUMP 0xF8 PUSH23 0x50E8F678BB42B51A4DCDFD56E97A105638D7130A86AA64 PUSH20 0x6F6C634300081C00330000000000000000000000 ",
							"sourceMap": "750:8692:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122035cb9288e2fbc856f87650e8f678bb42b51a4dcdfd56e97a105638d7130a86aa64736f6c634300081c0033",
									".code": [
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/interface/IScorer.sol",
								"contracts/sweetspot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c3d621977f064e384d77a7f38001fcbf2e2b714139e5fb526a1fd3072a79689164736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c3d621977f064e384d77a7f38001fcbf2e2b714139e5fb526a1fd3072a79689164736f6c634300081c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 0xD6 0x21 SWAP8 PUSH32 0x64E384D77A7F38001FCBF2E2B714139E5FB526A1FD3072A79689164736F6C63 NUMBER STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "233:5799:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c3d621977f064e384d77a7f38001fcbf2e2b714139e5fb526a1fd3072a79689164736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 0xD6 0x21 SWAP8 PUSH32 0x64E384D77A7F38001FCBF2E2B714139E5FB526A1FD3072A79689164736F6C63 NUMBER STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "233:5799:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c3d621977f064e384d77a7f38001fcbf2e2b714139e5fb526a1fd3072a79689164736f6c634300081c0033",
									".code": [
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/interface/IScorer.sol",
								"contracts/sweetspot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122004b89e72da43ab1ee05bd033fb62a621154a79713cd82d3cd8a0e9353695a64e64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122004b89e72da43ab1ee05bd033fb62a621154a79713cd82d3cd8a0e9353695a64e64736f6c634300081c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV 0xB8 SWAP15 PUSH19 0xDA43AB1EE05BD033FB62A621154A79713CD82D EXTCODECOPY 0xD8 LOG0 0xE9 CALLDATALOAD CALLDATASIZE SWAP6 0xA6 0x4E PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "411:484:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122004b89e72da43ab1ee05bd033fb62a621154a79713cd82d3cd8a0e9353695a64e64736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV 0xB8 SWAP15 PUSH19 0xDA43AB1EE05BD033FB62A621154A79713CD82D EXTCODECOPY 0xD8 LOG0 0xE9 CALLDATALOAD CALLDATASIZE SWAP6 0xA6 0x4E PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "411:484:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122004b89e72da43ab1ee05bd033fb62a621154a79713cd82d3cd8a0e9353695a64e64736f6c634300081c0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/interface/IScorer.sol",
								"contracts/sweetspot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interface/IScorer.sol": {
				"IScorer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "isAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "scoreType",
									"type": "string"
								}
							],
							"name": "score",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"isAdmin(address)": {
								"details": "Checks if the provided address is an admin.",
								"params": {
									"admin": "The address to check for admin status."
								},
								"returns": {
									"_0": "True if the address is an admin, false otherwise."
								}
							},
							"score(address,string)": {
								"details": "Returns the score of a specific user for a given score type.      The score type is represented as a `bytes32` hash (e.g., keccak256(\"Trust\")).      The score is typically used to determine the user's eligibility for certain actions or claims.      The exact logic for scoring is determined by the implementation of the contract that inherits this interface.",
								"params": {
									"scoreType": "The type of score to query, represented as a `bytes32` hash.",
									"user": "The address of the user whose score is being queried."
								},
								"returns": {
									"_0": "The score of the user as a uint256 value."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isAdmin(address)": "24d7806c",
							"score(address,string)": "db4f1024"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"scoreType\",\"type\":\"string\"}],\"name\":\"score\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isAdmin(address)\":{\"details\":\"Checks if the provided address is an admin.\",\"params\":{\"admin\":\"The address to check for admin status.\"},\"returns\":{\"_0\":\"True if the address is an admin, false otherwise.\"}},\"score(address,string)\":{\"details\":\"Returns the score of a specific user for a given score type.      The score type is represented as a `bytes32` hash (e.g., keccak256(\\\"Trust\\\")).      The score is typically used to determine the user's eligibility for certain actions or claims.      The exact logic for scoring is determined by the implementation of the contract that inherits this interface.\",\"params\":{\"scoreType\":\"The type of score to query, represented as a `bytes32` hash.\",\"user\":\"The address of the user whose score is being queried.\"},\"returns\":{\"_0\":\"The score of the user as a uint256 value.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isAdmin(address)\":{\"notice\":\"This function should be implemented in the contract that inherits the `IScorer` interface.\"},\"score(address,string)\":{\"notice\":\"This function should be implemented in the contract that inherits the `IScorer` interface.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IScorer.sol\":\"IScorer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interface/IScorer.sol\":{\"keccak256\":\"0x5bf83793e4290e7e68813647ee12b8abc4c538289be58958e32b7333b5b04e50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f2ae1e6cfcef833b0424c313a99b39e98c418ba4fc037c081644ef42e598776\",\"dweb:/ipfs/QmSyyx1J5C2o3KCaWxDf3Gd9szsZGdzJCbe4u4SvdNXPjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"isAdmin(address)": {
								"notice": "This function should be implemented in the contract that inherits the `IScorer` interface."
							},
							"score(address,string)": {
								"notice": "This function should be implemented in the contract that inherits the `IScorer` interface."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/sweetspot.sol": {
				"sweetspot": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "currentTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "end",
									"type": "uint256"
								}
							],
							"name": "NotWithinRound",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newAmount",
									"type": "uint256"
								}
							],
							"name": "AllowedAmountUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "claimant",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Claimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "depositor",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "end",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "metadataURI",
									"type": "string"
								}
							],
							"name": "RoundUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "withdrawer",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "NATIVE_TOKEN",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowedAmounts",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "users",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"name": "bulkSetAllowedAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentRound",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "start",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "end",
									"type": "uint64"
								},
								{
									"internalType": "string",
									"name": "metadataURI",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_scorer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "scorer",
							"outputs": [
								{
									"internalType": "contract IScorer",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "setAllowedAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "start",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "end",
									"type": "uint64"
								},
								{
									"internalType": "string",
									"name": "metadataURI",
									"type": "string"
								}
							],
							"name": "setRound",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "totalBalances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"deposit(address,uint256)": {
								"params": {
									"amount": "The value to add (in wei for Ether).",
									"token": "The token address (address(0) for Ether)."
								}
							},
							"initialize(address,address)": {
								"params": {
									"_scorer": "The scoring contract address.",
									"owner": "The owner address."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"setAllowedAmount(address,address,uint256)": {
								"params": {
									"amount": "The allowed amount for the user.",
									"token": "The token address.",
									"user": "The address of the user."
								}
							},
							"setRound(uint64,uint64,string)": {
								"params": {
									"end": "The end timestamp of the round.",
									"metadataURI": "The IPFS URI for the round metadata.",
									"start": "The start timestamp of the round."
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdraw(address,uint256)": {
								"params": {
									"amount": "The amount to withdraw.",
									"token": "The token address (address(0) for Ether)."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/sweetspot.sol\":454:6704  contract sweetspot is OwnableUpgradeable, ReentrancyGuardUpgradeable  {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/sweetspot.sol\":454:6704  contract sweetspot is OwnableUpgradeable, ReentrancyGuardUpgradeable  {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xb807a3c4\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xb807a3c4\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe3e7c1f9\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf3fef3a3\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa9012c89\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9590e8a\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xaee9c872\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x485cc955\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x485cc955\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x85c758f7\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8a19c8bc\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x1e83409a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x31f7d964\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x47e7ef24\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/sweetspot.sol\":6470:6479  msg.value */\n      callvalue\n        /* \"contracts/sweetspot.sol\":6439:6452  totalBalances */\n      0x35\n        /* \"contracts/sweetspot.sol\":6439:6466  totalBalances[NATIVE_TOKEN] */\n      0x00\n        /* \"contracts/sweetspot.sol\":613:614  0 */\n      dup1\n        /* \"contracts/sweetspot.sol\":6439:6466  totalBalances[NATIVE_TOKEN] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/sweetspot.sol\":6439:6479  totalBalances[NATIVE_TOKEN] += msg.value */\n      dup3\n      dup3\n      sload\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sweetspot.sol\":613:614  0 */\n      0x00\n        /* \"contracts/sweetspot.sol\":6495:6539  Deposit(msg.sender, NATIVE_TOKEN, msg.value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":6503:6513  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":6495:6539  Deposit(msg.sender, NATIVE_TOKEN, msg.value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62\n        /* \"contracts/sweetspot.sol\":6529:6538  msg.value */\n      callvalue\n        /* \"contracts/sweetspot.sol\":6495:6539  Deposit(msg.sender, NATIVE_TOKEN, msg.value) */\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sweetspot.sol\":454:6704  contract sweetspot is OwnableUpgradeable, ReentrancyGuardUpgradeable  {... */\n      stop\n    tag_2:\n        /* \"contracts/sweetspot.sol\":6659:6693  revert(\"Sweetspot: use deposit()\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_29\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/sweetspot.sol\":2971:3903  function claim(address token) external nonReentrant {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      stop\n        /* \"contracts/sweetspot.sol\":566:615  address public constant NATIVE_TOKEN = address(0) */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sweetspot.sol\":2412:2886  function deposit(address token, uint256 amount) external payable nonReentrant  {... */\n    tag_5:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      stop\n        /* \"contracts/sweetspot.sol\":1977:2194  function initialize(address _scorer, address owner) external initializer {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      stop\n        /* \"contracts/sweetspot.sol\":622:643  IScorer public scorer */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sweetspot.sol\":883:908  Round public currentRound */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sweetspot.sol\":5261:5539  function setRound(uint64  start, uint64  end, string memory metadataURI) external onlyAdmin {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      stop\n        /* \"contracts/sweetspot.sol\":1097:1166  mapping(address => mapping(address => uint256)) public allowedAmounts */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sweetspot.sol\":999:1047  mapping(address => uint256) public totalBalances */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sweetspot.sol\":4135:4396  function setAllowedAmount(address user, address token, uint256 amount) external onlyAdmin {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n    tag_83:\n      stop\n        /* \"contracts/sweetspot.sol\":4495:5012  function bulkSetAllowedAmount(... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      tag_91\n      jump\t// in\n    tag_88:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n    tag_93:\n      stop\n        /* \"contracts/sweetspot.sol\":5744:6322  function withdraw(address token, uint256 amount) external onlyOwner nonReentrant  {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n    tag_97:\n      stop\n        /* \"contracts/sweetspot.sol\":2971:3903  function claim(address token) external nonReentrant {... */\n    tag_35:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2547  _nonReentrantBefore() */\n      tag_101\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2545  _nonReentrantBefore */\n      tag_102\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2547  _nonReentrantBefore() */\n      jump\t// in\n    tag_101:\n        /* \"contracts/sweetspot.sol\":3066:3078  currentRound */\n      0x33\n        /* \"contracts/sweetspot.sol\":3066:3084  currentRound.start */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":3048:3084  block.timestamp < currentRound.start */\n      0xffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":3048:3063  block.timestamp */\n      timestamp\n        /* \"contracts/sweetspot.sol\":3048:3084  block.timestamp < currentRound.start */\n      lt\n        /* \"contracts/sweetspot.sol\":3048:3122  block.timestamp < currentRound.start || block.timestamp > currentRound.end */\n      dup1\n      tag_104\n      jumpi\n      pop\n        /* \"contracts/sweetspot.sol\":3106:3118  currentRound */\n      0x33\n        /* \"contracts/sweetspot.sol\":3106:3122  currentRound.end */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":3088:3122  block.timestamp > currentRound.end */\n      0xffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":3088:3103  block.timestamp */\n      timestamp\n        /* \"contracts/sweetspot.sol\":3088:3122  block.timestamp > currentRound.end */\n      gt\n        /* \"contracts/sweetspot.sol\":3048:3122  block.timestamp < currentRound.start || block.timestamp > currentRound.end */\n    tag_104:\n        /* \"contracts/sweetspot.sol\":3044:3227  if (block.timestamp < currentRound.start || block.timestamp > currentRound.end) {... */\n      iszero\n      tag_105\n      jumpi\n        /* \"contracts/sweetspot.sol\":3161:3176  block.timestamp */\n      timestamp\n        /* \"contracts/sweetspot.sol\":3178:3190  currentRound */\n      0x33\n        /* \"contracts/sweetspot.sol\":3178:3196  currentRound.start */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":3198:3210  currentRound */\n      0x33\n        /* \"contracts/sweetspot.sol\":3198:3214  currentRound.end */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":3146:3215  NotWithinRound(block.timestamp, currentRound.start, currentRound.end) */\n      mload(0x40)\n      0xfa7410d400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/sweetspot.sol\":3044:3227  if (block.timestamp < currentRound.start || block.timestamp > currentRound.end) {... */\n    tag_105:\n        /* \"contracts/sweetspot.sol\":3239:3264  uint256 userAllowedAmount */\n      0x00\n        /* \"contracts/sweetspot.sol\":3267:3281  allowedAmounts */\n      0x36\n        /* \"contracts/sweetspot.sol\":3267:3293  allowedAmounts[msg.sender] */\n      0x00\n        /* \"contracts/sweetspot.sol\":3282:3292  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":3267:3293  allowedAmounts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sweetspot.sol\":3267:3300  allowedAmounts[msg.sender][token] */\n      0x00\n        /* \"contracts/sweetspot.sol\":3294:3299  token */\n      dup4\n        /* \"contracts/sweetspot.sol\":3267:3300  allowedAmounts[msg.sender][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sweetspot.sol\":3239:3300  uint256 userAllowedAmount = allowedAmounts[msg.sender][token] */\n      swap1\n      pop\n        /* \"contracts/sweetspot.sol\":3339:3340  0 */\n      0x00\n        /* \"contracts/sweetspot.sol\":3319:3336  userAllowedAmount */\n      dup2\n        /* \"contracts/sweetspot.sol\":3319:3340  userAllowedAmount > 0 */\n      gt\n        /* \"contracts/sweetspot.sol\":3311:3364  require(userAllowedAmount > 0, \"No claimable amount\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_108:\n        /* \"contracts/sweetspot.sol\":3407:3424  userAllowedAmount */\n      dup1\n        /* \"contracts/sweetspot.sol\":3383:3396  totalBalances */\n      0x35\n        /* \"contracts/sweetspot.sol\":3383:3403  totalBalances[token] */\n      0x00\n        /* \"contracts/sweetspot.sol\":3397:3402  token */\n      dup5\n        /* \"contracts/sweetspot.sol\":3383:3403  totalBalances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sweetspot.sol\":3383:3424  totalBalances[token] >= userAllowedAmount */\n      lt\n      iszero\n        /* \"contracts/sweetspot.sol\":3375:3454  require(totalBalances[token] >= userAllowedAmount, \"Insufficient funds in jar\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \"contracts/sweetspot.sol\":3503:3504  0 */\n      0x00\n        /* \"contracts/sweetspot.sol\":3467:3481  allowedAmounts */\n      0x36\n        /* \"contracts/sweetspot.sol\":3467:3493  allowedAmounts[msg.sender] */\n      0x00\n        /* \"contracts/sweetspot.sol\":3482:3492  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":3467:3493  allowedAmounts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sweetspot.sol\":3467:3500  allowedAmounts[msg.sender][token] */\n      0x00\n        /* \"contracts/sweetspot.sol\":3494:3499  token */\n      dup5\n        /* \"contracts/sweetspot.sol\":3467:3500  allowedAmounts[msg.sender][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sweetspot.sol\":3467:3504  allowedAmounts[msg.sender][token] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sweetspot.sol\":3539:3556  userAllowedAmount */\n      dup1\n        /* \"contracts/sweetspot.sol\":3515:3528  totalBalances */\n      0x35\n        /* \"contracts/sweetspot.sol\":3515:3535  totalBalances[token] */\n      0x00\n        /* \"contracts/sweetspot.sol\":3529:3534  token */\n      dup5\n        /* \"contracts/sweetspot.sol\":3515:3535  totalBalances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/sweetspot.sol\":3515:3556  totalBalances[token] -= userAllowedAmount */\n      dup3\n      dup3\n      sload\n      tag_114\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sweetspot.sol\":613:614  0 */\n      0x00\n        /* \"contracts/sweetspot.sol\":3573:3594  token == NATIVE_TOKEN */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":3573:3578  token */\n      dup3\n        /* \"contracts/sweetspot.sol\":3573:3594  token == NATIVE_TOKEN */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/sweetspot.sol\":3569:3833  if (token == NATIVE_TOKEN) {... */\n      tag_116\n      jumpi\n        /* \"contracts/sweetspot.sol\":3612:3624  bool success */\n      0x00\n        /* \"contracts/sweetspot.sol\":3630:3640  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":3630:3645  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":3653:3670  userAllowedAmount */\n      dup3\n        /* \"contracts/sweetspot.sol\":3630:3675  msg.sender.call{value: userAllowedAmount}(\"\") */\n      mload(0x40)\n      tag_117\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_121\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_120)\n    tag_121:\n      0x60\n      swap2\n      pop\n    tag_120:\n      pop\n        /* \"contracts/sweetspot.sol\":3611:3675  (bool success, ) = msg.sender.call{value: userAllowedAmount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/sweetspot.sol\":3698:3705  success */\n      dup1\n        /* \"contracts/sweetspot.sol\":3690:3731  require(success, \"Ether transfer failed\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \"contracts/sweetspot.sol\":3596:3743  {... */\n      pop\n        /* \"contracts/sweetspot.sol\":3569:3833  if (token == NATIVE_TOKEN) {... */\n      jump(tag_125)\n    tag_116:\n        /* \"contracts/sweetspot.sol\":3764:3821  IERC20(token).safeTransfer(msg.sender, userAllowedAmount) */\n      tag_126\n        /* \"contracts/sweetspot.sol\":3791:3801  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":3803:3820  userAllowedAmount */\n      dup3\n        /* \"contracts/sweetspot.sol\":3771:3776  token */\n      dup5\n        /* \"contracts/sweetspot.sol\":3764:3790  IERC20(token).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_127\n      swap1\n        /* \"contracts/sweetspot.sol\":3764:3821  IERC20(token).safeTransfer(msg.sender, userAllowedAmount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_126:\n        /* \"contracts/sweetspot.sol\":3569:3833  if (token == NATIVE_TOKEN) {... */\n    tag_125:\n        /* \"contracts/sweetspot.sol\":3870:3875  token */\n      dup2\n        /* \"contracts/sweetspot.sol\":3850:3895  Claimed(msg.sender, token, userAllowedAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":3858:3868  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":3850:3895  Claimed(msg.sender, token, userAllowedAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf7a40077ff7a04c7e61f6f26fb13774259ddf1b6bce9ecf26a8276cdd3992683\n        /* \"contracts/sweetspot.sol\":3877:3894  userAllowedAmount */\n      dup4\n        /* \"contracts/sweetspot.sol\":3850:3895  Claimed(msg.sender, token, userAllowedAmount) */\n      mload(0x40)\n      tag_128\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sweetspot.sol\":3023:3903  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2588  _nonReentrantAfter() */\n      tag_129\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2586  _nonReentrantAfter */\n      tag_130\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2588  _nonReentrantAfter() */\n      jump\t// in\n    tag_129:\n        /* \"contracts/sweetspot.sol\":2971:3903  function claim(address token) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":566:615  address public constant NATIVE_TOKEN = address(0) */\n    tag_38:\n        /* \"contracts/sweetspot.sol\":613:614  0 */\n      0x00\n        /* \"contracts/sweetspot.sol\":566:615  address public constant NATIVE_TOKEN = address(0) */\n      dup2\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":2412:2886  function deposit(address token, uint256 amount) external payable nonReentrant  {... */\n    tag_44:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2547  _nonReentrantBefore() */\n      tag_132\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2545  _nonReentrantBefore */\n      tag_102\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2547  _nonReentrantBefore() */\n      jump\t// in\n    tag_132:\n        /* \"contracts/sweetspot.sol\":613:614  0 */\n      0x00\n        /* \"contracts/sweetspot.sol\":2506:2527  token == NATIVE_TOKEN */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":2506:2511  token */\n      dup3\n        /* \"contracts/sweetspot.sol\":2506:2527  token == NATIVE_TOKEN */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/sweetspot.sol\":2502:2786  if (token == NATIVE_TOKEN) {... */\n      tag_134\n      jumpi\n        /* \"contracts/sweetspot.sol\":2565:2571  amount */\n      dup1\n        /* \"contracts/sweetspot.sol\":2552:2561  msg.value */\n      callvalue\n        /* \"contracts/sweetspot.sol\":2552:2571  msg.value == amount */\n      eq\n        /* \"contracts/sweetspot.sol\":2544:2598  require(msg.value == amount, \"Incorrect Ether amount\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"contracts/sweetspot.sol\":2502:2786  if (token == NATIVE_TOKEN) {... */\n      jump(tag_138)\n    tag_134:\n        /* \"contracts/sweetspot.sol\":2648:2649  0 */\n      0x00\n        /* \"contracts/sweetspot.sol\":2639:2645  amount */\n      dup2\n        /* \"contracts/sweetspot.sol\":2639:2649  amount > 0 */\n      gt\n        /* \"contracts/sweetspot.sol\":2631:2694  require(amount > 0, \"Deposit amount must be greater than zero\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_139:\n        /* \"contracts/sweetspot.sol\":2709:2774  IERC20(token).safeTransferFrom(msg.sender, address(this), amount) */\n      tag_142\n        /* \"contracts/sweetspot.sol\":2740:2750  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":2760:2764  this */\n      address\n        /* \"contracts/sweetspot.sol\":2767:2773  amount */\n      dup4\n        /* \"contracts/sweetspot.sol\":2716:2721  token */\n      dup6\n        /* \"contracts/sweetspot.sol\":2709:2739  IERC20(token).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_143\n      swap1\n        /* \"contracts/sweetspot.sol\":2709:2774  IERC20(token).safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_142:\n        /* \"contracts/sweetspot.sol\":2502:2786  if (token == NATIVE_TOKEN) {... */\n    tag_138:\n        /* \"contracts/sweetspot.sol\":2822:2828  amount */\n      dup1\n        /* \"contracts/sweetspot.sol\":2798:2811  totalBalances */\n      0x35\n        /* \"contracts/sweetspot.sol\":2798:2818  totalBalances[token] */\n      0x00\n        /* \"contracts/sweetspot.sol\":2812:2817  token */\n      dup5\n        /* \"contracts/sweetspot.sol\":2798:2818  totalBalances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/sweetspot.sol\":2798:2828  totalBalances[token] += amount */\n      dup3\n      dup3\n      sload\n      tag_144\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_144:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sweetspot.sol\":2864:2869  token */\n      dup2\n        /* \"contracts/sweetspot.sol\":2844:2878  Deposit(msg.sender, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":2852:2862  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":2844:2878  Deposit(msg.sender, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62\n        /* \"contracts/sweetspot.sol\":2871:2877  amount */\n      dup4\n        /* \"contracts/sweetspot.sol\":2844:2878  Deposit(msg.sender, token, amount) */\n      mload(0x40)\n      tag_145\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2588  _nonReentrantAfter() */\n      tag_146\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2586  _nonReentrantAfter */\n      tag_130\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2588  _nonReentrantAfter() */\n      jump\t// in\n    tag_146:\n        /* \"contracts/sweetspot.sol\":2412:2886  function deposit(address token, uint256 amount) external payable nonReentrant  {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":1977:2194  function initialize(address _scorer, address owner) external initializer {... */\n    tag_49:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_148\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_149\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4723  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4741:4742  0 */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4737  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_150\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_150:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_151\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4839:4840  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_151:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_152\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_152:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_153\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_153:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4952  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4965  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4983:4997  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      iszero\n      tag_154\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5031:5035  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5014  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5028  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_154:\n        /* \"contracts/sweetspot.sol\":2061:2082  __Ownable_init(owner) */\n      tag_156\n        /* \"contracts/sweetspot.sol\":2076:2081  owner */\n      dup7\n        /* \"contracts/sweetspot.sol\":2061:2075  __Ownable_init */\n      tag_157\n        /* \"contracts/sweetspot.sol\":2061:2082  __Ownable_init(owner) */\n      jump\t// in\n    tag_156:\n        /* \"contracts/sweetspot.sol\":2126:2150  __ReentrancyGuard_init() */\n      tag_158\n        /* \"contracts/sweetspot.sol\":2126:2148  __ReentrancyGuard_init */\n      tag_159\n        /* \"contracts/sweetspot.sol\":2126:2150  __ReentrancyGuard_init() */\n      jump\t// in\n    tag_158:\n        /* \"contracts/sweetspot.sol\":2178:2185  _scorer */\n      dup7\n        /* \"contracts/sweetspot.sol\":2161:2167  scorer */\n      0x32\n      0x00\n        /* \"contracts/sweetspot.sol\":2161:2186  scorer = IScorer(_scorer) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5070:5084  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      iszero\n      tag_160\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5118:5123  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5101  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5115  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5154:5155  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      tag_161\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_160:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/sweetspot.sol\":1977:2194  function initialize(address _scorer, address owner) external initializer {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_52:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_164\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_165\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_167\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_168\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":622:643  IScorer public scorer */\n    tag_55:\n      0x32\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":883:908  Round public currentRound */\n    tag_60:\n      0x33\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      dup1\n      sload\n      tag_169\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_171\n      swap1\n      tag_170\n      jump\t// in\n    tag_171:\n      dup1\n      iszero\n      tag_172\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_173\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_172)\n    tag_173:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_174:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_174\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_172:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_65:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2487:2494  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2530  OwnableStorage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      tag_176\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2551  _getOwnableStorage */\n      tag_177\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2553  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2571  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2563:2578  return $._owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":5261:5539  function setRound(uint64  start, uint64  end, string memory metadataURI) external onlyAdmin {... */\n    tag_71:\n        /* \"contracts/sweetspot.sol\":1725:1731  scorer */\n      0x32\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":1725:1739  scorer.isAdmin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x24d7806c\n        /* \"contracts/sweetspot.sol\":1740:1750  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":1725:1751  scorer.isAdmin(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_179:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_181\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_181:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_182\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n        /* \"contracts/sweetspot.sol\":1717:1778  require(scorer.isAdmin(msg.sender), \"Caller is not an admin\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_184:\n        /* \"contracts/sweetspot.sol\":5380:5383  end */\n      dup2\n        /* \"contracts/sweetspot.sol\":5372:5383  start < end */\n      0xffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":5372:5377  start */\n      dup4\n        /* \"contracts/sweetspot.sol\":5372:5383  start < end */\n      0xffffffffffffffff\n      and\n      lt\n        /* \"contracts/sweetspot.sol\":5364:5422  require(start < end, \"Start time must be before end time\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_188:\n        /* \"contracts/sweetspot.sol\":5448:5478  Round(start, end, metadataURI) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/sweetspot.sol\":5454:5459  start */\n      dup5\n        /* \"contracts/sweetspot.sol\":5448:5478  Round(start, end, metadataURI) */\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/sweetspot.sol\":5461:5464  end */\n      dup4\n        /* \"contracts/sweetspot.sol\":5448:5478  Round(start, end, metadataURI) */\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/sweetspot.sol\":5466:5477  metadataURI */\n      dup3\n        /* \"contracts/sweetspot.sol\":5448:5478  Round(start, end, metadataURI) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/sweetspot.sol\":5433:5445  currentRound */\n      0x33\n        /* \"contracts/sweetspot.sol\":5433:5478  currentRound = Round(start, end, metadataURI) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x08)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      swap1\n      dup2\n      tag_191\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/sweetspot.sol\":5494:5531  RoundUpdated(start, end, metadataURI) */\n      0x09e6db48f22357e6dce2bbff89db8ff25f0012a08186d6ea72e2343fdc112e13\n        /* \"contracts/sweetspot.sol\":5507:5512  start */\n      dup4\n        /* \"contracts/sweetspot.sol\":5514:5517  end */\n      dup4\n        /* \"contracts/sweetspot.sol\":5519:5530  metadataURI */\n      dup4\n        /* \"contracts/sweetspot.sol\":5494:5531  RoundUpdated(start, end, metadataURI) */\n      mload(0x40)\n      tag_193\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/sweetspot.sol\":5261:5539  function setRound(uint64  start, uint64  end, string memory metadataURI) external onlyAdmin {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":1097:1166  mapping(address => mapping(address => uint256)) public allowedAmounts */\n    tag_75:\n      mstore(0x20, 0x36)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":999:1047  mapping(address => uint256) public totalBalances */\n    tag_80:\n      mstore(0x20, 0x35)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":4135:4396  function setAllowedAmount(address user, address token, uint256 amount) external onlyAdmin {... */\n    tag_86:\n        /* \"contracts/sweetspot.sol\":1725:1731  scorer */\n      0x32\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":1725:1739  scorer.isAdmin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x24d7806c\n        /* \"contracts/sweetspot.sol\":1740:1750  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":1725:1751  scorer.isAdmin(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_196:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_198\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_198:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_199\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_199:\n        /* \"contracts/sweetspot.sol\":1717:1778  require(scorer.isAdmin(msg.sender), \"Caller is not an admin\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_186\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_200:\n        /* \"contracts/sweetspot.sol\":4260:4261  0 */\n      0x00\n        /* \"contracts/sweetspot.sol\":4244:4262  user != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":4244:4248  user */\n      dup4\n        /* \"contracts/sweetspot.sol\":4244:4262  user != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/sweetspot.sol\":4236:4284  require(user != address(0), \"Zero address user\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_203:\n        /* \"contracts/sweetspot.sol\":4325:4331  amount */\n      dup1\n        /* \"contracts/sweetspot.sol\":4295:4309  allowedAmounts */\n      0x36\n        /* \"contracts/sweetspot.sol\":4295:4315  allowedAmounts[user] */\n      0x00\n        /* \"contracts/sweetspot.sol\":4310:4314  user */\n      dup6\n        /* \"contracts/sweetspot.sol\":4295:4315  allowedAmounts[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sweetspot.sol\":4295:4322  allowedAmounts[user][token] */\n      0x00\n        /* \"contracts/sweetspot.sol\":4316:4321  token */\n      dup5\n        /* \"contracts/sweetspot.sol\":4295:4322  allowedAmounts[user][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sweetspot.sol\":4295:4331  allowedAmounts[user][token] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sweetspot.sol\":4374:4379  token */\n      dup2\n        /* \"contracts/sweetspot.sol\":4347:4388  AllowedAmountUpdated(user, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":4368:4372  user */\n      dup4\n        /* \"contracts/sweetspot.sol\":4347:4388  AllowedAmountUpdated(user, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3d0601f3b0e52fd772f1fa71d91651b34b6a11144bea30d74e0f820019a04dc2\n        /* \"contracts/sweetspot.sol\":4381:4387  amount */\n      dup4\n        /* \"contracts/sweetspot.sol\":4347:4388  AllowedAmountUpdated(user, token, amount) */\n      mload(0x40)\n      tag_206\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sweetspot.sol\":4135:4396  function setAllowedAmount(address user, address token, uint256 amount) external onlyAdmin {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":4495:5012  function bulkSetAllowedAmount(... */\n    tag_91:\n        /* \"contracts/sweetspot.sol\":1725:1731  scorer */\n      0x32\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":1725:1739  scorer.isAdmin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x24d7806c\n        /* \"contracts/sweetspot.sol\":1740:1750  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":1725:1751  scorer.isAdmin(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_208:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_210\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_210:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_211\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_211:\n        /* \"contracts/sweetspot.sol\":1717:1778  require(scorer.isAdmin(msg.sender), \"Caller is not an admin\") */\n      tag_212\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap1\n      tag_186\n      jump\t// in\n    tag_213:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_212:\n        /* \"contracts/sweetspot.sol\":4682:4689  amounts */\n      dup2\n      dup2\n        /* \"contracts/sweetspot.sol\":4682:4696  amounts.length */\n      swap1\n      pop\n        /* \"contracts/sweetspot.sol\":4666:4671  users */\n      dup5\n      dup5\n        /* \"contracts/sweetspot.sol\":4666:4678  users.length */\n      swap1\n      pop\n        /* \"contracts/sweetspot.sol\":4666:4696  users.length == amounts.length */\n      eq\n        /* \"contracts/sweetspot.sol\":4658:4725  require(users.length == amounts.length, \"Mismatched array lengths\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_216\n      swap1\n      tag_217\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_215:\n        /* \"contracts/sweetspot.sol\":4741:4750  uint256 i */\n      0x00\n        /* \"contracts/sweetspot.sol\":4736:5005  for (uint256 i = 0; i < users.length; i++) {... */\n    tag_218:\n        /* \"contracts/sweetspot.sol\":4760:4765  users */\n      dup5\n      dup5\n        /* \"contracts/sweetspot.sol\":4760:4772  users.length */\n      swap1\n      pop\n        /* \"contracts/sweetspot.sol\":4756:4757  i */\n      dup2\n        /* \"contracts/sweetspot.sol\":4756:4772  i < users.length */\n      lt\n        /* \"contracts/sweetspot.sol\":4736:5005  for (uint256 i = 0; i < users.length; i++) {... */\n      iszero\n      tag_219\n      jumpi\n        /* \"contracts/sweetspot.sol\":4914:4921  amounts */\n      dup3\n      dup3\n        /* \"contracts/sweetspot.sol\":4922:4923  i */\n      dup3\n        /* \"contracts/sweetspot.sol\":4914:4924  amounts[i] */\n      dup2\n      dup2\n      lt\n      tag_221\n      jumpi\n      tag_222\n      tag_223\n      jump\t// in\n    tag_222:\n    tag_221:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/sweetspot.sol\":4880:4894  allowedAmounts */\n      0x36\n        /* \"contracts/sweetspot.sol\":4880:4904  allowedAmounts[users[i]] */\n      0x00\n        /* \"contracts/sweetspot.sol\":4895:4900  users */\n      dup8\n      dup8\n        /* \"contracts/sweetspot.sol\":4901:4902  i */\n      dup6\n        /* \"contracts/sweetspot.sol\":4895:4903  users[i] */\n      dup2\n      dup2\n      lt\n      tag_224\n      jumpi\n      tag_225\n      tag_223\n      jump\t// in\n    tag_225:\n    tag_224:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_226\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_226:\n        /* \"contracts/sweetspot.sol\":4880:4904  allowedAmounts[users[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sweetspot.sol\":4880:4911  allowedAmounts[users[i]][token] */\n      0x00\n        /* \"contracts/sweetspot.sol\":4905:4910  token */\n      dup9\n        /* \"contracts/sweetspot.sol\":4880:4911  allowedAmounts[users[i]][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sweetspot.sol\":4880:4924  allowedAmounts[users[i]][token] = amounts[i] */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sweetspot.sol\":4975:4980  token */\n      dup6\n        /* \"contracts/sweetspot.sol\":4944:4993  AllowedAmountUpdated(users[i], token, amounts[i]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":4965:4970  users */\n      dup6\n      dup6\n        /* \"contracts/sweetspot.sol\":4971:4972  i */\n      dup4\n        /* \"contracts/sweetspot.sol\":4965:4973  users[i] */\n      dup2\n      dup2\n      lt\n      tag_227\n      jumpi\n      tag_228\n      tag_223\n      jump\t// in\n    tag_228:\n    tag_227:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_229\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_229:\n        /* \"contracts/sweetspot.sol\":4944:4993  AllowedAmountUpdated(users[i], token, amounts[i]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3d0601f3b0e52fd772f1fa71d91651b34b6a11144bea30d74e0f820019a04dc2\n        /* \"contracts/sweetspot.sol\":4982:4989  amounts */\n      dup6\n      dup6\n        /* \"contracts/sweetspot.sol\":4990:4991  i */\n      dup6\n        /* \"contracts/sweetspot.sol\":4982:4992  amounts[i] */\n      dup2\n      dup2\n      lt\n      tag_230\n      jumpi\n      tag_231\n      tag_223\n      jump\t// in\n    tag_231:\n    tag_230:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/sweetspot.sol\":4944:4993  AllowedAmountUpdated(users[i], token, amounts[i]) */\n      mload(0x40)\n      tag_232\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sweetspot.sol\":4774:4777  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/sweetspot.sol\":4736:5005  for (uint256 i = 0; i < users.length; i++) {... */\n      jump(tag_218)\n    tag_219:\n      pop\n        /* \"contracts/sweetspot.sol\":4495:5012  function bulkSetAllowedAmount(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_95:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_234\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_165\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_234:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3509:3510  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3497  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_236\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_237:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_236:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_238\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_168\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_238:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":5744:6322  function withdraw(address token, uint256 amount) external onlyOwner nonReentrant  {... */\n    tag_99:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_240\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_165\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_240:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2547  _nonReentrantBefore() */\n      tag_242\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2545  _nonReentrantBefore */\n      tag_102\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2547  _nonReentrantBefore() */\n      jump\t// in\n    tag_242:\n        /* \"contracts/sweetspot.sol\":5854:5855  0 */\n      0x00\n        /* \"contracts/sweetspot.sol\":5845:5851  amount */\n      dup2\n        /* \"contracts/sweetspot.sol\":5845:5855  amount > 0 */\n      gt\n        /* \"contracts/sweetspot.sol\":5837:5903  require(amount > 0, \"Withdrawal amount must be greater than zero\") */\n      tag_244\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_245\n      swap1\n      tag_246\n      jump\t// in\n    tag_245:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_244:\n        /* \"contracts/sweetspot.sol\":5946:5952  amount */\n      dup1\n        /* \"contracts/sweetspot.sol\":5922:5935  totalBalances */\n      0x35\n        /* \"contracts/sweetspot.sol\":5922:5942  totalBalances[token] */\n      0x00\n        /* \"contracts/sweetspot.sol\":5936:5941  token */\n      dup5\n        /* \"contracts/sweetspot.sol\":5922:5942  totalBalances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sweetspot.sol\":5922:5952  totalBalances[token] >= amount */\n      lt\n      iszero\n        /* \"contracts/sweetspot.sol\":5914:5975  require(totalBalances[token] >= amount, \"Insufficient funds\") */\n      tag_247\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_248\n      swap1\n      tag_249\n      jump\t// in\n    tag_248:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_247:\n        /* \"contracts/sweetspot.sol\":6012:6018  amount */\n      dup1\n        /* \"contracts/sweetspot.sol\":5988:6001  totalBalances */\n      0x35\n        /* \"contracts/sweetspot.sol\":5988:6008  totalBalances[token] */\n      0x00\n        /* \"contracts/sweetspot.sol\":6002:6007  token */\n      dup5\n        /* \"contracts/sweetspot.sol\":5988:6008  totalBalances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/sweetspot.sol\":5988:6018  totalBalances[token] -= amount */\n      dup3\n      dup3\n      sload\n      tag_250\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_250:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sweetspot.sol\":613:614  0 */\n      0x00\n        /* \"contracts/sweetspot.sol\":6035:6056  token == NATIVE_TOKEN */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":6035:6040  token */\n      dup3\n        /* \"contracts/sweetspot.sol\":6035:6056  token == NATIVE_TOKEN */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/sweetspot.sol\":6031:6267  if (token == NATIVE_TOKEN) {... */\n      tag_251\n      jumpi\n        /* \"contracts/sweetspot.sol\":6074:6086  bool success */\n      0x00\n        /* \"contracts/sweetspot.sol\":6092:6099  owner() */\n      tag_252\n        /* \"contracts/sweetspot.sol\":6092:6097  owner */\n      tag_65\n        /* \"contracts/sweetspot.sol\":6092:6099  owner() */\n      jump\t// in\n    tag_252:\n        /* \"contracts/sweetspot.sol\":6092:6104  owner().call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":6112:6118  amount */\n      dup3\n        /* \"contracts/sweetspot.sol\":6092:6123  owner().call{value: amount}(\"\") */\n      mload(0x40)\n      tag_253\n      swap1\n      tag_118\n      jump\t// in\n    tag_253:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_256\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_255)\n    tag_256:\n      0x60\n      swap2\n      pop\n    tag_255:\n      pop\n        /* \"contracts/sweetspot.sol\":6073:6123  (bool success, ) = owner().call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/sweetspot.sol\":6146:6153  success */\n      dup1\n        /* \"contracts/sweetspot.sol\":6138:6179  require(success, \"Ether transfer failed\") */\n      tag_257\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_258\n      swap1\n      tag_124\n      jump\t// in\n    tag_258:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_257:\n        /* \"contracts/sweetspot.sol\":6058:6191  {... */\n      pop\n        /* \"contracts/sweetspot.sol\":6031:6267  if (token == NATIVE_TOKEN) {... */\n      jump(tag_259)\n    tag_251:\n        /* \"contracts/sweetspot.sol\":6212:6255  IERC20(token).safeTransfer(owner(), amount) */\n      tag_260\n        /* \"contracts/sweetspot.sol\":6239:6246  owner() */\n      tag_261\n        /* \"contracts/sweetspot.sol\":6239:6244  owner */\n      tag_65\n        /* \"contracts/sweetspot.sol\":6239:6246  owner() */\n      jump\t// in\n    tag_261:\n        /* \"contracts/sweetspot.sol\":6248:6254  amount */\n      dup3\n        /* \"contracts/sweetspot.sol\":6219:6224  token */\n      dup5\n        /* \"contracts/sweetspot.sol\":6212:6238  IERC20(token).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_127\n      swap1\n        /* \"contracts/sweetspot.sol\":6212:6255  IERC20(token).safeTransfer(owner(), amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_260:\n        /* \"contracts/sweetspot.sol\":6031:6267  if (token == NATIVE_TOKEN) {... */\n    tag_259:\n        /* \"contracts/sweetspot.sol\":6300:6305  token */\n      dup2\n        /* \"contracts/sweetspot.sol\":6282:6314  Withdraw(owner(), token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":6291:6298  owner() */\n      tag_262\n        /* \"contracts/sweetspot.sol\":6291:6296  owner */\n      tag_65\n        /* \"contracts/sweetspot.sol\":6291:6298  owner() */\n      jump\t// in\n    tag_262:\n        /* \"contracts/sweetspot.sol\":6282:6314  Withdraw(owner(), token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb\n        /* \"contracts/sweetspot.sol\":6307:6313  amount */\n      dup4\n        /* \"contracts/sweetspot.sol\":6282:6314  Withdraw(owner(), token, amount) */\n      mload(0x40)\n      tag_263\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_263:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2588  _nonReentrantAfter() */\n      tag_264\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2586  _nonReentrantAfter */\n      tag_130\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2588  _nonReentrantAfter() */\n      jump\t// in\n    tag_264:\n        /* \"contracts/sweetspot.sol\":5744:6322  function withdraw(address token, uint256 amount) external onlyOwner nonReentrant  {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2601:2888  function _nonReentrantBefore() private {... */\n    tag_102:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1851:1852  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2733:2740  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2733:2752  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2725:2788  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_266\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_267\n      swap1\n      tag_268\n      jump\t// in\n    tag_267:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_266:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1851:1852  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2863:2870  _status */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2863:2881  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2601:2888  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1271:1431  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1424  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_270\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1373:1378  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1395:1400  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1395:1409  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1414  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1416:1421  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1380:1423  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_271\n      swap3\n      swap2\n      swap1\n      tag_272\n      jump\t// in\n    tag_271:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1372  _callOptionalReturn */\n      tag_273\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1424  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1271:1431  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2894:3103  function _nonReentrantAfter() private {... */\n    tag_130:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1808:1809  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":3074:3081  _status */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":3074:3096  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2894:3103  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1670:1858  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1770:1851  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_276\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1790:1795  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1812:1817  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1812:1830  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1833:1837  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1839:1841  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1843:1848  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1797:1850  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_277\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_278\n      jump\t// in\n    tag_277:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1770:1789  _callOptionalReturn */\n      tag_273\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1770:1851  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_276:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1670:1858  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8795:8825  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8860:8891  $.slot := INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_157:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_281\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_282\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_281:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      tag_284\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n      tag_285\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n    tag_284:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1889:2000  function __ReentrancyGuard_init() internal onlyInitializing {... */\n    tag_159:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_287\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_282\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_287:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1959:1993  __ReentrancyGuard_init_unchained() */\n      tag_289\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1959:1991  __ReentrancyGuard_init_unchained */\n      tag_290\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1959:1993  __ReentrancyGuard_init_unchained() */\n      jump\t// in\n    tag_289:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1889:2000  function __ReentrancyGuard_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_165:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      tag_292\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2738  _msgSender */\n      tag_293\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      jump\t// in\n    tag_292:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_294\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2722  owner */\n      tag_65\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      jump\t// in\n    tag_294:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_295\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      tag_296\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2800  _msgSender */\n      tag_293\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      jump\t// in\n    tag_296:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_297\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_297:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n    tag_295:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_168:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      tag_299\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3892  _getOwnableStorage */\n      tag_177\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      jump\t// in\n    tag_299:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3894  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3920  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3924  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3931  address oldOwner = $._owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3952:3960  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3942  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3949  $._owner */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4006:4014  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3996:4004  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n    tag_177:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1244:1268  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1303:1335  $.slot := OwnableStorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7738:8458  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7818:7836  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7846:7865  uint256 returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7984:7988  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7981:7982  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7974:7978  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7968:7979  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7961:7965  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7955:7959  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7951:7966  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7948:7949  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7941:7946  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7934:7939  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7929:7989  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8041:8048  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8031:8207  if iszero(success) {... */\n      tag_302\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8085:8089  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8079:8090  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8130:8146  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8127:8128  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8122:8125  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8107:8147  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8176:8192  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8171:8174  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8164:8193  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8031:8207  if iszero(success) {... */\n    tag_302:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8234:8250  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8220:8250  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8284:8285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8278:8286  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8263:8286  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7900:8296  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8324:8325  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8320  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8325  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_303\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8377:8378  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8362:8373  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8362:8378  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_304)\n    tag_303:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8358:8359  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8336:8341  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8328:8354  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8328:8359  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_304:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8452  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_305\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8434:8439  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8401:8441  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_306\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_306:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8452  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_305:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7808:8458  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7738:8458  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_282:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      tag_308\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7166  _isInitializing */\n      tag_309\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      jump\t// in\n    tag_308:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_310\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      0xd7e6bcf800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n    tag_310:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_285:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_312\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_282\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_312:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2100:2101  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2088  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n      tag_314\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2153:2154  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2125:2156  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_315\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_315:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n    tag_314:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      tag_316\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2195:2207  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2194  _transferOwnership */\n      tag_168\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      jump\t// in\n    tag_316:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2006:2115  function __ReentrancyGuard_init_unchained() internal onlyInitializing {... */\n    tag_290:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_318\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_282\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_318:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1808:1809  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2086:2093  _status */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2086:2108  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2006:2115  function __ReentrancyGuard_init_unchained() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n    tag_293:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":940:947  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":959:976  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n    tag_309:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8537:8541  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      tag_322\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8584  _getInitializableStorage */\n      tag_149\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      jump\t// in\n    tag_322:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8553:8600  return _getInitializableStorage()._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_323:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:270   */\n    tag_324:\n        /* \"#utility.yul\":138:215   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":128:216   */\n      mstore\n        /* \"#utility.yul\":235:239   */\n      0x11\n        /* \"#utility.yul\":232:233   */\n      0x04\n        /* \"#utility.yul\":225:240   */\n      mstore\n        /* \"#utility.yul\":259:263   */\n      0x24\n        /* \"#utility.yul\":256:257   */\n      0x00\n        /* \"#utility.yul\":249:264   */\n      revert\n        /* \"#utility.yul\":276:467   */\n    tag_24:\n        /* \"#utility.yul\":316:319   */\n      0x00\n        /* \"#utility.yul\":335:355   */\n      tag_419\n        /* \"#utility.yul\":353:354   */\n      dup3\n        /* \"#utility.yul\":335:355   */\n      tag_323\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":330:355   */\n      swap2\n      pop\n        /* \"#utility.yul\":369:389   */\n      tag_420\n        /* \"#utility.yul\":387:388   */\n      dup4\n        /* \"#utility.yul\":369:389   */\n      tag_323\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":364:389   */\n      swap3\n      pop\n        /* \"#utility.yul\":412:413   */\n      dup3\n        /* \"#utility.yul\":409:410   */\n      dup3\n        /* \"#utility.yul\":405:414   */\n      add\n        /* \"#utility.yul\":398:414   */\n      swap1\n      pop\n        /* \"#utility.yul\":433:436   */\n      dup1\n        /* \"#utility.yul\":430:431   */\n      dup3\n        /* \"#utility.yul\":427:437   */\n      gt\n        /* \"#utility.yul\":424:460   */\n      iszero\n      tag_421\n      jumpi\n        /* \"#utility.yul\":440:458   */\n      tag_422\n      tag_324\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":424:460   */\n    tag_421:\n        /* \"#utility.yul\":276:467   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":473:591   */\n    tag_325:\n        /* \"#utility.yul\":560:584   */\n      tag_424\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":560:584   */\n      tag_323\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":555:558   */\n      dup3\n        /* \"#utility.yul\":548:585   */\n      mstore\n        /* \"#utility.yul\":473:591   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":597:819   */\n    tag_26:\n        /* \"#utility.yul\":690:694   */\n      0x00\n        /* \"#utility.yul\":728:730   */\n      0x20\n        /* \"#utility.yul\":717:726   */\n      dup3\n        /* \"#utility.yul\":713:731   */\n      add\n        /* \"#utility.yul\":705:731   */\n      swap1\n      pop\n        /* \"#utility.yul\":741:812   */\n      tag_426\n        /* \"#utility.yul\":809:810   */\n      0x00\n        /* \"#utility.yul\":798:807   */\n      dup4\n        /* \"#utility.yul\":794:811   */\n      add\n        /* \"#utility.yul\":785:791   */\n      dup5\n        /* \"#utility.yul\":741:812   */\n      tag_325\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":597:819   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":825:994   */\n    tag_326:\n        /* \"#utility.yul\":909:920   */\n      0x00\n        /* \"#utility.yul\":943:949   */\n      dup3\n        /* \"#utility.yul\":938:941   */\n      dup3\n        /* \"#utility.yul\":931:950   */\n      mstore\n        /* \"#utility.yul\":983:987   */\n      0x20\n        /* \"#utility.yul\":978:981   */\n      dup3\n        /* \"#utility.yul\":974:988   */\n      add\n        /* \"#utility.yul\":959:988   */\n      swap1\n      pop\n        /* \"#utility.yul\":825:994   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1000:1174   */\n    tag_327:\n        /* \"#utility.yul\":1140:1166   */\n      0x537765657473706f743a20757365206465706f73697428290000000000000000\n        /* \"#utility.yul\":1136:1137   */\n      0x00\n        /* \"#utility.yul\":1128:1134   */\n      dup3\n        /* \"#utility.yul\":1124:1138   */\n      add\n        /* \"#utility.yul\":1117:1167   */\n      mstore\n        /* \"#utility.yul\":1000:1174   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1180:1546   */\n    tag_328:\n        /* \"#utility.yul\":1322:1325   */\n      0x00\n        /* \"#utility.yul\":1343:1410   */\n      tag_430\n        /* \"#utility.yul\":1407:1409   */\n      0x18\n        /* \"#utility.yul\":1402:1405   */\n      dup4\n        /* \"#utility.yul\":1343:1410   */\n      tag_326\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":1336:1410   */\n      swap2\n      pop\n        /* \"#utility.yul\":1419:1512   */\n      tag_431\n        /* \"#utility.yul\":1508:1511   */\n      dup3\n        /* \"#utility.yul\":1419:1512   */\n      tag_327\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":1537:1539   */\n      0x20\n        /* \"#utility.yul\":1532:1535   */\n      dup3\n        /* \"#utility.yul\":1528:1540   */\n      add\n        /* \"#utility.yul\":1521:1540   */\n      swap1\n      pop\n        /* \"#utility.yul\":1180:1546   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1552:1971   */\n    tag_30:\n        /* \"#utility.yul\":1718:1722   */\n      0x00\n        /* \"#utility.yul\":1756:1758   */\n      0x20\n        /* \"#utility.yul\":1745:1754   */\n      dup3\n        /* \"#utility.yul\":1741:1759   */\n      add\n        /* \"#utility.yul\":1733:1759   */\n      swap1\n      pop\n        /* \"#utility.yul\":1805:1814   */\n      dup2\n        /* \"#utility.yul\":1799:1803   */\n      dup2\n        /* \"#utility.yul\":1795:1815   */\n      sub\n        /* \"#utility.yul\":1791:1792   */\n      0x00\n        /* \"#utility.yul\":1780:1789   */\n      dup4\n        /* \"#utility.yul\":1776:1793   */\n      add\n        /* \"#utility.yul\":1769:1816   */\n      mstore\n        /* \"#utility.yul\":1833:1964   */\n      tag_433\n        /* \"#utility.yul\":1959:1963   */\n      dup2\n        /* \"#utility.yul\":1833:1964   */\n      tag_328\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":1825:1964   */\n      swap1\n      pop\n        /* \"#utility.yul\":1552:1971   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1977:2052   */\n    tag_329:\n        /* \"#utility.yul\":2010:2016   */\n      0x00\n        /* \"#utility.yul\":2043:2045   */\n      0x40\n        /* \"#utility.yul\":2037:2046   */\n      mload\n        /* \"#utility.yul\":2027:2046   */\n      swap1\n      pop\n        /* \"#utility.yul\":1977:2052   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":2058:2175   */\n    tag_330:\n        /* \"#utility.yul\":2167:2168   */\n      0x00\n        /* \"#utility.yul\":2164:2165   */\n      dup1\n        /* \"#utility.yul\":2157:2169   */\n      revert\n        /* \"#utility.yul\":2181:2298   */\n    tag_331:\n        /* \"#utility.yul\":2290:2291   */\n      0x00\n        /* \"#utility.yul\":2287:2288   */\n      dup1\n        /* \"#utility.yul\":2280:2292   */\n      revert\n        /* \"#utility.yul\":2304:2430   */\n    tag_332:\n        /* \"#utility.yul\":2341:2348   */\n      0x00\n        /* \"#utility.yul\":2381:2423   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2374:2379   */\n      dup3\n        /* \"#utility.yul\":2370:2424   */\n      and\n        /* \"#utility.yul\":2359:2424   */\n      swap1\n      pop\n        /* \"#utility.yul\":2304:2430   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2436:2532   */\n    tag_333:\n        /* \"#utility.yul\":2473:2480   */\n      0x00\n        /* \"#utility.yul\":2502:2526   */\n      tag_439\n        /* \"#utility.yul\":2520:2525   */\n      dup3\n        /* \"#utility.yul\":2502:2526   */\n      tag_332\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":2491:2526   */\n      swap1\n      pop\n        /* \"#utility.yul\":2436:2532   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2538:2660   */\n    tag_334:\n        /* \"#utility.yul\":2611:2635   */\n      tag_441\n        /* \"#utility.yul\":2629:2634   */\n      dup2\n        /* \"#utility.yul\":2611:2635   */\n      tag_333\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":2604:2609   */\n      dup2\n        /* \"#utility.yul\":2601:2636   */\n      eq\n        /* \"#utility.yul\":2591:2654   */\n      tag_442\n      jumpi\n        /* \"#utility.yul\":2650:2651   */\n      0x00\n        /* \"#utility.yul\":2647:2648   */\n      dup1\n        /* \"#utility.yul\":2640:2652   */\n      revert\n        /* \"#utility.yul\":2591:2654   */\n    tag_442:\n        /* \"#utility.yul\":2538:2660   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2666:2805   */\n    tag_335:\n        /* \"#utility.yul\":2712:2717   */\n      0x00\n        /* \"#utility.yul\":2750:2756   */\n      dup2\n        /* \"#utility.yul\":2737:2757   */\n      calldataload\n        /* \"#utility.yul\":2728:2757   */\n      swap1\n      pop\n        /* \"#utility.yul\":2766:2799   */\n      tag_444\n        /* \"#utility.yul\":2793:2798   */\n      dup2\n        /* \"#utility.yul\":2766:2799   */\n      tag_334\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":2666:2805   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2811:3140   */\n    tag_34:\n        /* \"#utility.yul\":2870:2876   */\n      0x00\n        /* \"#utility.yul\":2919:2921   */\n      0x20\n        /* \"#utility.yul\":2907:2916   */\n      dup3\n        /* \"#utility.yul\":2898:2905   */\n      dup5\n        /* \"#utility.yul\":2894:2917   */\n      sub\n        /* \"#utility.yul\":2890:2922   */\n      slt\n        /* \"#utility.yul\":2887:3006   */\n      iszero\n      tag_446\n      jumpi\n        /* \"#utility.yul\":2925:3004   */\n      tag_447\n      tag_330\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":2887:3006   */\n    tag_446:\n        /* \"#utility.yul\":3045:3046   */\n      0x00\n        /* \"#utility.yul\":3070:3123   */\n      tag_448\n        /* \"#utility.yul\":3115:3122   */\n      dup5\n        /* \"#utility.yul\":3106:3112   */\n      dup3\n        /* \"#utility.yul\":3095:3104   */\n      dup6\n        /* \"#utility.yul\":3091:3113   */\n      add\n        /* \"#utility.yul\":3070:3123   */\n      tag_335\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":3060:3123   */\n      swap2\n      pop\n        /* \"#utility.yul\":3016:3133   */\n      pop\n        /* \"#utility.yul\":2811:3140   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3146:3264   */\n    tag_336:\n        /* \"#utility.yul\":3233:3257   */\n      tag_450\n        /* \"#utility.yul\":3251:3256   */\n      dup2\n        /* \"#utility.yul\":3233:3257   */\n      tag_333\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":3228:3231   */\n      dup3\n        /* \"#utility.yul\":3221:3258   */\n      mstore\n        /* \"#utility.yul\":3146:3264   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3270:3492   */\n    tag_40:\n        /* \"#utility.yul\":3363:3367   */\n      0x00\n        /* \"#utility.yul\":3401:3403   */\n      0x20\n        /* \"#utility.yul\":3390:3399   */\n      dup3\n        /* \"#utility.yul\":3386:3404   */\n      add\n        /* \"#utility.yul\":3378:3404   */\n      swap1\n      pop\n        /* \"#utility.yul\":3414:3485   */\n      tag_452\n        /* \"#utility.yul\":3482:3483   */\n      0x00\n        /* \"#utility.yul\":3471:3480   */\n      dup4\n        /* \"#utility.yul\":3467:3484   */\n      add\n        /* \"#utility.yul\":3458:3464   */\n      dup5\n        /* \"#utility.yul\":3414:3485   */\n      tag_336\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":3270:3492   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3498:3620   */\n    tag_337:\n        /* \"#utility.yul\":3571:3595   */\n      tag_454\n        /* \"#utility.yul\":3589:3594   */\n      dup2\n        /* \"#utility.yul\":3571:3595   */\n      tag_323\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":3564:3569   */\n      dup2\n        /* \"#utility.yul\":3561:3596   */\n      eq\n        /* \"#utility.yul\":3551:3614   */\n      tag_455\n      jumpi\n        /* \"#utility.yul\":3610:3611   */\n      0x00\n        /* \"#utility.yul\":3607:3608   */\n      dup1\n        /* \"#utility.yul\":3600:3612   */\n      revert\n        /* \"#utility.yul\":3551:3614   */\n    tag_455:\n        /* \"#utility.yul\":3498:3620   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3626:3765   */\n    tag_338:\n        /* \"#utility.yul\":3672:3677   */\n      0x00\n        /* \"#utility.yul\":3710:3716   */\n      dup2\n        /* \"#utility.yul\":3697:3717   */\n      calldataload\n        /* \"#utility.yul\":3688:3717   */\n      swap1\n      pop\n        /* \"#utility.yul\":3726:3759   */\n      tag_457\n        /* \"#utility.yul\":3753:3758   */\n      dup2\n        /* \"#utility.yul\":3726:3759   */\n      tag_337\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":3626:3765   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3771:4245   */\n    tag_43:\n        /* \"#utility.yul\":3839:3845   */\n      0x00\n        /* \"#utility.yul\":3847:3853   */\n      dup1\n        /* \"#utility.yul\":3896:3898   */\n      0x40\n        /* \"#utility.yul\":3884:3893   */\n      dup4\n        /* \"#utility.yul\":3875:3882   */\n      dup6\n        /* \"#utility.yul\":3871:3894   */\n      sub\n        /* \"#utility.yul\":3867:3899   */\n      slt\n        /* \"#utility.yul\":3864:3983   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":3902:3981   */\n      tag_460\n      tag_330\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":3864:3983   */\n    tag_459:\n        /* \"#utility.yul\":4022:4023   */\n      0x00\n        /* \"#utility.yul\":4047:4100   */\n      tag_461\n        /* \"#utility.yul\":4092:4099   */\n      dup6\n        /* \"#utility.yul\":4083:4089   */\n      dup3\n        /* \"#utility.yul\":4072:4081   */\n      dup7\n        /* \"#utility.yul\":4068:4090   */\n      add\n        /* \"#utility.yul\":4047:4100   */\n      tag_335\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":4037:4100   */\n      swap3\n      pop\n        /* \"#utility.yul\":3993:4110   */\n      pop\n        /* \"#utility.yul\":4149:4151   */\n      0x20\n        /* \"#utility.yul\":4175:4228   */\n      tag_462\n        /* \"#utility.yul\":4220:4227   */\n      dup6\n        /* \"#utility.yul\":4211:4217   */\n      dup3\n        /* \"#utility.yul\":4200:4209   */\n      dup7\n        /* \"#utility.yul\":4196:4218   */\n      add\n        /* \"#utility.yul\":4175:4228   */\n      tag_338\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":4165:4228   */\n      swap2\n      pop\n        /* \"#utility.yul\":4120:4238   */\n      pop\n        /* \"#utility.yul\":3771:4245   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4251:4725   */\n    tag_48:\n        /* \"#utility.yul\":4319:4325   */\n      0x00\n        /* \"#utility.yul\":4327:4333   */\n      dup1\n        /* \"#utility.yul\":4376:4378   */\n      0x40\n        /* \"#utility.yul\":4364:4373   */\n      dup4\n        /* \"#utility.yul\":4355:4362   */\n      dup6\n        /* \"#utility.yul\":4351:4374   */\n      sub\n        /* \"#utility.yul\":4347:4379   */\n      slt\n        /* \"#utility.yul\":4344:4463   */\n      iszero\n      tag_464\n      jumpi\n        /* \"#utility.yul\":4382:4461   */\n      tag_465\n      tag_330\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":4344:4463   */\n    tag_464:\n        /* \"#utility.yul\":4502:4503   */\n      0x00\n        /* \"#utility.yul\":4527:4580   */\n      tag_466\n        /* \"#utility.yul\":4572:4579   */\n      dup6\n        /* \"#utility.yul\":4563:4569   */\n      dup3\n        /* \"#utility.yul\":4552:4561   */\n      dup7\n        /* \"#utility.yul\":4548:4570   */\n      add\n        /* \"#utility.yul\":4527:4580   */\n      tag_335\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":4517:4580   */\n      swap3\n      pop\n        /* \"#utility.yul\":4473:4590   */\n      pop\n        /* \"#utility.yul\":4629:4631   */\n      0x20\n        /* \"#utility.yul\":4655:4708   */\n      tag_467\n        /* \"#utility.yul\":4700:4707   */\n      dup6\n        /* \"#utility.yul\":4691:4697   */\n      dup3\n        /* \"#utility.yul\":4680:4689   */\n      dup7\n        /* \"#utility.yul\":4676:4698   */\n      add\n        /* \"#utility.yul\":4655:4708   */\n      tag_335\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":4645:4708   */\n      swap2\n      pop\n        /* \"#utility.yul\":4600:4718   */\n      pop\n        /* \"#utility.yul\":4251:4725   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4731:4791   */\n    tag_339:\n        /* \"#utility.yul\":4759:4762   */\n      0x00\n        /* \"#utility.yul\":4780:4785   */\n      dup2\n        /* \"#utility.yul\":4773:4785   */\n      swap1\n      pop\n        /* \"#utility.yul\":4731:4791   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4797:4939   */\n    tag_340:\n        /* \"#utility.yul\":4847:4856   */\n      0x00\n        /* \"#utility.yul\":4880:4933   */\n      tag_470\n        /* \"#utility.yul\":4898:4932   */\n      tag_471\n        /* \"#utility.yul\":4907:4931   */\n      tag_472\n        /* \"#utility.yul\":4925:4930   */\n      dup5\n        /* \"#utility.yul\":4907:4931   */\n      tag_332\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":4898:4932   */\n      tag_339\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":4880:4933   */\n      tag_332\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":4867:4933   */\n      swap1\n      pop\n        /* \"#utility.yul\":4797:4939   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4945:5071   */\n    tag_341:\n        /* \"#utility.yul\":4995:5004   */\n      0x00\n        /* \"#utility.yul\":5028:5065   */\n      tag_474\n        /* \"#utility.yul\":5059:5064   */\n      dup3\n        /* \"#utility.yul\":5028:5065   */\n      tag_340\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":5015:5065   */\n      swap1\n      pop\n        /* \"#utility.yul\":4945:5071   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5077:5219   */\n    tag_342:\n        /* \"#utility.yul\":5143:5152   */\n      0x00\n        /* \"#utility.yul\":5176:5213   */\n      tag_476\n        /* \"#utility.yul\":5207:5212   */\n      dup3\n        /* \"#utility.yul\":5176:5213   */\n      tag_341\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":5163:5213   */\n      swap1\n      pop\n        /* \"#utility.yul\":5077:5219   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5225:5388   */\n    tag_343:\n        /* \"#utility.yul\":5328:5381   */\n      tag_478\n        /* \"#utility.yul\":5375:5380   */\n      dup2\n        /* \"#utility.yul\":5328:5381   */\n      tag_342\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":5323:5326   */\n      dup3\n        /* \"#utility.yul\":5316:5382   */\n      mstore\n        /* \"#utility.yul\":5225:5388   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5394:5648   */\n    tag_57:\n        /* \"#utility.yul\":5503:5507   */\n      0x00\n        /* \"#utility.yul\":5541:5543   */\n      0x20\n        /* \"#utility.yul\":5530:5539   */\n      dup3\n        /* \"#utility.yul\":5526:5544   */\n      add\n        /* \"#utility.yul\":5518:5544   */\n      swap1\n      pop\n        /* \"#utility.yul\":5554:5641   */\n      tag_480\n        /* \"#utility.yul\":5638:5639   */\n      0x00\n        /* \"#utility.yul\":5627:5636   */\n      dup4\n        /* \"#utility.yul\":5623:5640   */\n      add\n        /* \"#utility.yul\":5614:5620   */\n      dup5\n        /* \"#utility.yul\":5554:5641   */\n      tag_343\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":5394:5648   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5654:5755   */\n    tag_344:\n        /* \"#utility.yul\":5690:5697   */\n      0x00\n        /* \"#utility.yul\":5730:5748   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5723:5728   */\n      dup3\n        /* \"#utility.yul\":5719:5749   */\n      and\n        /* \"#utility.yul\":5708:5749   */\n      swap1\n      pop\n        /* \"#utility.yul\":5654:5755   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5761:5876   */\n    tag_345:\n        /* \"#utility.yul\":5846:5869   */\n      tag_483\n        /* \"#utility.yul\":5863:5868   */\n      dup2\n        /* \"#utility.yul\":5846:5869   */\n      tag_344\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":5841:5844   */\n      dup3\n        /* \"#utility.yul\":5834:5870   */\n      mstore\n        /* \"#utility.yul\":5761:5876   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5882:5981   */\n    tag_346:\n        /* \"#utility.yul\":5934:5940   */\n      0x00\n        /* \"#utility.yul\":5968:5973   */\n      dup2\n        /* \"#utility.yul\":5962:5974   */\n      mload\n        /* \"#utility.yul\":5952:5974   */\n      swap1\n      pop\n        /* \"#utility.yul\":5882:5981   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5987:6235   */\n    tag_347:\n        /* \"#utility.yul\":6069:6070   */\n      0x00\n        /* \"#utility.yul\":6079:6192   */\n    tag_486:\n        /* \"#utility.yul\":6093:6099   */\n      dup4\n        /* \"#utility.yul\":6090:6091   */\n      dup2\n        /* \"#utility.yul\":6087:6100   */\n      lt\n        /* \"#utility.yul\":6079:6192   */\n      iszero\n      tag_488\n      jumpi\n        /* \"#utility.yul\":6178:6179   */\n      dup1\n        /* \"#utility.yul\":6173:6176   */\n      dup3\n        /* \"#utility.yul\":6169:6180   */\n      add\n        /* \"#utility.yul\":6163:6181   */\n      mload\n        /* \"#utility.yul\":6159:6160   */\n      dup2\n        /* \"#utility.yul\":6154:6157   */\n      dup5\n        /* \"#utility.yul\":6150:6161   */\n      add\n        /* \"#utility.yul\":6143:6182   */\n      mstore\n        /* \"#utility.yul\":6115:6117   */\n      0x20\n        /* \"#utility.yul\":6112:6113   */\n      dup2\n        /* \"#utility.yul\":6108:6118   */\n      add\n        /* \"#utility.yul\":6103:6118   */\n      swap1\n      pop\n        /* \"#utility.yul\":6079:6192   */\n      jump(tag_486)\n    tag_488:\n        /* \"#utility.yul\":6226:6227   */\n      0x00\n        /* \"#utility.yul\":6217:6223   */\n      dup5\n        /* \"#utility.yul\":6212:6215   */\n      dup5\n        /* \"#utility.yul\":6208:6224   */\n      add\n        /* \"#utility.yul\":6201:6228   */\n      mstore\n        /* \"#utility.yul\":6049:6235   */\n      pop\n        /* \"#utility.yul\":5987:6235   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6241:6343   */\n    tag_348:\n        /* \"#utility.yul\":6282:6288   */\n      0x00\n        /* \"#utility.yul\":6333:6335   */\n      0x1f\n        /* \"#utility.yul\":6329:6336   */\n      not\n        /* \"#utility.yul\":6324:6326   */\n      0x1f\n        /* \"#utility.yul\":6317:6322   */\n      dup4\n        /* \"#utility.yul\":6313:6327   */\n      add\n        /* \"#utility.yul\":6309:6337   */\n      and\n        /* \"#utility.yul\":6299:6337   */\n      swap1\n      pop\n        /* \"#utility.yul\":6241:6343   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6349:6726   */\n    tag_349:\n        /* \"#utility.yul\":6437:6440   */\n      0x00\n        /* \"#utility.yul\":6465:6504   */\n      tag_491\n        /* \"#utility.yul\":6498:6503   */\n      dup3\n        /* \"#utility.yul\":6465:6504   */\n      tag_346\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":6520:6591   */\n      tag_492\n        /* \"#utility.yul\":6584:6590   */\n      dup2\n        /* \"#utility.yul\":6579:6582   */\n      dup6\n        /* \"#utility.yul\":6520:6591   */\n      tag_326\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":6513:6591   */\n      swap4\n      pop\n        /* \"#utility.yul\":6600:6665   */\n      tag_493\n        /* \"#utility.yul\":6658:6664   */\n      dup2\n        /* \"#utility.yul\":6653:6656   */\n      dup6\n        /* \"#utility.yul\":6646:6650   */\n      0x20\n        /* \"#utility.yul\":6639:6644   */\n      dup7\n        /* \"#utility.yul\":6635:6651   */\n      add\n        /* \"#utility.yul\":6600:6665   */\n      tag_347\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":6690:6719   */\n      tag_494\n        /* \"#utility.yul\":6712:6718   */\n      dup2\n        /* \"#utility.yul\":6690:6719   */\n      tag_348\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":6685:6688   */\n      dup5\n        /* \"#utility.yul\":6681:6720   */\n      add\n        /* \"#utility.yul\":6674:6720   */\n      swap2\n      pop\n        /* \"#utility.yul\":6441:6726   */\n      pop\n        /* \"#utility.yul\":6349:6726   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6732:7257   */\n    tag_62:\n        /* \"#utility.yul\":6897:6901   */\n      0x00\n        /* \"#utility.yul\":6935:6937   */\n      0x60\n        /* \"#utility.yul\":6924:6933   */\n      dup3\n        /* \"#utility.yul\":6920:6938   */\n      add\n        /* \"#utility.yul\":6912:6938   */\n      swap1\n      pop\n        /* \"#utility.yul\":6948:7017   */\n      tag_496\n        /* \"#utility.yul\":7014:7015   */\n      0x00\n        /* \"#utility.yul\":7003:7012   */\n      dup4\n        /* \"#utility.yul\":6999:7016   */\n      add\n        /* \"#utility.yul\":6990:6996   */\n      dup7\n        /* \"#utility.yul\":6948:7017   */\n      tag_345\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":7027:7097   */\n      tag_497\n        /* \"#utility.yul\":7093:7095   */\n      0x20\n        /* \"#utility.yul\":7082:7091   */\n      dup4\n        /* \"#utility.yul\":7078:7096   */\n      add\n        /* \"#utility.yul\":7069:7075   */\n      dup6\n        /* \"#utility.yul\":7027:7097   */\n      tag_345\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":7144:7153   */\n      dup2\n        /* \"#utility.yul\":7138:7142   */\n      dup2\n        /* \"#utility.yul\":7134:7154   */\n      sub\n        /* \"#utility.yul\":7129:7131   */\n      0x40\n        /* \"#utility.yul\":7118:7127   */\n      dup4\n        /* \"#utility.yul\":7114:7132   */\n      add\n        /* \"#utility.yul\":7107:7155   */\n      mstore\n        /* \"#utility.yul\":7172:7250   */\n      tag_498\n        /* \"#utility.yul\":7245:7249   */\n      dup2\n        /* \"#utility.yul\":7236:7242   */\n      dup5\n        /* \"#utility.yul\":7172:7250   */\n      tag_349\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":7164:7250   */\n      swap1\n      pop\n        /* \"#utility.yul\":6732:7257   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7263:7383   */\n    tag_350:\n        /* \"#utility.yul\":7335:7358   */\n      tag_500\n        /* \"#utility.yul\":7352:7357   */\n      dup2\n        /* \"#utility.yul\":7335:7358   */\n      tag_344\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":7328:7333   */\n      dup2\n        /* \"#utility.yul\":7325:7359   */\n      eq\n        /* \"#utility.yul\":7315:7377   */\n      tag_501\n      jumpi\n        /* \"#utility.yul\":7373:7374   */\n      0x00\n        /* \"#utility.yul\":7370:7371   */\n      dup1\n        /* \"#utility.yul\":7363:7375   */\n      revert\n        /* \"#utility.yul\":7315:7377   */\n    tag_501:\n        /* \"#utility.yul\":7263:7383   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7389:7526   */\n    tag_351:\n        /* \"#utility.yul\":7434:7439   */\n      0x00\n        /* \"#utility.yul\":7472:7478   */\n      dup2\n        /* \"#utility.yul\":7459:7479   */\n      calldataload\n        /* \"#utility.yul\":7450:7479   */\n      swap1\n      pop\n        /* \"#utility.yul\":7488:7520   */\n      tag_503\n        /* \"#utility.yul\":7514:7519   */\n      dup2\n        /* \"#utility.yul\":7488:7520   */\n      tag_350\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":7389:7526   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7532:7649   */\n    tag_352:\n        /* \"#utility.yul\":7641:7642   */\n      0x00\n        /* \"#utility.yul\":7638:7639   */\n      dup1\n        /* \"#utility.yul\":7631:7643   */\n      revert\n        /* \"#utility.yul\":7655:7772   */\n    tag_353:\n        /* \"#utility.yul\":7764:7765   */\n      0x00\n        /* \"#utility.yul\":7761:7762   */\n      dup1\n        /* \"#utility.yul\":7754:7766   */\n      revert\n        /* \"#utility.yul\":7778:7958   */\n    tag_354:\n        /* \"#utility.yul\":7826:7903   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7823:7824   */\n      0x00\n        /* \"#utility.yul\":7816:7904   */\n      mstore\n        /* \"#utility.yul\":7923:7927   */\n      0x41\n        /* \"#utility.yul\":7920:7921   */\n      0x04\n        /* \"#utility.yul\":7913:7928   */\n      mstore\n        /* \"#utility.yul\":7947:7951   */\n      0x24\n        /* \"#utility.yul\":7944:7945   */\n      0x00\n        /* \"#utility.yul\":7937:7952   */\n      revert\n        /* \"#utility.yul\":7964:8245   */\n    tag_355:\n        /* \"#utility.yul\":8047:8074   */\n      tag_508\n        /* \"#utility.yul\":8069:8073   */\n      dup3\n        /* \"#utility.yul\":8047:8074   */\n      tag_348\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":8039:8045   */\n      dup2\n        /* \"#utility.yul\":8035:8075   */\n      add\n        /* \"#utility.yul\":8177:8183   */\n      dup2\n        /* \"#utility.yul\":8165:8175   */\n      dup2\n        /* \"#utility.yul\":8162:8184   */\n      lt\n        /* \"#utility.yul\":8141:8159   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8129:8139   */\n      dup3\n        /* \"#utility.yul\":8126:8160   */\n      gt\n        /* \"#utility.yul\":8123:8185   */\n      or\n        /* \"#utility.yul\":8120:8208   */\n      iszero\n      tag_509\n      jumpi\n        /* \"#utility.yul\":8188:8206   */\n      tag_510\n      tag_354\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":8120:8208   */\n    tag_509:\n        /* \"#utility.yul\":8228:8238   */\n      dup1\n        /* \"#utility.yul\":8224:8226   */\n      0x40\n        /* \"#utility.yul\":8217:8239   */\n      mstore\n        /* \"#utility.yul\":8007:8245   */\n      pop\n        /* \"#utility.yul\":7964:8245   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8251:8380   */\n    tag_356:\n        /* \"#utility.yul\":8285:8291   */\n      0x00\n        /* \"#utility.yul\":8312:8332   */\n      tag_512\n      tag_329\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":8302:8332   */\n      swap1\n      pop\n        /* \"#utility.yul\":8341:8374   */\n      tag_513\n        /* \"#utility.yul\":8369:8373   */\n      dup3\n        /* \"#utility.yul\":8361:8367   */\n      dup3\n        /* \"#utility.yul\":8341:8374   */\n      tag_355\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":8251:8380   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8386:8694   */\n    tag_357:\n        /* \"#utility.yul\":8448:8452   */\n      0x00\n        /* \"#utility.yul\":8538:8556   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8530:8536   */\n      dup3\n        /* \"#utility.yul\":8527:8557   */\n      gt\n        /* \"#utility.yul\":8524:8580   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":8560:8578   */\n      tag_516\n      tag_354\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":8524:8580   */\n    tag_515:\n        /* \"#utility.yul\":8598:8627   */\n      tag_517\n        /* \"#utility.yul\":8620:8626   */\n      dup3\n        /* \"#utility.yul\":8598:8627   */\n      tag_348\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":8590:8627   */\n      swap1\n      pop\n        /* \"#utility.yul\":8682:8686   */\n      0x20\n        /* \"#utility.yul\":8676:8680   */\n      dup2\n        /* \"#utility.yul\":8672:8687   */\n      add\n        /* \"#utility.yul\":8664:8687   */\n      swap1\n      pop\n        /* \"#utility.yul\":8386:8694   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8700:8848   */\n    tag_358:\n        /* \"#utility.yul\":8798:8804   */\n      dup3\n        /* \"#utility.yul\":8793:8796   */\n      dup2\n        /* \"#utility.yul\":8788:8791   */\n      dup4\n        /* \"#utility.yul\":8775:8805   */\n      calldatacopy\n        /* \"#utility.yul\":8839:8840   */\n      0x00\n        /* \"#utility.yul\":8830:8836   */\n      dup4\n        /* \"#utility.yul\":8825:8828   */\n      dup4\n        /* \"#utility.yul\":8821:8837   */\n      add\n        /* \"#utility.yul\":8814:8841   */\n      mstore\n        /* \"#utility.yul\":8700:8848   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8854:9279   */\n    tag_359:\n        /* \"#utility.yul\":8932:8937   */\n      0x00\n        /* \"#utility.yul\":8957:9023   */\n      tag_520\n        /* \"#utility.yul\":8973:9022   */\n      tag_521\n        /* \"#utility.yul\":9015:9021   */\n      dup5\n        /* \"#utility.yul\":8973:9022   */\n      tag_357\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":8957:9023   */\n      tag_356\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":8948:9023   */\n      swap1\n      pop\n        /* \"#utility.yul\":9046:9052   */\n      dup3\n        /* \"#utility.yul\":9039:9044   */\n      dup2\n        /* \"#utility.yul\":9032:9053   */\n      mstore\n        /* \"#utility.yul\":9084:9088   */\n      0x20\n        /* \"#utility.yul\":9077:9082   */\n      dup2\n        /* \"#utility.yul\":9073:9089   */\n      add\n        /* \"#utility.yul\":9122:9125   */\n      dup5\n        /* \"#utility.yul\":9113:9119   */\n      dup5\n        /* \"#utility.yul\":9108:9111   */\n      dup5\n        /* \"#utility.yul\":9104:9120   */\n      add\n        /* \"#utility.yul\":9101:9126   */\n      gt\n        /* \"#utility.yul\":9098:9210   */\n      iszero\n      tag_522\n      jumpi\n        /* \"#utility.yul\":9129:9208   */\n      tag_523\n      tag_353\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":9098:9210   */\n    tag_522:\n        /* \"#utility.yul\":9219:9273   */\n      tag_524\n        /* \"#utility.yul\":9266:9272   */\n      dup5\n        /* \"#utility.yul\":9261:9264   */\n      dup3\n        /* \"#utility.yul\":9256:9259   */\n      dup6\n        /* \"#utility.yul\":9219:9273   */\n      tag_358\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":8938:9279   */\n      pop\n        /* \"#utility.yul\":8854:9279   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9299:9639   */\n    tag_360:\n        /* \"#utility.yul\":9355:9360   */\n      0x00\n        /* \"#utility.yul\":9404:9407   */\n      dup3\n        /* \"#utility.yul\":9397:9401   */\n      0x1f\n        /* \"#utility.yul\":9389:9395   */\n      dup4\n        /* \"#utility.yul\":9385:9402   */\n      add\n        /* \"#utility.yul\":9381:9408   */\n      slt\n        /* \"#utility.yul\":9371:9493   */\n      tag_526\n      jumpi\n        /* \"#utility.yul\":9412:9491   */\n      tag_527\n      tag_352\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":9371:9493   */\n    tag_526:\n        /* \"#utility.yul\":9529:9535   */\n      dup2\n        /* \"#utility.yul\":9516:9536   */\n      calldataload\n        /* \"#utility.yul\":9554:9633   */\n      tag_528\n        /* \"#utility.yul\":9629:9632   */\n      dup5\n        /* \"#utility.yul\":9621:9627   */\n      dup3\n        /* \"#utility.yul\":9614:9618   */\n      0x20\n        /* \"#utility.yul\":9606:9612   */\n      dup7\n        /* \"#utility.yul\":9602:9619   */\n      add\n        /* \"#utility.yul\":9554:9633   */\n      tag_359\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":9545:9633   */\n      swap2\n      pop\n        /* \"#utility.yul\":9361:9639   */\n      pop\n        /* \"#utility.yul\":9299:9639   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9645:10440   */\n    tag_70:\n        /* \"#utility.yul\":9730:9736   */\n      0x00\n        /* \"#utility.yul\":9738:9744   */\n      dup1\n        /* \"#utility.yul\":9746:9752   */\n      0x00\n        /* \"#utility.yul\":9795:9797   */\n      0x60\n        /* \"#utility.yul\":9783:9792   */\n      dup5\n        /* \"#utility.yul\":9774:9781   */\n      dup7\n        /* \"#utility.yul\":9770:9793   */\n      sub\n        /* \"#utility.yul\":9766:9798   */\n      slt\n        /* \"#utility.yul\":9763:9882   */\n      iszero\n      tag_530\n      jumpi\n        /* \"#utility.yul\":9801:9880   */\n      tag_531\n      tag_330\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":9763:9882   */\n    tag_530:\n        /* \"#utility.yul\":9921:9922   */\n      0x00\n        /* \"#utility.yul\":9946:9998   */\n      tag_532\n        /* \"#utility.yul\":9990:9997   */\n      dup7\n        /* \"#utility.yul\":9981:9987   */\n      dup3\n        /* \"#utility.yul\":9970:9979   */\n      dup8\n        /* \"#utility.yul\":9966:9988   */\n      add\n        /* \"#utility.yul\":9946:9998   */\n      tag_351\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":9936:9998   */\n      swap4\n      pop\n        /* \"#utility.yul\":9892:10008   */\n      pop\n        /* \"#utility.yul\":10047:10049   */\n      0x20\n        /* \"#utility.yul\":10073:10125   */\n      tag_533\n        /* \"#utility.yul\":10117:10124   */\n      dup7\n        /* \"#utility.yul\":10108:10114   */\n      dup3\n        /* \"#utility.yul\":10097:10106   */\n      dup8\n        /* \"#utility.yul\":10093:10115   */\n      add\n        /* \"#utility.yul\":10073:10125   */\n      tag_351\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":10063:10125   */\n      swap3\n      pop\n        /* \"#utility.yul\":10018:10135   */\n      pop\n        /* \"#utility.yul\":10202:10204   */\n      0x40\n        /* \"#utility.yul\":10191:10200   */\n      dup5\n        /* \"#utility.yul\":10187:10205   */\n      add\n        /* \"#utility.yul\":10174:10206   */\n      calldataload\n        /* \"#utility.yul\":10233:10251   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10225:10231   */\n      dup2\n        /* \"#utility.yul\":10222:10252   */\n      gt\n        /* \"#utility.yul\":10219:10336   */\n      iszero\n      tag_534\n      jumpi\n        /* \"#utility.yul\":10255:10334   */\n      tag_535\n      tag_331\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":10219:10336   */\n    tag_534:\n        /* \"#utility.yul\":10360:10423   */\n      tag_536\n        /* \"#utility.yul\":10415:10422   */\n      dup7\n        /* \"#utility.yul\":10406:10412   */\n      dup3\n        /* \"#utility.yul\":10395:10404   */\n      dup8\n        /* \"#utility.yul\":10391:10413   */\n      add\n        /* \"#utility.yul\":10360:10423   */\n      tag_360\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":10350:10423   */\n      swap2\n      pop\n        /* \"#utility.yul\":10145:10433   */\n      pop\n        /* \"#utility.yul\":9645:10440   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":10446:11065   */\n    tag_85:\n        /* \"#utility.yul\":10523:10529   */\n      0x00\n        /* \"#utility.yul\":10531:10537   */\n      dup1\n        /* \"#utility.yul\":10539:10545   */\n      0x00\n        /* \"#utility.yul\":10588:10590   */\n      0x60\n        /* \"#utility.yul\":10576:10585   */\n      dup5\n        /* \"#utility.yul\":10567:10574   */\n      dup7\n        /* \"#utility.yul\":10563:10586   */\n      sub\n        /* \"#utility.yul\":10559:10591   */\n      slt\n        /* \"#utility.yul\":10556:10675   */\n      iszero\n      tag_538\n      jumpi\n        /* \"#utility.yul\":10594:10673   */\n      tag_539\n      tag_330\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":10556:10675   */\n    tag_538:\n        /* \"#utility.yul\":10714:10715   */\n      0x00\n        /* \"#utility.yul\":10739:10792   */\n      tag_540\n        /* \"#utility.yul\":10784:10791   */\n      dup7\n        /* \"#utility.yul\":10775:10781   */\n      dup3\n        /* \"#utility.yul\":10764:10773   */\n      dup8\n        /* \"#utility.yul\":10760:10782   */\n      add\n        /* \"#utility.yul\":10739:10792   */\n      tag_335\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":10729:10792   */\n      swap4\n      pop\n        /* \"#utility.yul\":10685:10802   */\n      pop\n        /* \"#utility.yul\":10841:10843   */\n      0x20\n        /* \"#utility.yul\":10867:10920   */\n      tag_541\n        /* \"#utility.yul\":10912:10919   */\n      dup7\n        /* \"#utility.yul\":10903:10909   */\n      dup3\n        /* \"#utility.yul\":10892:10901   */\n      dup8\n        /* \"#utility.yul\":10888:10910   */\n      add\n        /* \"#utility.yul\":10867:10920   */\n      tag_335\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":10857:10920   */\n      swap3\n      pop\n        /* \"#utility.yul\":10812:10930   */\n      pop\n        /* \"#utility.yul\":10969:10971   */\n      0x40\n        /* \"#utility.yul\":10995:11048   */\n      tag_542\n        /* \"#utility.yul\":11040:11047   */\n      dup7\n        /* \"#utility.yul\":11031:11037   */\n      dup3\n        /* \"#utility.yul\":11020:11029   */\n      dup8\n        /* \"#utility.yul\":11016:11038   */\n      add\n        /* \"#utility.yul\":10995:11048   */\n      tag_338\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":10985:11048   */\n      swap2\n      pop\n        /* \"#utility.yul\":10940:11058   */\n      pop\n        /* \"#utility.yul\":10446:11065   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":11071:11188   */\n    tag_361:\n        /* \"#utility.yul\":11180:11181   */\n      0x00\n        /* \"#utility.yul\":11177:11178   */\n      dup1\n        /* \"#utility.yul\":11170:11182   */\n      revert\n        /* \"#utility.yul\":11194:11311   */\n    tag_362:\n        /* \"#utility.yul\":11303:11304   */\n      0x00\n        /* \"#utility.yul\":11300:11301   */\n      dup1\n        /* \"#utility.yul\":11293:11305   */\n      revert\n        /* \"#utility.yul\":11334:11902   */\n    tag_363:\n        /* \"#utility.yul\":11407:11415   */\n      0x00\n        /* \"#utility.yul\":11417:11423   */\n      dup1\n        /* \"#utility.yul\":11467:11470   */\n      dup4\n        /* \"#utility.yul\":11460:11464   */\n      0x1f\n        /* \"#utility.yul\":11452:11458   */\n      dup5\n        /* \"#utility.yul\":11448:11465   */\n      add\n        /* \"#utility.yul\":11444:11471   */\n      slt\n        /* \"#utility.yul\":11434:11556   */\n      tag_546\n      jumpi\n        /* \"#utility.yul\":11475:11554   */\n      tag_547\n      tag_352\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":11434:11556   */\n    tag_546:\n        /* \"#utility.yul\":11588:11594   */\n      dup3\n        /* \"#utility.yul\":11575:11595   */\n      calldataload\n        /* \"#utility.yul\":11565:11595   */\n      swap1\n      pop\n        /* \"#utility.yul\":11618:11636   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11610:11616   */\n      dup2\n        /* \"#utility.yul\":11607:11637   */\n      gt\n        /* \"#utility.yul\":11604:11721   */\n      iszero\n      tag_548\n      jumpi\n        /* \"#utility.yul\":11640:11719   */\n      tag_549\n      tag_361\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":11604:11721   */\n    tag_548:\n        /* \"#utility.yul\":11754:11758   */\n      0x20\n        /* \"#utility.yul\":11746:11752   */\n      dup4\n        /* \"#utility.yul\":11742:11759   */\n      add\n        /* \"#utility.yul\":11730:11759   */\n      swap2\n      pop\n        /* \"#utility.yul\":11808:11811   */\n      dup4\n        /* \"#utility.yul\":11800:11804   */\n      0x20\n        /* \"#utility.yul\":11792:11798   */\n      dup3\n        /* \"#utility.yul\":11788:11805   */\n      mul\n        /* \"#utility.yul\":11778:11786   */\n      dup4\n        /* \"#utility.yul\":11774:11806   */\n      add\n        /* \"#utility.yul\":11771:11812   */\n      gt\n        /* \"#utility.yul\":11768:11896   */\n      iszero\n      tag_550\n      jumpi\n        /* \"#utility.yul\":11815:11894   */\n      tag_551\n      tag_362\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":11768:11896   */\n    tag_550:\n        /* \"#utility.yul\":11334:11902   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11925:12493   */\n    tag_364:\n        /* \"#utility.yul\":11998:12006   */\n      0x00\n        /* \"#utility.yul\":12008:12014   */\n      dup1\n        /* \"#utility.yul\":12058:12061   */\n      dup4\n        /* \"#utility.yul\":12051:12055   */\n      0x1f\n        /* \"#utility.yul\":12043:12049   */\n      dup5\n        /* \"#utility.yul\":12039:12056   */\n      add\n        /* \"#utility.yul\":12035:12062   */\n      slt\n        /* \"#utility.yul\":12025:12147   */\n      tag_553\n      jumpi\n        /* \"#utility.yul\":12066:12145   */\n      tag_554\n      tag_352\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":12025:12147   */\n    tag_553:\n        /* \"#utility.yul\":12179:12185   */\n      dup3\n        /* \"#utility.yul\":12166:12186   */\n      calldataload\n        /* \"#utility.yul\":12156:12186   */\n      swap1\n      pop\n        /* \"#utility.yul\":12209:12227   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12201:12207   */\n      dup2\n        /* \"#utility.yul\":12198:12228   */\n      gt\n        /* \"#utility.yul\":12195:12312   */\n      iszero\n      tag_555\n      jumpi\n        /* \"#utility.yul\":12231:12310   */\n      tag_556\n      tag_361\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":12195:12312   */\n    tag_555:\n        /* \"#utility.yul\":12345:12349   */\n      0x20\n        /* \"#utility.yul\":12337:12343   */\n      dup4\n        /* \"#utility.yul\":12333:12350   */\n      add\n        /* \"#utility.yul\":12321:12350   */\n      swap2\n      pop\n        /* \"#utility.yul\":12399:12402   */\n      dup4\n        /* \"#utility.yul\":12391:12395   */\n      0x20\n        /* \"#utility.yul\":12383:12389   */\n      dup3\n        /* \"#utility.yul\":12379:12396   */\n      mul\n        /* \"#utility.yul\":12369:12377   */\n      dup4\n        /* \"#utility.yul\":12365:12397   */\n      add\n        /* \"#utility.yul\":12362:12403   */\n      gt\n        /* \"#utility.yul\":12359:12487   */\n      iszero\n      tag_557\n      jumpi\n        /* \"#utility.yul\":12406:12485   */\n      tag_558\n      tag_362\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":12359:12487   */\n    tag_557:\n        /* \"#utility.yul\":11925:12493   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12499:13578   */\n    tag_90:\n        /* \"#utility.yul\":12630:12636   */\n      0x00\n        /* \"#utility.yul\":12638:12644   */\n      dup1\n        /* \"#utility.yul\":12646:12652   */\n      0x00\n        /* \"#utility.yul\":12654:12660   */\n      dup1\n        /* \"#utility.yul\":12662:12668   */\n      0x00\n        /* \"#utility.yul\":12711:12713   */\n      0x60\n        /* \"#utility.yul\":12699:12708   */\n      dup7\n        /* \"#utility.yul\":12690:12697   */\n      dup9\n        /* \"#utility.yul\":12686:12709   */\n      sub\n        /* \"#utility.yul\":12682:12714   */\n      slt\n        /* \"#utility.yul\":12679:12798   */\n      iszero\n      tag_560\n      jumpi\n        /* \"#utility.yul\":12717:12796   */\n      tag_561\n      tag_330\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":12679:12798   */\n    tag_560:\n        /* \"#utility.yul\":12837:12838   */\n      0x00\n        /* \"#utility.yul\":12862:12915   */\n      tag_562\n        /* \"#utility.yul\":12907:12914   */\n      dup9\n        /* \"#utility.yul\":12898:12904   */\n      dup3\n        /* \"#utility.yul\":12887:12896   */\n      dup10\n        /* \"#utility.yul\":12883:12905   */\n      add\n        /* \"#utility.yul\":12862:12915   */\n      tag_335\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":12852:12915   */\n      swap6\n      pop\n        /* \"#utility.yul\":12808:12925   */\n      pop\n        /* \"#utility.yul\":12992:12994   */\n      0x20\n        /* \"#utility.yul\":12981:12990   */\n      dup7\n        /* \"#utility.yul\":12977:12995   */\n      add\n        /* \"#utility.yul\":12964:12996   */\n      calldataload\n        /* \"#utility.yul\":13023:13041   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13015:13021   */\n      dup2\n        /* \"#utility.yul\":13012:13042   */\n      gt\n        /* \"#utility.yul\":13009:13126   */\n      iszero\n      tag_563\n      jumpi\n        /* \"#utility.yul\":13045:13124   */\n      tag_564\n      tag_331\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":13009:13126   */\n    tag_563:\n        /* \"#utility.yul\":13158:13238   */\n      tag_565\n        /* \"#utility.yul\":13230:13237   */\n      dup9\n        /* \"#utility.yul\":13221:13227   */\n      dup3\n        /* \"#utility.yul\":13210:13219   */\n      dup10\n        /* \"#utility.yul\":13206:13228   */\n      add\n        /* \"#utility.yul\":13158:13238   */\n      tag_363\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":13140:13238   */\n      swap5\n      pop\n      swap5\n      pop\n        /* \"#utility.yul\":12935:13248   */\n      pop\n        /* \"#utility.yul\":13315:13317   */\n      0x40\n        /* \"#utility.yul\":13304:13313   */\n      dup7\n        /* \"#utility.yul\":13300:13318   */\n      add\n        /* \"#utility.yul\":13287:13319   */\n      calldataload\n        /* \"#utility.yul\":13346:13364   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13338:13344   */\n      dup2\n        /* \"#utility.yul\":13335:13365   */\n      gt\n        /* \"#utility.yul\":13332:13449   */\n      iszero\n      tag_566\n      jumpi\n        /* \"#utility.yul\":13368:13447   */\n      tag_567\n      tag_331\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":13332:13449   */\n    tag_566:\n        /* \"#utility.yul\":13481:13561   */\n      tag_568\n        /* \"#utility.yul\":13553:13560   */\n      dup9\n        /* \"#utility.yul\":13544:13550   */\n      dup3\n        /* \"#utility.yul\":13533:13542   */\n      dup10\n        /* \"#utility.yul\":13529:13551   */\n      add\n        /* \"#utility.yul\":13481:13561   */\n      tag_364\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":13463:13561   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":13258:13571   */\n      pop\n        /* \"#utility.yul\":12499:13578   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13584:13724   */\n    tag_365:\n        /* \"#utility.yul\":13633:13642   */\n      0x00\n        /* \"#utility.yul\":13666:13718   */\n      tag_570\n        /* \"#utility.yul\":13684:13717   */\n      tag_571\n        /* \"#utility.yul\":13693:13716   */\n      tag_572\n        /* \"#utility.yul\":13710:13715   */\n      dup5\n        /* \"#utility.yul\":13693:13716   */\n      tag_344\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":13684:13717   */\n      tag_339\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":13666:13718   */\n      tag_323\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":13653:13718   */\n      swap1\n      pop\n        /* \"#utility.yul\":13584:13724   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13730:13859   */\n    tag_366:\n        /* \"#utility.yul\":13816:13852   */\n      tag_574\n        /* \"#utility.yul\":13846:13851   */\n      dup2\n        /* \"#utility.yul\":13816:13852   */\n      tag_365\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":13811:13814   */\n      dup3\n        /* \"#utility.yul\":13804:13853   */\n      mstore\n        /* \"#utility.yul\":13730:13859   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13865:14303   */\n    tag_107:\n        /* \"#utility.yul\":14012:14016   */\n      0x00\n        /* \"#utility.yul\":14050:14052   */\n      0x60\n        /* \"#utility.yul\":14039:14048   */\n      dup3\n        /* \"#utility.yul\":14035:14053   */\n      add\n        /* \"#utility.yul\":14027:14053   */\n      swap1\n      pop\n        /* \"#utility.yul\":14063:14134   */\n      tag_576\n        /* \"#utility.yul\":14131:14132   */\n      0x00\n        /* \"#utility.yul\":14120:14129   */\n      dup4\n        /* \"#utility.yul\":14116:14133   */\n      add\n        /* \"#utility.yul\":14107:14113   */\n      dup7\n        /* \"#utility.yul\":14063:14134   */\n      tag_325\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":14144:14215   */\n      tag_577\n        /* \"#utility.yul\":14211:14213   */\n      0x20\n        /* \"#utility.yul\":14200:14209   */\n      dup4\n        /* \"#utility.yul\":14196:14214   */\n      add\n        /* \"#utility.yul\":14187:14193   */\n      dup6\n        /* \"#utility.yul\":14144:14215   */\n      tag_366\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":14225:14296   */\n      tag_578\n        /* \"#utility.yul\":14292:14294   */\n      0x40\n        /* \"#utility.yul\":14281:14290   */\n      dup4\n        /* \"#utility.yul\":14277:14295   */\n      add\n        /* \"#utility.yul\":14268:14274   */\n      dup5\n        /* \"#utility.yul\":14225:14296   */\n      tag_366\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":13865:14303   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14309:14478   */\n    tag_367:\n        /* \"#utility.yul\":14449:14470   */\n      0x4e6f20636c61696d61626c6520616d6f756e7400000000000000000000000000\n        /* \"#utility.yul\":14445:14446   */\n      0x00\n        /* \"#utility.yul\":14437:14443   */\n      dup3\n        /* \"#utility.yul\":14433:14447   */\n      add\n        /* \"#utility.yul\":14426:14471   */\n      mstore\n        /* \"#utility.yul\":14309:14478   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14484:14850   */\n    tag_368:\n        /* \"#utility.yul\":14626:14629   */\n      0x00\n        /* \"#utility.yul\":14647:14714   */\n      tag_581\n        /* \"#utility.yul\":14711:14713   */\n      0x13\n        /* \"#utility.yul\":14706:14709   */\n      dup4\n        /* \"#utility.yul\":14647:14714   */\n      tag_326\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":14640:14714   */\n      swap2\n      pop\n        /* \"#utility.yul\":14723:14816   */\n      tag_582\n        /* \"#utility.yul\":14812:14815   */\n      dup3\n        /* \"#utility.yul\":14723:14816   */\n      tag_367\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":14841:14843   */\n      0x20\n        /* \"#utility.yul\":14836:14839   */\n      dup3\n        /* \"#utility.yul\":14832:14844   */\n      add\n        /* \"#utility.yul\":14825:14844   */\n      swap1\n      pop\n        /* \"#utility.yul\":14484:14850   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14856:15275   */\n    tag_110:\n        /* \"#utility.yul\":15022:15026   */\n      0x00\n        /* \"#utility.yul\":15060:15062   */\n      0x20\n        /* \"#utility.yul\":15049:15058   */\n      dup3\n        /* \"#utility.yul\":15045:15063   */\n      add\n        /* \"#utility.yul\":15037:15063   */\n      swap1\n      pop\n        /* \"#utility.yul\":15109:15118   */\n      dup2\n        /* \"#utility.yul\":15103:15107   */\n      dup2\n        /* \"#utility.yul\":15099:15119   */\n      sub\n        /* \"#utility.yul\":15095:15096   */\n      0x00\n        /* \"#utility.yul\":15084:15093   */\n      dup4\n        /* \"#utility.yul\":15080:15097   */\n      add\n        /* \"#utility.yul\":15073:15120   */\n      mstore\n        /* \"#utility.yul\":15137:15268   */\n      tag_584\n        /* \"#utility.yul\":15263:15267   */\n      dup2\n        /* \"#utility.yul\":15137:15268   */\n      tag_368\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":15129:15268   */\n      swap1\n      pop\n        /* \"#utility.yul\":14856:15275   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15281:15456   */\n    tag_369:\n        /* \"#utility.yul\":15421:15448   */\n      0x496e73756666696369656e742066756e647320696e206a617200000000000000\n        /* \"#utility.yul\":15417:15418   */\n      0x00\n        /* \"#utility.yul\":15409:15415   */\n      dup3\n        /* \"#utility.yul\":15405:15419   */\n      add\n        /* \"#utility.yul\":15398:15449   */\n      mstore\n        /* \"#utility.yul\":15281:15456   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15462:15828   */\n    tag_370:\n        /* \"#utility.yul\":15604:15607   */\n      0x00\n        /* \"#utility.yul\":15625:15692   */\n      tag_587\n        /* \"#utility.yul\":15689:15691   */\n      0x19\n        /* \"#utility.yul\":15684:15687   */\n      dup4\n        /* \"#utility.yul\":15625:15692   */\n      tag_326\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":15618:15692   */\n      swap2\n      pop\n        /* \"#utility.yul\":15701:15794   */\n      tag_588\n        /* \"#utility.yul\":15790:15793   */\n      dup3\n        /* \"#utility.yul\":15701:15794   */\n      tag_369\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":15819:15821   */\n      0x20\n        /* \"#utility.yul\":15814:15817   */\n      dup3\n        /* \"#utility.yul\":15810:15822   */\n      add\n        /* \"#utility.yul\":15803:15822   */\n      swap1\n      pop\n        /* \"#utility.yul\":15462:15828   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15834:16253   */\n    tag_113:\n        /* \"#utility.yul\":16000:16004   */\n      0x00\n        /* \"#utility.yul\":16038:16040   */\n      0x20\n        /* \"#utility.yul\":16027:16036   */\n      dup3\n        /* \"#utility.yul\":16023:16041   */\n      add\n        /* \"#utility.yul\":16015:16041   */\n      swap1\n      pop\n        /* \"#utility.yul\":16087:16096   */\n      dup2\n        /* \"#utility.yul\":16081:16085   */\n      dup2\n        /* \"#utility.yul\":16077:16097   */\n      sub\n        /* \"#utility.yul\":16073:16074   */\n      0x00\n        /* \"#utility.yul\":16062:16071   */\n      dup4\n        /* \"#utility.yul\":16058:16075   */\n      add\n        /* \"#utility.yul\":16051:16098   */\n      mstore\n        /* \"#utility.yul\":16115:16246   */\n      tag_590\n        /* \"#utility.yul\":16241:16245   */\n      dup2\n        /* \"#utility.yul\":16115:16246   */\n      tag_370\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":16107:16246   */\n      swap1\n      pop\n        /* \"#utility.yul\":15834:16253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16259:16453   */\n    tag_115:\n        /* \"#utility.yul\":16299:16303   */\n      0x00\n        /* \"#utility.yul\":16319:16339   */\n      tag_592\n        /* \"#utility.yul\":16337:16338   */\n      dup3\n        /* \"#utility.yul\":16319:16339   */\n      tag_323\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":16314:16339   */\n      swap2\n      pop\n        /* \"#utility.yul\":16353:16373   */\n      tag_593\n        /* \"#utility.yul\":16371:16372   */\n      dup4\n        /* \"#utility.yul\":16353:16373   */\n      tag_323\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":16348:16373   */\n      swap3\n      pop\n        /* \"#utility.yul\":16397:16398   */\n      dup3\n        /* \"#utility.yul\":16394:16395   */\n      dup3\n        /* \"#utility.yul\":16390:16399   */\n      sub\n        /* \"#utility.yul\":16382:16399   */\n      swap1\n      pop\n        /* \"#utility.yul\":16421:16422   */\n      dup2\n        /* \"#utility.yul\":16415:16419   */\n      dup2\n        /* \"#utility.yul\":16412:16423   */\n      gt\n        /* \"#utility.yul\":16409:16446   */\n      iszero\n      tag_594\n      jumpi\n        /* \"#utility.yul\":16426:16444   */\n      tag_595\n      tag_324\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":16409:16446   */\n    tag_594:\n        /* \"#utility.yul\":16259:16453   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16459:16606   */\n    tag_371:\n        /* \"#utility.yul\":16560:16571   */\n      0x00\n        /* \"#utility.yul\":16597:16600   */\n      dup2\n        /* \"#utility.yul\":16582:16600   */\n      swap1\n      pop\n        /* \"#utility.yul\":16459:16606   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16612:16726   */\n    tag_372:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16732:17130   */\n    tag_373:\n        /* \"#utility.yul\":16891:16894   */\n      0x00\n        /* \"#utility.yul\":16912:16995   */\n      tag_599\n        /* \"#utility.yul\":16993:16994   */\n      0x00\n        /* \"#utility.yul\":16988:16991   */\n      dup4\n        /* \"#utility.yul\":16912:16995   */\n      tag_371\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":16905:16995   */\n      swap2\n      pop\n        /* \"#utility.yul\":17004:17097   */\n      tag_600\n        /* \"#utility.yul\":17093:17096   */\n      dup3\n        /* \"#utility.yul\":17004:17097   */\n      tag_372\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":17122:17123   */\n      0x00\n        /* \"#utility.yul\":17117:17120   */\n      dup3\n        /* \"#utility.yul\":17113:17124   */\n      add\n        /* \"#utility.yul\":17106:17124   */\n      swap1\n      pop\n        /* \"#utility.yul\":16732:17130   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17136:17515   */\n    tag_118:\n        /* \"#utility.yul\":17320:17323   */\n      0x00\n        /* \"#utility.yul\":17342:17489   */\n      tag_602\n        /* \"#utility.yul\":17485:17488   */\n      dup3\n        /* \"#utility.yul\":17342:17489   */\n      tag_373\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":17335:17489   */\n      swap2\n      pop\n        /* \"#utility.yul\":17506:17509   */\n      dup2\n        /* \"#utility.yul\":17499:17509   */\n      swap1\n      pop\n        /* \"#utility.yul\":17136:17515   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17521:17692   */\n    tag_374:\n        /* \"#utility.yul\":17661:17684   */\n      0x4574686572207472616e73666572206661696c65640000000000000000000000\n        /* \"#utility.yul\":17657:17658   */\n      0x00\n        /* \"#utility.yul\":17649:17655   */\n      dup3\n        /* \"#utility.yul\":17645:17659   */\n      add\n        /* \"#utility.yul\":17638:17685   */\n      mstore\n        /* \"#utility.yul\":17521:17692   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17698:18064   */\n    tag_375:\n        /* \"#utility.yul\":17840:17843   */\n      0x00\n        /* \"#utility.yul\":17861:17928   */\n      tag_605\n        /* \"#utility.yul\":17925:17927   */\n      0x15\n        /* \"#utility.yul\":17920:17923   */\n      dup4\n        /* \"#utility.yul\":17861:17928   */\n      tag_326\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":17854:17928   */\n      swap2\n      pop\n        /* \"#utility.yul\":17937:18030   */\n      tag_606\n        /* \"#utility.yul\":18026:18029   */\n      dup3\n        /* \"#utility.yul\":17937:18030   */\n      tag_374\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":18055:18057   */\n      0x20\n        /* \"#utility.yul\":18050:18053   */\n      dup3\n        /* \"#utility.yul\":18046:18058   */\n      add\n        /* \"#utility.yul\":18039:18058   */\n      swap1\n      pop\n        /* \"#utility.yul\":17698:18064   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18070:18489   */\n    tag_124:\n        /* \"#utility.yul\":18236:18240   */\n      0x00\n        /* \"#utility.yul\":18274:18276   */\n      0x20\n        /* \"#utility.yul\":18263:18272   */\n      dup3\n        /* \"#utility.yul\":18259:18277   */\n      add\n        /* \"#utility.yul\":18251:18277   */\n      swap1\n      pop\n        /* \"#utility.yul\":18323:18332   */\n      dup2\n        /* \"#utility.yul\":18317:18321   */\n      dup2\n        /* \"#utility.yul\":18313:18333   */\n      sub\n        /* \"#utility.yul\":18309:18310   */\n      0x00\n        /* \"#utility.yul\":18298:18307   */\n      dup4\n        /* \"#utility.yul\":18294:18311   */\n      add\n        /* \"#utility.yul\":18287:18334   */\n      mstore\n        /* \"#utility.yul\":18351:18482   */\n      tag_608\n        /* \"#utility.yul\":18477:18481   */\n      dup2\n        /* \"#utility.yul\":18351:18482   */\n      tag_375\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":18343:18482   */\n      swap1\n      pop\n        /* \"#utility.yul\":18070:18489   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18495:18667   */\n    tag_376:\n        /* \"#utility.yul\":18635:18659   */\n      0x496e636f727265637420457468657220616d6f756e7400000000000000000000\n        /* \"#utility.yul\":18631:18632   */\n      0x00\n        /* \"#utility.yul\":18623:18629   */\n      dup3\n        /* \"#utility.yul\":18619:18633   */\n      add\n        /* \"#utility.yul\":18612:18660   */\n      mstore\n        /* \"#utility.yul\":18495:18667   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18673:19039   */\n    tag_377:\n        /* \"#utility.yul\":18815:18818   */\n      0x00\n        /* \"#utility.yul\":18836:18903   */\n      tag_611\n        /* \"#utility.yul\":18900:18902   */\n      0x16\n        /* \"#utility.yul\":18895:18898   */\n      dup4\n        /* \"#utility.yul\":18836:18903   */\n      tag_326\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":18829:18903   */\n      swap2\n      pop\n        /* \"#utility.yul\":18912:19005   */\n      tag_612\n        /* \"#utility.yul\":19001:19004   */\n      dup3\n        /* \"#utility.yul\":18912:19005   */\n      tag_376\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":19030:19032   */\n      0x20\n        /* \"#utility.yul\":19025:19028   */\n      dup3\n        /* \"#utility.yul\":19021:19033   */\n      add\n        /* \"#utility.yul\":19014:19033   */\n      swap1\n      pop\n        /* \"#utility.yul\":18673:19039   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19045:19464   */\n    tag_137:\n        /* \"#utility.yul\":19211:19215   */\n      0x00\n        /* \"#utility.yul\":19249:19251   */\n      0x20\n        /* \"#utility.yul\":19238:19247   */\n      dup3\n        /* \"#utility.yul\":19234:19252   */\n      add\n        /* \"#utility.yul\":19226:19252   */\n      swap1\n      pop\n        /* \"#utility.yul\":19298:19307   */\n      dup2\n        /* \"#utility.yul\":19292:19296   */\n      dup2\n        /* \"#utility.yul\":19288:19308   */\n      sub\n        /* \"#utility.yul\":19284:19285   */\n      0x00\n        /* \"#utility.yul\":19273:19282   */\n      dup4\n        /* \"#utility.yul\":19269:19286   */\n      add\n        /* \"#utility.yul\":19262:19309   */\n      mstore\n        /* \"#utility.yul\":19326:19457   */\n      tag_614\n        /* \"#utility.yul\":19452:19456   */\n      dup2\n        /* \"#utility.yul\":19326:19457   */\n      tag_377\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":19318:19457   */\n      swap1\n      pop\n        /* \"#utility.yul\":19045:19464   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19470:19697   */\n    tag_378:\n        /* \"#utility.yul\":19610:19644   */\n      0x4465706f73697420616d6f756e74206d75737420626520677265617465722074\n        /* \"#utility.yul\":19606:19607   */\n      0x00\n        /* \"#utility.yul\":19598:19604   */\n      dup3\n        /* \"#utility.yul\":19594:19608   */\n      add\n        /* \"#utility.yul\":19587:19645   */\n      mstore\n        /* \"#utility.yul\":19679:19689   */\n      0x68616e207a65726f000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19674:19676   */\n      0x20\n        /* \"#utility.yul\":19666:19672   */\n      dup3\n        /* \"#utility.yul\":19662:19677   */\n      add\n        /* \"#utility.yul\":19655:19690   */\n      mstore\n        /* \"#utility.yul\":19470:19697   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19703:20069   */\n    tag_379:\n        /* \"#utility.yul\":19845:19848   */\n      0x00\n        /* \"#utility.yul\":19866:19933   */\n      tag_617\n        /* \"#utility.yul\":19930:19932   */\n      0x28\n        /* \"#utility.yul\":19925:19928   */\n      dup4\n        /* \"#utility.yul\":19866:19933   */\n      tag_326\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":19859:19933   */\n      swap2\n      pop\n        /* \"#utility.yul\":19942:20035   */\n      tag_618\n        /* \"#utility.yul\":20031:20034   */\n      dup3\n        /* \"#utility.yul\":19942:20035   */\n      tag_378\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":20060:20062   */\n      0x40\n        /* \"#utility.yul\":20055:20058   */\n      dup3\n        /* \"#utility.yul\":20051:20063   */\n      add\n        /* \"#utility.yul\":20044:20063   */\n      swap1\n      pop\n        /* \"#utility.yul\":19703:20069   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20075:20494   */\n    tag_141:\n        /* \"#utility.yul\":20241:20245   */\n      0x00\n        /* \"#utility.yul\":20279:20281   */\n      0x20\n        /* \"#utility.yul\":20268:20277   */\n      dup3\n        /* \"#utility.yul\":20264:20282   */\n      add\n        /* \"#utility.yul\":20256:20282   */\n      swap1\n      pop\n        /* \"#utility.yul\":20328:20337   */\n      dup2\n        /* \"#utility.yul\":20322:20326   */\n      dup2\n        /* \"#utility.yul\":20318:20338   */\n      sub\n        /* \"#utility.yul\":20314:20315   */\n      0x00\n        /* \"#utility.yul\":20303:20312   */\n      dup4\n        /* \"#utility.yul\":20299:20316   */\n      add\n        /* \"#utility.yul\":20292:20339   */\n      mstore\n        /* \"#utility.yul\":20356:20487   */\n      tag_620\n        /* \"#utility.yul\":20482:20486   */\n      dup2\n        /* \"#utility.yul\":20356:20487   */\n      tag_379\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":20348:20487   */\n      swap1\n      pop\n        /* \"#utility.yul\":20075:20494   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20500:20585   */\n    tag_380:\n        /* \"#utility.yul\":20545:20552   */\n      0x00\n        /* \"#utility.yul\":20574:20579   */\n      dup2\n        /* \"#utility.yul\":20563:20579   */\n      swap1\n      pop\n        /* \"#utility.yul\":20500:20585   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20591:20747   */\n    tag_381:\n        /* \"#utility.yul\":20648:20657   */\n      0x00\n        /* \"#utility.yul\":20681:20741   */\n      tag_623\n        /* \"#utility.yul\":20698:20740   */\n      tag_624\n        /* \"#utility.yul\":20707:20739   */\n      tag_625\n        /* \"#utility.yul\":20733:20738   */\n      dup5\n        /* \"#utility.yul\":20707:20739   */\n      tag_380\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":20698:20740   */\n      tag_339\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":20681:20741   */\n      tag_344\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":20668:20741   */\n      swap1\n      pop\n        /* \"#utility.yul\":20591:20747   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20753:20898   */\n    tag_382:\n        /* \"#utility.yul\":20847:20891   */\n      tag_627\n        /* \"#utility.yul\":20885:20890   */\n      dup2\n        /* \"#utility.yul\":20847:20891   */\n      tag_381\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":20842:20845   */\n      dup3\n        /* \"#utility.yul\":20835:20892   */\n      mstore\n        /* \"#utility.yul\":20753:20898   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20904:21140   */\n    tag_162:\n        /* \"#utility.yul\":21004:21008   */\n      0x00\n        /* \"#utility.yul\":21042:21044   */\n      0x20\n        /* \"#utility.yul\":21031:21040   */\n      dup3\n        /* \"#utility.yul\":21027:21045   */\n      add\n        /* \"#utility.yul\":21019:21045   */\n      swap1\n      pop\n        /* \"#utility.yul\":21055:21133   */\n      tag_629\n        /* \"#utility.yul\":21130:21131   */\n      0x00\n        /* \"#utility.yul\":21119:21128   */\n      dup4\n        /* \"#utility.yul\":21115:21132   */\n      add\n        /* \"#utility.yul\":21106:21112   */\n      dup5\n        /* \"#utility.yul\":21055:21133   */\n      tag_382\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":20904:21140   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21146:21326   */\n    tag_383:\n        /* \"#utility.yul\":21194:21271   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21191:21192   */\n      0x00\n        /* \"#utility.yul\":21184:21272   */\n      mstore\n        /* \"#utility.yul\":21291:21295   */\n      0x22\n        /* \"#utility.yul\":21288:21289   */\n      0x04\n        /* \"#utility.yul\":21281:21296   */\n      mstore\n        /* \"#utility.yul\":21315:21319   */\n      0x24\n        /* \"#utility.yul\":21312:21313   */\n      0x00\n        /* \"#utility.yul\":21305:21320   */\n      revert\n        /* \"#utility.yul\":21332:21652   */\n    tag_170:\n        /* \"#utility.yul\":21376:21382   */\n      0x00\n        /* \"#utility.yul\":21413:21414   */\n      0x02\n        /* \"#utility.yul\":21407:21411   */\n      dup3\n        /* \"#utility.yul\":21403:21415   */\n      div\n        /* \"#utility.yul\":21393:21415   */\n      swap1\n      pop\n        /* \"#utility.yul\":21460:21461   */\n      0x01\n        /* \"#utility.yul\":21454:21458   */\n      dup3\n        /* \"#utility.yul\":21450:21462   */\n      and\n        /* \"#utility.yul\":21481:21499   */\n      dup1\n        /* \"#utility.yul\":21471:21552   */\n      tag_632\n      jumpi\n        /* \"#utility.yul\":21537:21541   */\n      0x7f\n        /* \"#utility.yul\":21529:21535   */\n      dup3\n        /* \"#utility.yul\":21525:21542   */\n      and\n        /* \"#utility.yul\":21515:21542   */\n      swap2\n      pop\n        /* \"#utility.yul\":21471:21552   */\n    tag_632:\n        /* \"#utility.yul\":21599:21601   */\n      0x20\n        /* \"#utility.yul\":21591:21597   */\n      dup3\n        /* \"#utility.yul\":21588:21602   */\n      lt\n        /* \"#utility.yul\":21568:21586   */\n      dup2\n        /* \"#utility.yul\":21565:21603   */\n      sub\n        /* \"#utility.yul\":21562:21646   */\n      tag_633\n      jumpi\n        /* \"#utility.yul\":21618:21636   */\n      tag_634\n      tag_383\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":21562:21646   */\n    tag_633:\n        /* \"#utility.yul\":21383:21652   */\n      pop\n        /* \"#utility.yul\":21332:21652   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21658:21748   */\n    tag_384:\n        /* \"#utility.yul\":21692:21699   */\n      0x00\n        /* \"#utility.yul\":21735:21740   */\n      dup2\n        /* \"#utility.yul\":21728:21741   */\n      iszero\n        /* \"#utility.yul\":21721:21742   */\n      iszero\n        /* \"#utility.yul\":21710:21742   */\n      swap1\n      pop\n        /* \"#utility.yul\":21658:21748   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21754:21870   */\n    tag_385:\n        /* \"#utility.yul\":21824:21845   */\n      tag_637\n        /* \"#utility.yul\":21839:21844   */\n      dup2\n        /* \"#utility.yul\":21824:21845   */\n      tag_384\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":21817:21822   */\n      dup2\n        /* \"#utility.yul\":21814:21846   */\n      eq\n        /* \"#utility.yul\":21804:21864   */\n      tag_638\n      jumpi\n        /* \"#utility.yul\":21860:21861   */\n      0x00\n        /* \"#utility.yul\":21857:21858   */\n      dup1\n        /* \"#utility.yul\":21850:21862   */\n      revert\n        /* \"#utility.yul\":21804:21864   */\n    tag_638:\n        /* \"#utility.yul\":21754:21870   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21876:22013   */\n    tag_386:\n        /* \"#utility.yul\":21930:21935   */\n      0x00\n        /* \"#utility.yul\":21961:21967   */\n      dup2\n        /* \"#utility.yul\":21955:21968   */\n      mload\n        /* \"#utility.yul\":21946:21968   */\n      swap1\n      pop\n        /* \"#utility.yul\":21977:22007   */\n      tag_640\n        /* \"#utility.yul\":22001:22006   */\n      dup2\n        /* \"#utility.yul\":21977:22007   */\n      tag_385\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":21876:22013   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22019:22364   */\n    tag_183:\n        /* \"#utility.yul\":22086:22092   */\n      0x00\n        /* \"#utility.yul\":22135:22137   */\n      0x20\n        /* \"#utility.yul\":22123:22132   */\n      dup3\n        /* \"#utility.yul\":22114:22121   */\n      dup5\n        /* \"#utility.yul\":22110:22133   */\n      sub\n        /* \"#utility.yul\":22106:22138   */\n      slt\n        /* \"#utility.yul\":22103:22222   */\n      iszero\n      tag_642\n      jumpi\n        /* \"#utility.yul\":22141:22220   */\n      tag_643\n      tag_330\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":22103:22222   */\n    tag_642:\n        /* \"#utility.yul\":22261:22262   */\n      0x00\n        /* \"#utility.yul\":22286:22347   */\n      tag_644\n        /* \"#utility.yul\":22339:22346   */\n      dup5\n        /* \"#utility.yul\":22330:22336   */\n      dup3\n        /* \"#utility.yul\":22319:22328   */\n      dup6\n        /* \"#utility.yul\":22315:22337   */\n      add\n        /* \"#utility.yul\":22286:22347   */\n      tag_386\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":22276:22347   */\n      swap2\n      pop\n        /* \"#utility.yul\":22232:22357   */\n      pop\n        /* \"#utility.yul\":22019:22364   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22370:22542   */\n    tag_387:\n        /* \"#utility.yul\":22510:22534   */\n      0x43616c6c6572206973206e6f7420616e2061646d696e00000000000000000000\n        /* \"#utility.yul\":22506:22507   */\n      0x00\n        /* \"#utility.yul\":22498:22504   */\n      dup3\n        /* \"#utility.yul\":22494:22508   */\n      add\n        /* \"#utility.yul\":22487:22535   */\n      mstore\n        /* \"#utility.yul\":22370:22542   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22548:22914   */\n    tag_388:\n        /* \"#utility.yul\":22690:22693   */\n      0x00\n        /* \"#utility.yul\":22711:22778   */\n      tag_647\n        /* \"#utility.yul\":22775:22777   */\n      0x16\n        /* \"#utility.yul\":22770:22773   */\n      dup4\n        /* \"#utility.yul\":22711:22778   */\n      tag_326\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":22704:22778   */\n      swap2\n      pop\n        /* \"#utility.yul\":22787:22880   */\n      tag_648\n        /* \"#utility.yul\":22876:22879   */\n      dup3\n        /* \"#utility.yul\":22787:22880   */\n      tag_387\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":22905:22907   */\n      0x20\n        /* \"#utility.yul\":22900:22903   */\n      dup3\n        /* \"#utility.yul\":22896:22908   */\n      add\n        /* \"#utility.yul\":22889:22908   */\n      swap1\n      pop\n        /* \"#utility.yul\":22548:22914   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22920:23339   */\n    tag_186:\n        /* \"#utility.yul\":23086:23090   */\n      0x00\n        /* \"#utility.yul\":23124:23126   */\n      0x20\n        /* \"#utility.yul\":23113:23122   */\n      dup3\n        /* \"#utility.yul\":23109:23127   */\n      add\n        /* \"#utility.yul\":23101:23127   */\n      swap1\n      pop\n        /* \"#utility.yul\":23173:23182   */\n      dup2\n        /* \"#utility.yul\":23167:23171   */\n      dup2\n        /* \"#utility.yul\":23163:23183   */\n      sub\n        /* \"#utility.yul\":23159:23160   */\n      0x00\n        /* \"#utility.yul\":23148:23157   */\n      dup4\n        /* \"#utility.yul\":23144:23161   */\n      add\n        /* \"#utility.yul\":23137:23184   */\n      mstore\n        /* \"#utility.yul\":23201:23332   */\n      tag_650\n        /* \"#utility.yul\":23327:23331   */\n      dup2\n        /* \"#utility.yul\":23201:23332   */\n      tag_388\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":23193:23332   */\n      swap1\n      pop\n        /* \"#utility.yul\":22920:23339   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23345:23566   */\n    tag_389:\n        /* \"#utility.yul\":23485:23519   */\n      0x53746172742074696d65206d757374206265206265666f726520656e64207469\n        /* \"#utility.yul\":23481:23482   */\n      0x00\n        /* \"#utility.yul\":23473:23479   */\n      dup3\n        /* \"#utility.yul\":23469:23483   */\n      add\n        /* \"#utility.yul\":23462:23520   */\n      mstore\n        /* \"#utility.yul\":23554:23558   */\n      0x6d65000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23549:23551   */\n      0x20\n        /* \"#utility.yul\":23541:23547   */\n      dup3\n        /* \"#utility.yul\":23537:23552   */\n      add\n        /* \"#utility.yul\":23530:23559   */\n      mstore\n        /* \"#utility.yul\":23345:23566   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23572:23938   */\n    tag_390:\n        /* \"#utility.yul\":23714:23717   */\n      0x00\n        /* \"#utility.yul\":23735:23802   */\n      tag_653\n        /* \"#utility.yul\":23799:23801   */\n      0x22\n        /* \"#utility.yul\":23794:23797   */\n      dup4\n        /* \"#utility.yul\":23735:23802   */\n      tag_326\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":23728:23802   */\n      swap2\n      pop\n        /* \"#utility.yul\":23811:23904   */\n      tag_654\n        /* \"#utility.yul\":23900:23903   */\n      dup3\n        /* \"#utility.yul\":23811:23904   */\n      tag_389\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":23929:23931   */\n      0x40\n        /* \"#utility.yul\":23924:23927   */\n      dup3\n        /* \"#utility.yul\":23920:23932   */\n      add\n        /* \"#utility.yul\":23913:23932   */\n      swap1\n      pop\n        /* \"#utility.yul\":23572:23938   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23944:24363   */\n    tag_190:\n        /* \"#utility.yul\":24110:24114   */\n      0x00\n        /* \"#utility.yul\":24148:24150   */\n      0x20\n        /* \"#utility.yul\":24137:24146   */\n      dup3\n        /* \"#utility.yul\":24133:24151   */\n      add\n        /* \"#utility.yul\":24125:24151   */\n      swap1\n      pop\n        /* \"#utility.yul\":24197:24206   */\n      dup2\n        /* \"#utility.yul\":24191:24195   */\n      dup2\n        /* \"#utility.yul\":24187:24207   */\n      sub\n        /* \"#utility.yul\":24183:24184   */\n      0x00\n        /* \"#utility.yul\":24172:24181   */\n      dup4\n        /* \"#utility.yul\":24168:24185   */\n      add\n        /* \"#utility.yul\":24161:24208   */\n      mstore\n        /* \"#utility.yul\":24225:24356   */\n      tag_656\n        /* \"#utility.yul\":24351:24355   */\n      dup2\n        /* \"#utility.yul\":24225:24356   */\n      tag_390\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":24217:24356   */\n      swap1\n      pop\n        /* \"#utility.yul\":23944:24363   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24369:24510   */\n    tag_391:\n        /* \"#utility.yul\":24418:24422   */\n      0x00\n        /* \"#utility.yul\":24441:24444   */\n      dup2\n        /* \"#utility.yul\":24433:24444   */\n      swap1\n      pop\n        /* \"#utility.yul\":24464:24467   */\n      dup2\n        /* \"#utility.yul\":24461:24462   */\n      0x00\n        /* \"#utility.yul\":24454:24468   */\n      mstore\n        /* \"#utility.yul\":24498:24502   */\n      0x20\n        /* \"#utility.yul\":24495:24496   */\n      0x00\n        /* \"#utility.yul\":24485:24503   */\n      keccak256\n        /* \"#utility.yul\":24477:24503   */\n      swap1\n      pop\n        /* \"#utility.yul\":24369:24510   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24516:24609   */\n    tag_392:\n        /* \"#utility.yul\":24553:24559   */\n      0x00\n        /* \"#utility.yul\":24600:24602   */\n      0x20\n        /* \"#utility.yul\":24595:24597   */\n      0x1f\n        /* \"#utility.yul\":24588:24593   */\n      dup4\n        /* \"#utility.yul\":24584:24598   */\n      add\n        /* \"#utility.yul\":24580:24603   */\n      div\n        /* \"#utility.yul\":24570:24603   */\n      swap1\n      pop\n        /* \"#utility.yul\":24516:24609   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24615:24722   */\n    tag_393:\n        /* \"#utility.yul\":24659:24667   */\n      0x00\n        /* \"#utility.yul\":24709:24714   */\n      dup3\n        /* \"#utility.yul\":24703:24707   */\n      dup3\n        /* \"#utility.yul\":24699:24715   */\n      shl\n        /* \"#utility.yul\":24678:24715   */\n      swap1\n      pop\n        /* \"#utility.yul\":24615:24722   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24728:25121   */\n    tag_394:\n        /* \"#utility.yul\":24797:24803   */\n      0x00\n        /* \"#utility.yul\":24847:24848   */\n      0x08\n        /* \"#utility.yul\":24835:24845   */\n      dup4\n        /* \"#utility.yul\":24831:24849   */\n      mul\n        /* \"#utility.yul\":24870:24967   */\n      tag_661\n        /* \"#utility.yul\":24900:24966   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":24889:24898   */\n      dup3\n        /* \"#utility.yul\":24870:24967   */\n      tag_393\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":24988:25027   */\n      tag_662\n        /* \"#utility.yul\":25018:25026   */\n      dup7\n        /* \"#utility.yul\":25007:25016   */\n      dup4\n        /* \"#utility.yul\":24988:25027   */\n      tag_393\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":24976:25027   */\n      swap6\n      pop\n        /* \"#utility.yul\":25060:25064   */\n      dup1\n        /* \"#utility.yul\":25056:25065   */\n      not\n        /* \"#utility.yul\":25049:25054   */\n      dup5\n        /* \"#utility.yul\":25045:25066   */\n      and\n        /* \"#utility.yul\":25036:25066   */\n      swap4\n      pop\n        /* \"#utility.yul\":25109:25113   */\n      dup1\n        /* \"#utility.yul\":25099:25107   */\n      dup7\n        /* \"#utility.yul\":25095:25114   */\n      and\n        /* \"#utility.yul\":25088:25093   */\n      dup5\n        /* \"#utility.yul\":25085:25115   */\n      or\n        /* \"#utility.yul\":25075:25115   */\n      swap3\n      pop\n        /* \"#utility.yul\":24804:25121   */\n      pop\n      pop\n        /* \"#utility.yul\":24728:25121   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25127:25269   */\n    tag_395:\n        /* \"#utility.yul\":25177:25186   */\n      0x00\n        /* \"#utility.yul\":25210:25263   */\n      tag_664\n        /* \"#utility.yul\":25228:25262   */\n      tag_665\n        /* \"#utility.yul\":25237:25261   */\n      tag_666\n        /* \"#utility.yul\":25255:25260   */\n      dup5\n        /* \"#utility.yul\":25237:25261   */\n      tag_323\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":25228:25262   */\n      tag_339\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":25210:25263   */\n      tag_323\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":25197:25263   */\n      swap1\n      pop\n        /* \"#utility.yul\":25127:25269   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25275:25350   */\n    tag_396:\n        /* \"#utility.yul\":25318:25321   */\n      0x00\n        /* \"#utility.yul\":25339:25344   */\n      dup2\n        /* \"#utility.yul\":25332:25344   */\n      swap1\n      pop\n        /* \"#utility.yul\":25275:25350   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25356:25625   */\n    tag_397:\n        /* \"#utility.yul\":25466:25505   */\n      tag_669\n        /* \"#utility.yul\":25497:25504   */\n      dup4\n        /* \"#utility.yul\":25466:25505   */\n      tag_395\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":25527:25618   */\n      tag_670\n        /* \"#utility.yul\":25576:25617   */\n      tag_671\n        /* \"#utility.yul\":25600:25616   */\n      dup3\n        /* \"#utility.yul\":25576:25617   */\n      tag_396\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":25568:25574   */\n      dup5\n        /* \"#utility.yul\":25561:25565   */\n      dup5\n        /* \"#utility.yul\":25555:25566   */\n      sload\n        /* \"#utility.yul\":25527:25618   */\n      tag_394\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":25521:25525   */\n      dup3\n        /* \"#utility.yul\":25514:25619   */\n      sstore\n        /* \"#utility.yul\":25432:25625   */\n      pop\n        /* \"#utility.yul\":25356:25625   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25631:25704   */\n    tag_398:\n        /* \"#utility.yul\":25676:25679   */\n      0x00\n        /* \"#utility.yul\":25631:25704   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":25710:25899   */\n    tag_399:\n        /* \"#utility.yul\":25787:25819   */\n      tag_674\n      tag_398\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":25828:25893   */\n      tag_675\n        /* \"#utility.yul\":25886:25892   */\n      dup2\n        /* \"#utility.yul\":25878:25884   */\n      dup5\n        /* \"#utility.yul\":25872:25876   */\n      dup5\n        /* \"#utility.yul\":25828:25893   */\n      tag_397\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":25763:25899   */\n      pop\n        /* \"#utility.yul\":25710:25899   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25905:26091   */\n    tag_400:\n        /* \"#utility.yul\":25965:26085   */\n    tag_677:\n        /* \"#utility.yul\":25982:25985   */\n      dup2\n        /* \"#utility.yul\":25975:25980   */\n      dup2\n        /* \"#utility.yul\":25972:25986   */\n      lt\n        /* \"#utility.yul\":25965:26085   */\n      iszero\n      tag_679\n      jumpi\n        /* \"#utility.yul\":26036:26075   */\n      tag_680\n        /* \"#utility.yul\":26073:26074   */\n      0x00\n        /* \"#utility.yul\":26066:26071   */\n      dup3\n        /* \"#utility.yul\":26036:26075   */\n      tag_399\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":26009:26010   */\n      0x01\n        /* \"#utility.yul\":26002:26007   */\n      dup2\n        /* \"#utility.yul\":25998:26011   */\n      add\n        /* \"#utility.yul\":25989:26011   */\n      swap1\n      pop\n        /* \"#utility.yul\":25965:26085   */\n      jump(tag_677)\n    tag_679:\n        /* \"#utility.yul\":25905:26091   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26097:26640   */\n    tag_401:\n        /* \"#utility.yul\":26198:26200   */\n      0x1f\n        /* \"#utility.yul\":26193:26196   */\n      dup3\n        /* \"#utility.yul\":26190:26201   */\n      gt\n        /* \"#utility.yul\":26187:26633   */\n      iszero\n      tag_682\n      jumpi\n        /* \"#utility.yul\":26232:26270   */\n      tag_683\n        /* \"#utility.yul\":26264:26269   */\n      dup2\n        /* \"#utility.yul\":26232:26270   */\n      tag_391\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":26316:26345   */\n      tag_684\n        /* \"#utility.yul\":26334:26344   */\n      dup5\n        /* \"#utility.yul\":26316:26345   */\n      tag_392\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":26306:26314   */\n      dup2\n        /* \"#utility.yul\":26302:26346   */\n      add\n        /* \"#utility.yul\":26499:26501   */\n      0x20\n        /* \"#utility.yul\":26487:26497   */\n      dup6\n        /* \"#utility.yul\":26484:26502   */\n      lt\n        /* \"#utility.yul\":26481:26530   */\n      iszero\n      tag_685\n      jumpi\n        /* \"#utility.yul\":26520:26528   */\n      dup2\n        /* \"#utility.yul\":26505:26528   */\n      swap1\n      pop\n        /* \"#utility.yul\":26481:26530   */\n    tag_685:\n        /* \"#utility.yul\":26543:26623   */\n      tag_686\n        /* \"#utility.yul\":26599:26621   */\n      tag_687\n        /* \"#utility.yul\":26617:26620   */\n      dup6\n        /* \"#utility.yul\":26599:26621   */\n      tag_392\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":26589:26597   */\n      dup4\n        /* \"#utility.yul\":26585:26622   */\n      add\n        /* \"#utility.yul\":26572:26583   */\n      dup3\n        /* \"#utility.yul\":26543:26623   */\n      tag_400\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":26202:26633   */\n      pop\n      pop\n        /* \"#utility.yul\":26187:26633   */\n    tag_682:\n        /* \"#utility.yul\":26097:26640   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26646:26763   */\n    tag_402:\n        /* \"#utility.yul\":26700:26708   */\n      0x00\n        /* \"#utility.yul\":26750:26755   */\n      dup3\n        /* \"#utility.yul\":26744:26748   */\n      dup3\n        /* \"#utility.yul\":26740:26756   */\n      shr\n        /* \"#utility.yul\":26719:26756   */\n      swap1\n      pop\n        /* \"#utility.yul\":26646:26763   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26769:26938   */\n    tag_403:\n        /* \"#utility.yul\":26813:26819   */\n      0x00\n        /* \"#utility.yul\":26846:26897   */\n      tag_690\n        /* \"#utility.yul\":26894:26895   */\n      0x00\n        /* \"#utility.yul\":26890:26896   */\n      not\n        /* \"#utility.yul\":26882:26887   */\n      dup5\n        /* \"#utility.yul\":26879:26880   */\n      0x08\n        /* \"#utility.yul\":26875:26888   */\n      mul\n        /* \"#utility.yul\":26846:26897   */\n      tag_402\n      jump\t// in\n    tag_690:\n        /* \"#utility.yul\":26842:26898   */\n      not\n        /* \"#utility.yul\":26927:26931   */\n      dup1\n        /* \"#utility.yul\":26921:26925   */\n      dup4\n        /* \"#utility.yul\":26917:26932   */\n      and\n        /* \"#utility.yul\":26907:26932   */\n      swap2\n      pop\n        /* \"#utility.yul\":26820:26938   */\n      pop\n        /* \"#utility.yul\":26769:26938   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26943:27238   */\n    tag_404:\n        /* \"#utility.yul\":27019:27023   */\n      0x00\n        /* \"#utility.yul\":27165:27194   */\n      tag_692\n        /* \"#utility.yul\":27190:27193   */\n      dup4\n        /* \"#utility.yul\":27184:27188   */\n      dup4\n        /* \"#utility.yul\":27165:27194   */\n      tag_403\n      jump\t// in\n    tag_692:\n        /* \"#utility.yul\":27157:27194   */\n      swap2\n      pop\n        /* \"#utility.yul\":27227:27230   */\n      dup3\n        /* \"#utility.yul\":27224:27225   */\n      0x02\n        /* \"#utility.yul\":27220:27231   */\n      mul\n        /* \"#utility.yul\":27214:27218   */\n      dup3\n        /* \"#utility.yul\":27211:27232   */\n      or\n        /* \"#utility.yul\":27203:27232   */\n      swap1\n      pop\n        /* \"#utility.yul\":26943:27238   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27243:28638   */\n    tag_192:\n        /* \"#utility.yul\":27360:27397   */\n      tag_694\n        /* \"#utility.yul\":27393:27396   */\n      dup3\n        /* \"#utility.yul\":27360:27397   */\n      tag_346\n      jump\t// in\n    tag_694:\n        /* \"#utility.yul\":27462:27480   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":27454:27460   */\n      dup2\n        /* \"#utility.yul\":27451:27481   */\n      gt\n        /* \"#utility.yul\":27448:27504   */\n      iszero\n      tag_695\n      jumpi\n        /* \"#utility.yul\":27484:27502   */\n      tag_696\n      tag_354\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":27448:27504   */\n    tag_695:\n        /* \"#utility.yul\":27528:27566   */\n      tag_697\n        /* \"#utility.yul\":27560:27564   */\n      dup3\n        /* \"#utility.yul\":27554:27565   */\n      sload\n        /* \"#utility.yul\":27528:27566   */\n      tag_170\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":27613:27680   */\n      tag_698\n        /* \"#utility.yul\":27673:27679   */\n      dup3\n        /* \"#utility.yul\":27665:27671   */\n      dup3\n        /* \"#utility.yul\":27659:27663   */\n      dup6\n        /* \"#utility.yul\":27613:27680   */\n      tag_401\n      jump\t// in\n    tag_698:\n        /* \"#utility.yul\":27707:27708   */\n      0x00\n        /* \"#utility.yul\":27731:27735   */\n      0x20\n        /* \"#utility.yul\":27718:27735   */\n      swap1\n      pop\n        /* \"#utility.yul\":27763:27765   */\n      0x1f\n        /* \"#utility.yul\":27755:27761   */\n      dup4\n        /* \"#utility.yul\":27752:27766   */\n      gt\n        /* \"#utility.yul\":27780:27781   */\n      0x01\n        /* \"#utility.yul\":27775:28393   */\n      dup2\n      eq\n      tag_700\n      jumpi\n        /* \"#utility.yul\":28437:28438   */\n      0x00\n        /* \"#utility.yul\":28454:28460   */\n      dup5\n        /* \"#utility.yul\":28451:28528   */\n      iszero\n      tag_701\n      jumpi\n        /* \"#utility.yul\":28503:28512   */\n      dup3\n        /* \"#utility.yul\":28498:28501   */\n      dup8\n        /* \"#utility.yul\":28494:28513   */\n      add\n        /* \"#utility.yul\":28488:28514   */\n      mload\n        /* \"#utility.yul\":28479:28514   */\n      swap1\n      pop\n        /* \"#utility.yul\":28451:28528   */\n    tag_701:\n        /* \"#utility.yul\":28554:28621   */\n      tag_702\n        /* \"#utility.yul\":28614:28620   */\n      dup6\n        /* \"#utility.yul\":28607:28612   */\n      dup3\n        /* \"#utility.yul\":28554:28621   */\n      tag_404\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":28548:28552   */\n      dup7\n        /* \"#utility.yul\":28541:28622   */\n      sstore\n        /* \"#utility.yul\":28410:28632   */\n      pop\n        /* \"#utility.yul\":27745:28632   */\n      jump(tag_699)\n        /* \"#utility.yul\":27775:28393   */\n    tag_700:\n        /* \"#utility.yul\":27827:27831   */\n      0x1f\n        /* \"#utility.yul\":27823:27832   */\n      not\n        /* \"#utility.yul\":27815:27821   */\n      dup5\n        /* \"#utility.yul\":27811:27833   */\n      and\n        /* \"#utility.yul\":27861:27898   */\n      tag_703\n        /* \"#utility.yul\":27893:27897   */\n      dup7\n        /* \"#utility.yul\":27861:27898   */\n      tag_391\n      jump\t// in\n    tag_703:\n        /* \"#utility.yul\":27920:27921   */\n      0x00\n        /* \"#utility.yul\":27934:28142   */\n    tag_704:\n        /* \"#utility.yul\":27948:27955   */\n      dup3\n        /* \"#utility.yul\":27945:27946   */\n      dup2\n        /* \"#utility.yul\":27942:27956   */\n      lt\n        /* \"#utility.yul\":27934:28142   */\n      iszero\n      tag_706\n      jumpi\n        /* \"#utility.yul\":28027:28036   */\n      dup5\n        /* \"#utility.yul\":28022:28025   */\n      dup10\n        /* \"#utility.yul\":28018:28037   */\n      add\n        /* \"#utility.yul\":28012:28038   */\n      mload\n        /* \"#utility.yul\":28004:28010   */\n      dup3\n        /* \"#utility.yul\":27997:28039   */\n      sstore\n        /* \"#utility.yul\":28078:28079   */\n      0x01\n        /* \"#utility.yul\":28070:28076   */\n      dup3\n        /* \"#utility.yul\":28066:28080   */\n      add\n        /* \"#utility.yul\":28056:28080   */\n      swap2\n      pop\n        /* \"#utility.yul\":28125:28127   */\n      0x20\n        /* \"#utility.yul\":28114:28123   */\n      dup6\n        /* \"#utility.yul\":28110:28128   */\n      add\n        /* \"#utility.yul\":28097:28128   */\n      swap5\n      pop\n        /* \"#utility.yul\":27971:27975   */\n      0x20\n        /* \"#utility.yul\":27968:27969   */\n      dup2\n        /* \"#utility.yul\":27964:27976   */\n      add\n        /* \"#utility.yul\":27959:27976   */\n      swap1\n      pop\n        /* \"#utility.yul\":27934:28142   */\n      jump(tag_704)\n    tag_706:\n        /* \"#utility.yul\":28170:28176   */\n      dup7\n        /* \"#utility.yul\":28161:28168   */\n      dup4\n        /* \"#utility.yul\":28158:28177   */\n      lt\n        /* \"#utility.yul\":28155:28334   */\n      iszero\n      tag_707\n      jumpi\n        /* \"#utility.yul\":28228:28237   */\n      dup5\n        /* \"#utility.yul\":28223:28226   */\n      dup10\n        /* \"#utility.yul\":28219:28238   */\n      add\n        /* \"#utility.yul\":28213:28239   */\n      mload\n        /* \"#utility.yul\":28271:28319   */\n      tag_708\n        /* \"#utility.yul\":28313:28317   */\n      0x1f\n        /* \"#utility.yul\":28305:28311   */\n      dup10\n        /* \"#utility.yul\":28301:28318   */\n      and\n        /* \"#utility.yul\":28290:28299   */\n      dup3\n        /* \"#utility.yul\":28271:28319   */\n      tag_403\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":28263:28269   */\n      dup4\n        /* \"#utility.yul\":28256:28320   */\n      sstore\n        /* \"#utility.yul\":28178:28334   */\n      pop\n        /* \"#utility.yul\":28155:28334   */\n    tag_707:\n        /* \"#utility.yul\":28380:28381   */\n      0x01\n        /* \"#utility.yul\":28376:28377   */\n      0x02\n        /* \"#utility.yul\":28368:28374   */\n      dup9\n        /* \"#utility.yul\":28364:28378   */\n      mul\n        /* \"#utility.yul\":28360:28382   */\n      add\n        /* \"#utility.yul\":28354:28358   */\n      dup9\n        /* \"#utility.yul\":28347:28383   */\n      sstore\n        /* \"#utility.yul\":27782:28393   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":27745:28632   */\n    tag_699:\n      pop\n        /* \"#utility.yul\":27335:28638   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":27243:28638   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28644:29173   */\n    tag_194:\n        /* \"#utility.yul\":28811:28815   */\n      0x00\n        /* \"#utility.yul\":28849:28851   */\n      0x60\n        /* \"#utility.yul\":28838:28847   */\n      dup3\n        /* \"#utility.yul\":28834:28852   */\n      add\n        /* \"#utility.yul\":28826:28852   */\n      swap1\n      pop\n        /* \"#utility.yul\":28862:28932   */\n      tag_710\n        /* \"#utility.yul\":28929:28930   */\n      0x00\n        /* \"#utility.yul\":28918:28927   */\n      dup4\n        /* \"#utility.yul\":28914:28931   */\n      add\n        /* \"#utility.yul\":28905:28911   */\n      dup7\n        /* \"#utility.yul\":28862:28932   */\n      tag_366\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":28942:29013   */\n      tag_711\n        /* \"#utility.yul\":29009:29011   */\n      0x20\n        /* \"#utility.yul\":28998:29007   */\n      dup4\n        /* \"#utility.yul\":28994:29012   */\n      add\n        /* \"#utility.yul\":28985:28991   */\n      dup6\n        /* \"#utility.yul\":28942:29013   */\n      tag_366\n      jump\t// in\n    tag_711:\n        /* \"#utility.yul\":29060:29069   */\n      dup2\n        /* \"#utility.yul\":29054:29058   */\n      dup2\n        /* \"#utility.yul\":29050:29070   */\n      sub\n        /* \"#utility.yul\":29045:29047   */\n      0x40\n        /* \"#utility.yul\":29034:29043   */\n      dup4\n        /* \"#utility.yul\":29030:29048   */\n      add\n        /* \"#utility.yul\":29023:29071   */\n      mstore\n        /* \"#utility.yul\":29088:29166   */\n      tag_712\n        /* \"#utility.yul\":29161:29165   */\n      dup2\n        /* \"#utility.yul\":29152:29158   */\n      dup5\n        /* \"#utility.yul\":29088:29166   */\n      tag_349\n      jump\t// in\n    tag_712:\n        /* \"#utility.yul\":29080:29166   */\n      swap1\n      pop\n        /* \"#utility.yul\":28644:29173   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29179:29346   */\n    tag_405:\n        /* \"#utility.yul\":29319:29338   */\n      0x5a65726f20616464726573732075736572000000000000000000000000000000\n        /* \"#utility.yul\":29315:29316   */\n      0x00\n        /* \"#utility.yul\":29307:29313   */\n      dup3\n        /* \"#utility.yul\":29303:29317   */\n      add\n        /* \"#utility.yul\":29296:29339   */\n      mstore\n        /* \"#utility.yul\":29179:29346   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29352:29718   */\n    tag_406:\n        /* \"#utility.yul\":29494:29497   */\n      0x00\n        /* \"#utility.yul\":29515:29582   */\n      tag_715\n        /* \"#utility.yul\":29579:29581   */\n      0x11\n        /* \"#utility.yul\":29574:29577   */\n      dup4\n        /* \"#utility.yul\":29515:29582   */\n      tag_326\n      jump\t// in\n    tag_715:\n        /* \"#utility.yul\":29508:29582   */\n      swap2\n      pop\n        /* \"#utility.yul\":29591:29684   */\n      tag_716\n        /* \"#utility.yul\":29680:29683   */\n      dup3\n        /* \"#utility.yul\":29591:29684   */\n      tag_405\n      jump\t// in\n    tag_716:\n        /* \"#utility.yul\":29709:29711   */\n      0x20\n        /* \"#utility.yul\":29704:29707   */\n      dup3\n        /* \"#utility.yul\":29700:29712   */\n      add\n        /* \"#utility.yul\":29693:29712   */\n      swap1\n      pop\n        /* \"#utility.yul\":29352:29718   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29724:30143   */\n    tag_205:\n        /* \"#utility.yul\":29890:29894   */\n      0x00\n        /* \"#utility.yul\":29928:29930   */\n      0x20\n        /* \"#utility.yul\":29917:29926   */\n      dup3\n        /* \"#utility.yul\":29913:29931   */\n      add\n        /* \"#utility.yul\":29905:29931   */\n      swap1\n      pop\n        /* \"#utility.yul\":29977:29986   */\n      dup2\n        /* \"#utility.yul\":29971:29975   */\n      dup2\n        /* \"#utility.yul\":29967:29987   */\n      sub\n        /* \"#utility.yul\":29963:29964   */\n      0x00\n        /* \"#utility.yul\":29952:29961   */\n      dup4\n        /* \"#utility.yul\":29948:29965   */\n      add\n        /* \"#utility.yul\":29941:29988   */\n      mstore\n        /* \"#utility.yul\":30005:30136   */\n      tag_718\n        /* \"#utility.yul\":30131:30135   */\n      dup2\n        /* \"#utility.yul\":30005:30136   */\n      tag_406\n      jump\t// in\n    tag_718:\n        /* \"#utility.yul\":29997:30136   */\n      swap1\n      pop\n        /* \"#utility.yul\":29724:30143   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30149:30323   */\n    tag_407:\n        /* \"#utility.yul\":30289:30315   */\n      0x4d69736d617463686564206172726179206c656e677468730000000000000000\n        /* \"#utility.yul\":30285:30286   */\n      0x00\n        /* \"#utility.yul\":30277:30283   */\n      dup3\n        /* \"#utility.yul\":30273:30287   */\n      add\n        /* \"#utility.yul\":30266:30316   */\n      mstore\n        /* \"#utility.yul\":30149:30323   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30329:30695   */\n    tag_408:\n        /* \"#utility.yul\":30471:30474   */\n      0x00\n        /* \"#utility.yul\":30492:30559   */\n      tag_721\n        /* \"#utility.yul\":30556:30558   */\n      0x18\n        /* \"#utility.yul\":30551:30554   */\n      dup4\n        /* \"#utility.yul\":30492:30559   */\n      tag_326\n      jump\t// in\n    tag_721:\n        /* \"#utility.yul\":30485:30559   */\n      swap2\n      pop\n        /* \"#utility.yul\":30568:30661   */\n      tag_722\n        /* \"#utility.yul\":30657:30660   */\n      dup3\n        /* \"#utility.yul\":30568:30661   */\n      tag_407\n      jump\t// in\n    tag_722:\n        /* \"#utility.yul\":30686:30688   */\n      0x20\n        /* \"#utility.yul\":30681:30684   */\n      dup3\n        /* \"#utility.yul\":30677:30689   */\n      add\n        /* \"#utility.yul\":30670:30689   */\n      swap1\n      pop\n        /* \"#utility.yul\":30329:30695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30701:31120   */\n    tag_217:\n        /* \"#utility.yul\":30867:30871   */\n      0x00\n        /* \"#utility.yul\":30905:30907   */\n      0x20\n        /* \"#utility.yul\":30894:30903   */\n      dup3\n        /* \"#utility.yul\":30890:30908   */\n      add\n        /* \"#utility.yul\":30882:30908   */\n      swap1\n      pop\n        /* \"#utility.yul\":30954:30963   */\n      dup2\n        /* \"#utility.yul\":30948:30952   */\n      dup2\n        /* \"#utility.yul\":30944:30964   */\n      sub\n        /* \"#utility.yul\":30940:30941   */\n      0x00\n        /* \"#utility.yul\":30929:30938   */\n      dup4\n        /* \"#utility.yul\":30925:30942   */\n      add\n        /* \"#utility.yul\":30918:30965   */\n      mstore\n        /* \"#utility.yul\":30982:31113   */\n      tag_724\n        /* \"#utility.yul\":31108:31112   */\n      dup2\n        /* \"#utility.yul\":30982:31113   */\n      tag_408\n      jump\t// in\n    tag_724:\n        /* \"#utility.yul\":30974:31113   */\n      swap1\n      pop\n        /* \"#utility.yul\":30701:31120   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31126:31306   */\n    tag_223:\n        /* \"#utility.yul\":31174:31251   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":31171:31172   */\n      0x00\n        /* \"#utility.yul\":31164:31252   */\n      mstore\n        /* \"#utility.yul\":31271:31275   */\n      0x32\n        /* \"#utility.yul\":31268:31269   */\n      0x04\n        /* \"#utility.yul\":31261:31276   */\n      mstore\n        /* \"#utility.yul\":31295:31299   */\n      0x24\n        /* \"#utility.yul\":31292:31293   */\n      0x00\n        /* \"#utility.yul\":31285:31300   */\n      revert\n        /* \"#utility.yul\":31312:31542   */\n    tag_409:\n        /* \"#utility.yul\":31452:31486   */\n      0x5769746864726177616c20616d6f756e74206d75737420626520677265617465\n        /* \"#utility.yul\":31448:31449   */\n      0x00\n        /* \"#utility.yul\":31440:31446   */\n      dup3\n        /* \"#utility.yul\":31436:31450   */\n      add\n        /* \"#utility.yul\":31429:31487   */\n      mstore\n        /* \"#utility.yul\":31521:31534   */\n      0x72207468616e207a65726f000000000000000000000000000000000000000000\n        /* \"#utility.yul\":31516:31518   */\n      0x20\n        /* \"#utility.yul\":31508:31514   */\n      dup3\n        /* \"#utility.yul\":31504:31519   */\n      add\n        /* \"#utility.yul\":31497:31535   */\n      mstore\n        /* \"#utility.yul\":31312:31542   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31548:31914   */\n    tag_410:\n        /* \"#utility.yul\":31690:31693   */\n      0x00\n        /* \"#utility.yul\":31711:31778   */\n      tag_728\n        /* \"#utility.yul\":31775:31777   */\n      0x2b\n        /* \"#utility.yul\":31770:31773   */\n      dup4\n        /* \"#utility.yul\":31711:31778   */\n      tag_326\n      jump\t// in\n    tag_728:\n        /* \"#utility.yul\":31704:31778   */\n      swap2\n      pop\n        /* \"#utility.yul\":31787:31880   */\n      tag_729\n        /* \"#utility.yul\":31876:31879   */\n      dup3\n        /* \"#utility.yul\":31787:31880   */\n      tag_409\n      jump\t// in\n    tag_729:\n        /* \"#utility.yul\":31905:31907   */\n      0x40\n        /* \"#utility.yul\":31900:31903   */\n      dup3\n        /* \"#utility.yul\":31896:31908   */\n      add\n        /* \"#utility.yul\":31889:31908   */\n      swap1\n      pop\n        /* \"#utility.yul\":31548:31914   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31920:32339   */\n    tag_246:\n        /* \"#utility.yul\":32086:32090   */\n      0x00\n        /* \"#utility.yul\":32124:32126   */\n      0x20\n        /* \"#utility.yul\":32113:32122   */\n      dup3\n        /* \"#utility.yul\":32109:32127   */\n      add\n        /* \"#utility.yul\":32101:32127   */\n      swap1\n      pop\n        /* \"#utility.yul\":32173:32182   */\n      dup2\n        /* \"#utility.yul\":32167:32171   */\n      dup2\n        /* \"#utility.yul\":32163:32183   */\n      sub\n        /* \"#utility.yul\":32159:32160   */\n      0x00\n        /* \"#utility.yul\":32148:32157   */\n      dup4\n        /* \"#utility.yul\":32144:32161   */\n      add\n        /* \"#utility.yul\":32137:32184   */\n      mstore\n        /* \"#utility.yul\":32201:32332   */\n      tag_731\n        /* \"#utility.yul\":32327:32331   */\n      dup2\n        /* \"#utility.yul\":32201:32332   */\n      tag_410\n      jump\t// in\n    tag_731:\n        /* \"#utility.yul\":32193:32332   */\n      swap1\n      pop\n        /* \"#utility.yul\":31920:32339   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32345:32513   */\n    tag_411:\n        /* \"#utility.yul\":32485:32505   */\n      0x496e73756666696369656e742066756e64730000000000000000000000000000\n        /* \"#utility.yul\":32481:32482   */\n      0x00\n        /* \"#utility.yul\":32473:32479   */\n      dup3\n        /* \"#utility.yul\":32469:32483   */\n      add\n        /* \"#utility.yul\":32462:32506   */\n      mstore\n        /* \"#utility.yul\":32345:32513   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32519:32885   */\n    tag_412:\n        /* \"#utility.yul\":32661:32664   */\n      0x00\n        /* \"#utility.yul\":32682:32749   */\n      tag_734\n        /* \"#utility.yul\":32746:32748   */\n      0x12\n        /* \"#utility.yul\":32741:32744   */\n      dup4\n        /* \"#utility.yul\":32682:32749   */\n      tag_326\n      jump\t// in\n    tag_734:\n        /* \"#utility.yul\":32675:32749   */\n      swap2\n      pop\n        /* \"#utility.yul\":32758:32851   */\n      tag_735\n        /* \"#utility.yul\":32847:32850   */\n      dup3\n        /* \"#utility.yul\":32758:32851   */\n      tag_411\n      jump\t// in\n    tag_735:\n        /* \"#utility.yul\":32876:32878   */\n      0x20\n        /* \"#utility.yul\":32871:32874   */\n      dup3\n        /* \"#utility.yul\":32867:32879   */\n      add\n        /* \"#utility.yul\":32860:32879   */\n      swap1\n      pop\n        /* \"#utility.yul\":32519:32885   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32891:33310   */\n    tag_249:\n        /* \"#utility.yul\":33057:33061   */\n      0x00\n        /* \"#utility.yul\":33095:33097   */\n      0x20\n        /* \"#utility.yul\":33084:33093   */\n      dup3\n        /* \"#utility.yul\":33080:33098   */\n      add\n        /* \"#utility.yul\":33072:33098   */\n      swap1\n      pop\n        /* \"#utility.yul\":33144:33153   */\n      dup2\n        /* \"#utility.yul\":33138:33142   */\n      dup2\n        /* \"#utility.yul\":33134:33154   */\n      sub\n        /* \"#utility.yul\":33130:33131   */\n      0x00\n        /* \"#utility.yul\":33119:33128   */\n      dup4\n        /* \"#utility.yul\":33115:33132   */\n      add\n        /* \"#utility.yul\":33108:33155   */\n      mstore\n        /* \"#utility.yul\":33172:33303   */\n      tag_737\n        /* \"#utility.yul\":33298:33302   */\n      dup2\n        /* \"#utility.yul\":33172:33303   */\n      tag_412\n      jump\t// in\n    tag_737:\n        /* \"#utility.yul\":33164:33303   */\n      swap1\n      pop\n        /* \"#utility.yul\":32891:33310   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33316:33497   */\n    tag_413:\n        /* \"#utility.yul\":33456:33489   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":33452:33453   */\n      0x00\n        /* \"#utility.yul\":33444:33450   */\n      dup3\n        /* \"#utility.yul\":33440:33454   */\n      add\n        /* \"#utility.yul\":33433:33490   */\n      mstore\n        /* \"#utility.yul\":33316:33497   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33503:33869   */\n    tag_414:\n        /* \"#utility.yul\":33645:33648   */\n      0x00\n        /* \"#utility.yul\":33666:33733   */\n      tag_740\n        /* \"#utility.yul\":33730:33732   */\n      0x1f\n        /* \"#utility.yul\":33725:33728   */\n      dup4\n        /* \"#utility.yul\":33666:33733   */\n      tag_326\n      jump\t// in\n    tag_740:\n        /* \"#utility.yul\":33659:33733   */\n      swap2\n      pop\n        /* \"#utility.yul\":33742:33835   */\n      tag_741\n        /* \"#utility.yul\":33831:33834   */\n      dup3\n        /* \"#utility.yul\":33742:33835   */\n      tag_413\n      jump\t// in\n    tag_741:\n        /* \"#utility.yul\":33860:33862   */\n      0x20\n        /* \"#utility.yul\":33855:33858   */\n      dup3\n        /* \"#utility.yul\":33851:33863   */\n      add\n        /* \"#utility.yul\":33844:33863   */\n      swap1\n      pop\n        /* \"#utility.yul\":33503:33869   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33875:34294   */\n    tag_268:\n        /* \"#utility.yul\":34041:34045   */\n      0x00\n        /* \"#utility.yul\":34079:34081   */\n      0x20\n        /* \"#utility.yul\":34068:34077   */\n      dup3\n        /* \"#utility.yul\":34064:34082   */\n      add\n        /* \"#utility.yul\":34056:34082   */\n      swap1\n      pop\n        /* \"#utility.yul\":34128:34137   */\n      dup2\n        /* \"#utility.yul\":34122:34126   */\n      dup2\n        /* \"#utility.yul\":34118:34138   */\n      sub\n        /* \"#utility.yul\":34114:34115   */\n      0x00\n        /* \"#utility.yul\":34103:34112   */\n      dup4\n        /* \"#utility.yul\":34099:34116   */\n      add\n        /* \"#utility.yul\":34092:34139   */\n      mstore\n        /* \"#utility.yul\":34156:34287   */\n      tag_743\n        /* \"#utility.yul\":34282:34286   */\n      dup2\n        /* \"#utility.yul\":34156:34287   */\n      tag_414\n      jump\t// in\n    tag_743:\n        /* \"#utility.yul\":34148:34287   */\n      swap1\n      pop\n        /* \"#utility.yul\":33875:34294   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":34300:34632   */\n    tag_272:\n        /* \"#utility.yul\":34421:34425   */\n      0x00\n        /* \"#utility.yul\":34459:34461   */\n      0x40\n        /* \"#utility.yul\":34448:34457   */\n      dup3\n        /* \"#utility.yul\":34444:34462   */\n      add\n        /* \"#utility.yul\":34436:34462   */\n      swap1\n      pop\n        /* \"#utility.yul\":34472:34543   */\n      tag_745\n        /* \"#utility.yul\":34540:34541   */\n      0x00\n        /* \"#utility.yul\":34529:34538   */\n      dup4\n        /* \"#utility.yul\":34525:34542   */\n      add\n        /* \"#utility.yul\":34516:34522   */\n      dup6\n        /* \"#utility.yul\":34472:34543   */\n      tag_336\n      jump\t// in\n    tag_745:\n        /* \"#utility.yul\":34553:34625   */\n      tag_746\n        /* \"#utility.yul\":34621:34623   */\n      0x20\n        /* \"#utility.yul\":34610:34619   */\n      dup4\n        /* \"#utility.yul\":34606:34624   */\n      add\n        /* \"#utility.yul\":34597:34603   */\n      dup5\n        /* \"#utility.yul\":34553:34625   */\n      tag_325\n      jump\t// in\n    tag_746:\n        /* \"#utility.yul\":34300:34632   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":34638:35080   */\n    tag_278:\n        /* \"#utility.yul\":34787:34791   */\n      0x00\n        /* \"#utility.yul\":34825:34827   */\n      0x60\n        /* \"#utility.yul\":34814:34823   */\n      dup3\n        /* \"#utility.yul\":34810:34828   */\n      add\n        /* \"#utility.yul\":34802:34828   */\n      swap1\n      pop\n        /* \"#utility.yul\":34838:34909   */\n      tag_748\n        /* \"#utility.yul\":34906:34907   */\n      0x00\n        /* \"#utility.yul\":34895:34904   */\n      dup4\n        /* \"#utility.yul\":34891:34908   */\n      add\n        /* \"#utility.yul\":34882:34888   */\n      dup7\n        /* \"#utility.yul\":34838:34909   */\n      tag_336\n      jump\t// in\n    tag_748:\n        /* \"#utility.yul\":34919:34991   */\n      tag_749\n        /* \"#utility.yul\":34987:34989   */\n      0x20\n        /* \"#utility.yul\":34976:34985   */\n      dup4\n        /* \"#utility.yul\":34972:34990   */\n      add\n        /* \"#utility.yul\":34963:34969   */\n      dup6\n        /* \"#utility.yul\":34919:34991   */\n      tag_336\n      jump\t// in\n    tag_749:\n        /* \"#utility.yul\":35001:35073   */\n      tag_750\n        /* \"#utility.yul\":35069:35071   */\n      0x40\n        /* \"#utility.yul\":35058:35067   */\n      dup4\n        /* \"#utility.yul\":35054:35072   */\n      add\n        /* \"#utility.yul\":35045:35051   */\n      dup5\n        /* \"#utility.yul\":35001:35073   */\n      tag_325\n      jump\t// in\n    tag_750:\n        /* \"#utility.yul\":34638:35080   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122091196f9bbb7993e4f8222bb807bd2f78c7e9745de458f7283a21cd11c875d3fd64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50612f428061001f6000396000f3fe6080604052600436106100ec5760003560e01c80638da5cb5b1161008a578063b807a3c411610059578063b807a3c4146103c0578063e3e7c1f9146103e9578063f2fde38b14610412578063f3fef3a31461043b576101af565b80638da5cb5b146102f2578063a9012c891461031d578063a9590e8a14610346578063aee9c87214610383576101af565b8063485cc955116100c6578063485cc9551461025a578063715018a61461028357806385c758f71461029a5780638a19c8bc146102c5576101af565b80631e83409a146101ea57806331f7d9641461021357806347e7ef241461023e576101af565b366101af5734603560008073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546101409190611d34565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62346040516101a59190611d77565b60405180910390a3005b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e190611def565b60405180910390fd5b3480156101f657600080fd5b50610211600480360381019061020c9190611e81565b610464565b005b34801561021f57600080fd5b506102286108d8565b6040516102359190611ebd565b60405180910390f35b61025860048036038101906102539190611f04565b6108dd565b005b34801561026657600080fd5b50610281600480360381019061027c9190611f44565b610a98565b005b34801561028f57600080fd5b50610298610c71565b005b3480156102a657600080fd5b506102af610c85565b6040516102bc9190611fe3565b60405180910390f35b3480156102d157600080fd5b506102da610cab565b6040516102e9939291906120a0565b60405180910390f35b3480156102fe57600080fd5b50610307610d73565b6040516103149190611ebd565b60405180910390f35b34801561032957600080fd5b50610344600480360381019061033f919061223f565b610dab565b005b34801561035257600080fd5b5061036d60048036038101906103689190611f44565b610fc4565b60405161037a9190611d77565b60405180910390f35b34801561038f57600080fd5b506103aa60048036038101906103a59190611e81565b610fe9565b6040516103b79190611d77565b60405180910390f35b3480156103cc57600080fd5b506103e760048036038101906103e291906122ae565b611001565b005b3480156103f557600080fd5b50610410600480360381019061040b91906123b7565b611236565b005b34801561041e57600080fd5b5061043960048036038101906104349190611e81565b6114e2565b005b34801561044757600080fd5b50610462600480360381019061045d9190611f04565b611568565b005b61046c61182b565b603360000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff164210806104bf5750603360000160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1642115b156105375742603360000160009054906101000a900467ffffffffffffffff16603360000160089054906101000a900467ffffffffffffffff166040517ffa7410d400000000000000000000000000000000000000000000000000000000815260040161052e9392919061247d565b60405180910390fd5b6000603660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600081116105fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f290612500565b60405180910390fd5b80603560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561067d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106749061256c565b60405180910390fd5b6000603660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080603560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461074e919061258c565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361083b5760003373ffffffffffffffffffffffffffffffffffffffff16826040516107af906125f1565b60006040518083038185875af1925050503d80600081146107ec576040519150601f19603f3d011682016040523d82523d6000602084013e6107f1565b606091505b5050905080610835576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082c90612652565b60405180910390fd5b50610867565b61086633828473ffffffffffffffffffffffffffffffffffffffff1661187a9092919063ffffffff16565b5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167ff7a40077ff7a04c7e61f6f26fb13774259ddf1b6bce9ecf26a8276cdd3992683836040516108c49190611d77565b60405180910390a3506108d56118f9565b50565b600081565b6108e561182b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109605780341461095b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610952906126be565b60405180910390fd5b6109d1565b600081116109a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099a90612750565b60405180910390fd5b6109d03330838573ffffffffffffffffffffffffffffffffffffffff16611903909392919063ffffffff16565b5b80603560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a209190611d34565b925050819055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f6283604051610a849190611d77565b60405180910390a3610a946118f9565b5050565b6000610aa2611985565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff16148015610af05750825b9050600060018367ffffffffffffffff16148015610b25575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610b33575080155b15610b6a576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610bba5760018560000160086101000a81548160ff0219169083151502179055505b610bc3866119ad565b610bcb6119c1565b86603260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508315610c685760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610c5f91906127ab565b60405180910390a15b50505050505050565b610c796119d3565b610c836000611a5a565b565b603260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60338060000160009054906101000a900467ffffffffffffffff16908060000160089054906101000a900467ffffffffffffffff1690806001018054610cf0906127f5565b80601f0160208091040260200160405190810160405280929190818152602001828054610d1c906127f5565b8015610d695780601f10610d3e57610100808354040283529160200191610d69565b820191906000526020600020905b815481529060010190602001808311610d4c57829003601f168201915b5050505050905083565b600080610d7e611b31565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b603260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166324d7806c336040518263ffffffff1660e01b8152600401610e069190611ebd565b602060405180830381865afa158015610e23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e47919061285e565b610e86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7d906128d7565b60405180910390fd5b8167ffffffffffffffff168367ffffffffffffffff1610610edc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed390612969565b60405180910390fd5b60405180606001604052808467ffffffffffffffff1681526020018367ffffffffffffffff16815260200182815250603360008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506040820151816001019081610f809190612b2b565b509050507f09e6db48f22357e6dce2bbff89db8ff25f0012a08186d6ea72e2343fdc112e13838383604051610fb793929190612bfd565b60405180910390a1505050565b6036602052816000526040600020602052806000526040600020600091509150505481565b60356020528060005260406000206000915090505481565b603260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166324d7806c336040518263ffffffff1660e01b815260040161105c9190611ebd565b602060405180830381865afa158015611079573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109d919061285e565b6110dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d3906128d7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361114b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114290612c87565b60405180910390fd5b80603660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f3d0601f3b0e52fd772f1fa71d91651b34b6a11144bea30d74e0f820019a04dc2836040516112299190611d77565b60405180910390a3505050565b603260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166324d7806c336040518263ffffffff1660e01b81526004016112919190611ebd565b602060405180830381865afa1580156112ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d2919061285e565b611311576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611308906128d7565b60405180910390fd5b818190508484905014611359576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161135090612cf3565b60405180910390fd5b60005b848490508110156114da5782828281811061137a57611379612d13565b5b905060200201356036600087878581811061139857611397612d13565b5b90506020020160208101906113ad9190611e81565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508573ffffffffffffffffffffffffffffffffffffffff1685858381811061145257611451612d13565b5b90506020020160208101906114679190611e81565b73ffffffffffffffffffffffffffffffffffffffff167f3d0601f3b0e52fd772f1fa71d91651b34b6a11144bea30d74e0f820019a04dc28585858181106114b1576114b0612d13565b5b905060200201356040516114c59190611d77565b60405180910390a3808060010191505061135c565b505050505050565b6114ea6119d3565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361155c5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016115539190611ebd565b60405180910390fd5b61156581611a5a565b50565b6115706119d3565b61157861182b565b600081116115bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115b290612db4565b60405180910390fd5b80603560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561163d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161163490612e20565b60405180910390fd5b80603560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461168c919061258c565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036117805760006116d1610d73565b73ffffffffffffffffffffffffffffffffffffffff16826040516116f4906125f1565b60006040518083038185875af1925050503d8060008114611731576040519150601f19603f3d011682016040523d82523d6000602084013e611736565b606091505b505090508061177a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161177190612652565b60405180910390fd5b506117b3565b6117b261178b610d73565b828473ffffffffffffffffffffffffffffffffffffffff1661187a9092919063ffffffff16565b5b8173ffffffffffffffffffffffffffffffffffffffff166117d2610d73565b73ffffffffffffffffffffffffffffffffffffffff167f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb836040516118179190611d77565b60405180910390a36118276118f9565b5050565b600260005403611870576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161186790612e8c565b60405180910390fd5b6002600081905550565b6118f4838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016118ad929190612eac565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611b59565b505050565b6001600081905550565b61197f848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161193893929190612ed5565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611b59565b50505050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b6119b5611bfb565b6119be81611c3b565b50565b6119c9611bfb565b6119d1611cc1565b565b6119db611cd3565b73ffffffffffffffffffffffffffffffffffffffff166119f9610d73565b73ffffffffffffffffffffffffffffffffffffffff1614611a5857611a1c611cd3565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611a4f9190611ebd565b60405180910390fd5b565b6000611a64611b31565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b600080602060008451602086016000885af180611b7c576040513d6000823e3d81fd5b3d925060005191505060008214611b97576001811415611bb3565b60008473ffffffffffffffffffffffffffffffffffffffff163b145b15611bf557836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401611bec9190611ebd565b60405180910390fd5b50505050565b611c03611cdb565b611c39576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611c43611bfb565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611cb55760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611cac9190611ebd565b60405180910390fd5b611cbe81611a5a565b50565b611cc9611bfb565b6001600081905550565b600033905090565b6000611ce5611985565b60000160089054906101000a900460ff16905090565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611d3f82611cfb565b9150611d4a83611cfb565b9250828201905080821115611d6257611d61611d05565b5b92915050565b611d7181611cfb565b82525050565b6000602082019050611d8c6000830184611d68565b92915050565b600082825260208201905092915050565b7f537765657473706f743a20757365206465706f73697428290000000000000000600082015250565b6000611dd9601883611d92565b9150611de482611da3565b602082019050919050565b60006020820190508181036000830152611e0881611dcc565b9050919050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611e4e82611e23565b9050919050565b611e5e81611e43565b8114611e6957600080fd5b50565b600081359050611e7b81611e55565b92915050565b600060208284031215611e9757611e96611e19565b5b6000611ea584828501611e6c565b91505092915050565b611eb781611e43565b82525050565b6000602082019050611ed26000830184611eae565b92915050565b611ee181611cfb565b8114611eec57600080fd5b50565b600081359050611efe81611ed8565b92915050565b60008060408385031215611f1b57611f1a611e19565b5b6000611f2985828601611e6c565b9250506020611f3a85828601611eef565b9150509250929050565b60008060408385031215611f5b57611f5a611e19565b5b6000611f6985828601611e6c565b9250506020611f7a85828601611e6c565b9150509250929050565b6000819050919050565b6000611fa9611fa4611f9f84611e23565b611f84565b611e23565b9050919050565b6000611fbb82611f8e565b9050919050565b6000611fcd82611fb0565b9050919050565b611fdd81611fc2565b82525050565b6000602082019050611ff86000830184611fd4565b92915050565b600067ffffffffffffffff82169050919050565b61201b81611ffe565b82525050565b600081519050919050565b60005b8381101561204a57808201518184015260208101905061202f565b60008484015250505050565b6000601f19601f8301169050919050565b600061207282612021565b61207c8185611d92565b935061208c81856020860161202c565b61209581612056565b840191505092915050565b60006060820190506120b56000830186612012565b6120c26020830185612012565b81810360408301526120d48184612067565b9050949350505050565b6120e781611ffe565b81146120f257600080fd5b50565b600081359050612104816120de565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61214c82612056565b810181811067ffffffffffffffff8211171561216b5761216a612114565b5b80604052505050565b600061217e611e0f565b905061218a8282612143565b919050565b600067ffffffffffffffff8211156121aa576121a9612114565b5b6121b382612056565b9050602081019050919050565b82818337600083830152505050565b60006121e26121dd8461218f565b612174565b9050828152602081018484840111156121fe576121fd61210f565b5b6122098482856121c0565b509392505050565b600082601f8301126122265761222561210a565b5b81356122368482602086016121cf565b91505092915050565b60008060006060848603121561225857612257611e19565b5b6000612266868287016120f5565b9350506020612277868287016120f5565b925050604084013567ffffffffffffffff81111561229857612297611e1e565b5b6122a486828701612211565b9150509250925092565b6000806000606084860312156122c7576122c6611e19565b5b60006122d586828701611e6c565b93505060206122e686828701611e6c565b92505060406122f786828701611eef565b9150509250925092565b600080fd5b600080fd5b60008083601f8401126123215761232061210a565b5b8235905067ffffffffffffffff81111561233e5761233d612301565b5b60208301915083602082028301111561235a57612359612306565b5b9250929050565b60008083601f8401126123775761237661210a565b5b8235905067ffffffffffffffff81111561239457612393612301565b5b6020830191508360208202830111156123b0576123af612306565b5b9250929050565b6000806000806000606086880312156123d3576123d2611e19565b5b60006123e188828901611e6c565b955050602086013567ffffffffffffffff81111561240257612401611e1e565b5b61240e8882890161230b565b9450945050604086013567ffffffffffffffff81111561243157612430611e1e565b5b61243d88828901612361565b92509250509295509295909350565b600061246761246261245d84611ffe565b611f84565b611cfb565b9050919050565b6124778161244c565b82525050565b60006060820190506124926000830186611d68565b61249f602083018561246e565b6124ac604083018461246e565b949350505050565b7f4e6f20636c61696d61626c6520616d6f756e7400000000000000000000000000600082015250565b60006124ea601383611d92565b91506124f5826124b4565b602082019050919050565b60006020820190508181036000830152612519816124dd565b9050919050565b7f496e73756666696369656e742066756e647320696e206a617200000000000000600082015250565b6000612556601983611d92565b915061256182612520565b602082019050919050565b6000602082019050818103600083015261258581612549565b9050919050565b600061259782611cfb565b91506125a283611cfb565b92508282039050818111156125ba576125b9611d05565b5b92915050565b600081905092915050565b50565b60006125db6000836125c0565b91506125e6826125cb565b600082019050919050565b60006125fc826125ce565b9150819050919050565b7f4574686572207472616e73666572206661696c65640000000000000000000000600082015250565b600061263c601583611d92565b915061264782612606565b602082019050919050565b6000602082019050818103600083015261266b8161262f565b9050919050565b7f496e636f727265637420457468657220616d6f756e7400000000000000000000600082015250565b60006126a8601683611d92565b91506126b382612672565b602082019050919050565b600060208201905081810360008301526126d78161269b565b9050919050565b7f4465706f73697420616d6f756e74206d7573742062652067726561746572207460008201527f68616e207a65726f000000000000000000000000000000000000000000000000602082015250565b600061273a602883611d92565b9150612745826126de565b604082019050919050565b600060208201905081810360008301526127698161272d565b9050919050565b6000819050919050565b600061279561279061278b84612770565b611f84565b611ffe565b9050919050565b6127a58161277a565b82525050565b60006020820190506127c0600083018461279c565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061280d57607f821691505b6020821081036128205761281f6127c6565b5b50919050565b60008115159050919050565b61283b81612826565b811461284657600080fd5b50565b60008151905061285881612832565b92915050565b60006020828403121561287457612873611e19565b5b600061288284828501612849565b91505092915050565b7f43616c6c6572206973206e6f7420616e2061646d696e00000000000000000000600082015250565b60006128c1601683611d92565b91506128cc8261288b565b602082019050919050565b600060208201905081810360008301526128f0816128b4565b9050919050565b7f53746172742074696d65206d757374206265206265666f726520656e6420746960008201527f6d65000000000000000000000000000000000000000000000000000000000000602082015250565b6000612953602283611d92565b915061295e826128f7565b604082019050919050565b6000602082019050818103600083015261298281612946565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026129eb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826129ae565b6129f586836129ae565b95508019841693508086168417925050509392505050565b6000612a28612a23612a1e84611cfb565b611f84565b611cfb565b9050919050565b6000819050919050565b612a4283612a0d565b612a56612a4e82612a2f565b8484546129bb565b825550505050565b600090565b612a6b612a5e565b612a76818484612a39565b505050565b5b81811015612a9a57612a8f600082612a63565b600181019050612a7c565b5050565b601f821115612adf57612ab081612989565b612ab98461299e565b81016020851015612ac8578190505b612adc612ad48561299e565b830182612a7b565b50505b505050565b600082821c905092915050565b6000612b0260001984600802612ae4565b1980831691505092915050565b6000612b1b8383612af1565b9150826002028217905092915050565b612b3482612021565b67ffffffffffffffff811115612b4d57612b4c612114565b5b612b5782546127f5565b612b62828285612a9e565b600060209050601f831160018114612b955760008415612b83578287015190505b612b8d8582612b0f565b865550612bf5565b601f198416612ba386612989565b60005b82811015612bcb57848901518255600182019150602085019450602081019050612ba6565b86831015612be85784890151612be4601f891682612af1565b8355505b6001600288020188555050505b505050505050565b6000606082019050612c12600083018661246e565b612c1f602083018561246e565b8181036040830152612c318184612067565b9050949350505050565b7f5a65726f20616464726573732075736572000000000000000000000000000000600082015250565b6000612c71601183611d92565b9150612c7c82612c3b565b602082019050919050565b60006020820190508181036000830152612ca081612c64565b9050919050565b7f4d69736d617463686564206172726179206c656e677468730000000000000000600082015250565b6000612cdd601883611d92565b9150612ce882612ca7565b602082019050919050565b60006020820190508181036000830152612d0c81612cd0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f5769746864726177616c20616d6f756e74206d7573742062652067726561746560008201527f72207468616e207a65726f000000000000000000000000000000000000000000602082015250565b6000612d9e602b83611d92565b9150612da982612d42565b604082019050919050565b60006020820190508181036000830152612dcd81612d91565b9050919050565b7f496e73756666696369656e742066756e64730000000000000000000000000000600082015250565b6000612e0a601283611d92565b9150612e1582612dd4565b602082019050919050565b60006020820190508181036000830152612e3981612dfd565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000612e76601f83611d92565b9150612e8182612e40565b602082019050919050565b60006020820190508181036000830152612ea581612e69565b9050919050565b6000604082019050612ec16000830185611eae565b612ece6020830184611d68565b9392505050565b6000606082019050612eea6000830186611eae565b612ef76020830185611eae565b612f046040830184611d68565b94935050505056fea264697066735822122091196f9bbb7993e4f8222bb807bd2f78c7e9745de458f7283a21cd11c875d3fd64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F42 DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEC JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xB807A3C4 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xB807A3C4 EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0xE3E7C1F9 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x43B JUMPI PUSH2 0x1AF JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0xA9012C89 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xA9590E8A EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0xAEE9C872 EQ PUSH2 0x383 JUMPI PUSH2 0x1AF JUMP JUMPDEST DUP1 PUSH4 0x485CC955 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x85C758F7 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x8A19C8BC EQ PUSH2 0x2C5 JUMPI PUSH2 0x1AF JUMP JUMPDEST DUP1 PUSH4 0x1E83409A EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x31F7D964 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x23E JUMPI PUSH2 0x1AF JUMP JUMPDEST CALLDATASIZE PUSH2 0x1AF JUMPI CALLVALUE PUSH1 0x35 PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x1D34 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5548C837AB068CF56A2C2479DF0882A4922FD203EDB7517321831D95078C5F62 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E1 SWAP1 PUSH2 0x1DEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x1E81 JUMP JUMPDEST PUSH2 0x464 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x228 PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x258 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x1F04 JUMP JUMPDEST PUSH2 0x8DD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x281 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x1F44 JUMP JUMPDEST PUSH2 0xA98 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x298 PUSH2 0xC71 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AF PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x1FE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH2 0xCAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0xD73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x344 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x223F JUMP JUMPDEST PUSH2 0xDAB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x1F44 JUMP JUMPDEST PUSH2 0xFC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37A SWAP2 SWAP1 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x1E81 JUMP JUMPDEST PUSH2 0xFE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E2 SWAP2 SWAP1 PUSH2 0x22AE JUMP JUMPDEST PUSH2 0x1001 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x410 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40B SWAP2 SWAP1 PUSH2 0x23B7 JUMP JUMPDEST PUSH2 0x1236 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x439 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x434 SWAP2 SWAP1 PUSH2 0x1E81 JUMP JUMPDEST PUSH2 0x14E2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x447 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x462 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45D SWAP2 SWAP1 PUSH2 0x1F04 JUMP JUMPDEST PUSH2 0x1568 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46C PUSH2 0x182B JUMP JUMPDEST PUSH1 0x33 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND TIMESTAMP LT DUP1 PUSH2 0x4BF JUMPI POP PUSH1 0x33 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND TIMESTAMP GT JUMPDEST ISZERO PUSH2 0x537 JUMPI TIMESTAMP PUSH1 0x33 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x33 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH32 0xFA7410D400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x52E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x247D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x36 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x5FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F2 SWAP1 PUSH2 0x2500 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x67D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x674 SWAP1 PUSH2 0x256C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x36 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x35 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x74E SWAP2 SWAP1 PUSH2 0x258C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x83B JUMPI PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x7AF SWAP1 PUSH2 0x25F1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x7EC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7F1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x835 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82C SWAP1 PUSH2 0x2652 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x867 JUMP JUMPDEST PUSH2 0x866 CALLER DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x187A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF7A40077FF7A04C7E61F6F26FB13774259DDF1B6BCE9ECF26A8276CDD3992683 DUP4 PUSH1 0x40 MLOAD PUSH2 0x8C4 SWAP2 SWAP1 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x8D5 PUSH2 0x18F9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x8E5 PUSH2 0x182B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x960 JUMPI DUP1 CALLVALUE EQ PUSH2 0x95B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x952 SWAP1 PUSH2 0x26BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9D1 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x9A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99A SWAP1 PUSH2 0x2750 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9D0 CALLER ADDRESS DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1903 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA20 SWAP2 SWAP1 PUSH2 0x1D34 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5548C837AB068CF56A2C2479DF0882A4922FD203EDB7517321831D95078C5F62 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA84 SWAP2 SWAP1 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA94 PUSH2 0x18F9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAA2 PUSH2 0x1985 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xAF0 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xB25 JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xB33 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xB6A JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xBBA JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xBC3 DUP7 PUSH2 0x19AD JUMP JUMPDEST PUSH2 0xBCB PUSH2 0x19C1 JUMP JUMPDEST DUP7 PUSH1 0x32 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xC68 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xC5F SWAP2 SWAP1 PUSH2 0x27AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC79 PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0xC83 PUSH1 0x0 PUSH2 0x1A5A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x32 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x33 DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xCF0 SWAP1 PUSH2 0x27F5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD1C SWAP1 PUSH2 0x27F5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD69 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD3E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD69 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD4C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD7E PUSH2 0x1B31 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x32 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x24D7806C CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE06 SWAP2 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE23 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE47 SWAP2 SWAP1 PUSH2 0x285E JUMP JUMPDEST PUSH2 0xE86 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7D SWAP1 PUSH2 0x28D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND LT PUSH2 0xEDC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xED3 SWAP1 PUSH2 0x2969 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x33 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0xF80 SWAP2 SWAP1 PUSH2 0x2B2B JUMP JUMPDEST POP SWAP1 POP POP PUSH32 0x9E6DB48F22357E6DCE2BBFF89DB8FF25F0012A08186D6EA72E2343FDC112E13 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFB7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2BFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x36 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x35 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x32 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x24D7806C CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105C SWAP2 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1079 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x109D SWAP2 SWAP1 PUSH2 0x285E JUMP JUMPDEST PUSH2 0x10DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D3 SWAP1 PUSH2 0x28D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x114B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1142 SWAP1 PUSH2 0x2C87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x36 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3D0601F3B0E52FD772F1FA71D91651B34B6A11144BEA30D74E0F820019A04DC2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1229 SWAP2 SWAP1 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x32 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x24D7806C CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1291 SWAP2 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12D2 SWAP2 SWAP1 PUSH2 0x285E JUMP JUMPDEST PUSH2 0x1311 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1308 SWAP1 PUSH2 0x28D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SWAP1 POP DUP5 DUP5 SWAP1 POP EQ PUSH2 0x1359 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1350 SWAP1 PUSH2 0x2CF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP5 DUP5 SWAP1 POP DUP2 LT ISZERO PUSH2 0x14DA JUMPI DUP3 DUP3 DUP3 DUP2 DUP2 LT PUSH2 0x137A JUMPI PUSH2 0x1379 PUSH2 0x2D13 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x36 PUSH1 0x0 DUP8 DUP8 DUP6 DUP2 DUP2 LT PUSH2 0x1398 JUMPI PUSH2 0x1397 PUSH2 0x2D13 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x13AD SWAP2 SWAP1 PUSH2 0x1E81 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x1452 JUMPI PUSH2 0x1451 PUSH2 0x2D13 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1467 SWAP2 SWAP1 PUSH2 0x1E81 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3D0601F3B0E52FD772F1FA71D91651B34B6A11144BEA30D74E0F820019A04DC2 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x14B1 JUMPI PUSH2 0x14B0 PUSH2 0x2D13 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH2 0x14C5 SWAP2 SWAP1 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x135C JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x14EA PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x155C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1553 SWAP2 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1565 DUP2 PUSH2 0x1A5A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1570 PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0x1578 PUSH2 0x182B JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x15BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15B2 SWAP1 PUSH2 0x2DB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x163D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1634 SWAP1 PUSH2 0x2E20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x168C SWAP2 SWAP1 PUSH2 0x258C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1780 JUMPI PUSH1 0x0 PUSH2 0x16D1 PUSH2 0xD73 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x16F4 SWAP1 PUSH2 0x25F1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1731 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x177A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1771 SWAP1 PUSH2 0x2652 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x17B3 JUMP JUMPDEST PUSH2 0x17B2 PUSH2 0x178B PUSH2 0xD73 JUMP JUMPDEST DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x187A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17D2 PUSH2 0xD73 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9B1BFA7FA9EE420A16E124F794C35AC9F90472ACC99140EB2F6447C714CAD8EB DUP4 PUSH1 0x40 MLOAD PUSH2 0x1817 SWAP2 SWAP1 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1827 PUSH2 0x18F9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x1870 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1867 SWAP1 PUSH2 0x2E8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x18F4 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x18AD SWAP3 SWAP2 SWAP1 PUSH2 0x2EAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1B59 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x197F DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1938 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2ED5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1B59 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x19B5 PUSH2 0x1BFB JUMP JUMPDEST PUSH2 0x19BE DUP2 PUSH2 0x1C3B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x19C9 PUSH2 0x1BFB JUMP JUMPDEST PUSH2 0x19D1 PUSH2 0x1CC1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x19DB PUSH2 0x1CD3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19F9 PUSH2 0xD73 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A58 JUMPI PUSH2 0x1A1C PUSH2 0x1CD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A4F SWAP2 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A64 PUSH2 0x1B31 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP9 GAS CALL DUP1 PUSH2 0x1B7C JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH1 0x0 MLOAD SWAP2 POP POP PUSH1 0x0 DUP3 EQ PUSH2 0x1B97 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1BB3 JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1BF5 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BEC SWAP2 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1C03 PUSH2 0x1CDB JUMP JUMPDEST PUSH2 0x1C39 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1C43 PUSH2 0x1BFB JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CB5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CAC SWAP2 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1CBE DUP2 PUSH2 0x1A5A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1CC9 PUSH2 0x1BFB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CE5 PUSH2 0x1985 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1D3F DUP3 PUSH2 0x1CFB JUMP JUMPDEST SWAP2 POP PUSH2 0x1D4A DUP4 PUSH2 0x1CFB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D62 JUMPI PUSH2 0x1D61 PUSH2 0x1D05 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D71 DUP2 PUSH2 0x1CFB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D8C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D68 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x537765657473706F743A20757365206465706F73697428290000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DD9 PUSH1 0x18 DUP4 PUSH2 0x1D92 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DE4 DUP3 PUSH2 0x1DA3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E08 DUP2 PUSH2 0x1DCC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E4E DUP3 PUSH2 0x1E23 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E5E DUP2 PUSH2 0x1E43 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E7B DUP2 PUSH2 0x1E55 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E97 JUMPI PUSH2 0x1E96 PUSH2 0x1E19 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EA5 DUP5 DUP3 DUP6 ADD PUSH2 0x1E6C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EB7 DUP2 PUSH2 0x1E43 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ED2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1EAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EE1 DUP2 PUSH2 0x1CFB JUMP JUMPDEST DUP2 EQ PUSH2 0x1EEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EFE DUP2 PUSH2 0x1ED8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F1B JUMPI PUSH2 0x1F1A PUSH2 0x1E19 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F29 DUP6 DUP3 DUP7 ADD PUSH2 0x1E6C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F3A DUP6 DUP3 DUP7 ADD PUSH2 0x1EEF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F5B JUMPI PUSH2 0x1F5A PUSH2 0x1E19 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F69 DUP6 DUP3 DUP7 ADD PUSH2 0x1E6C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F7A DUP6 DUP3 DUP7 ADD PUSH2 0x1E6C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FA9 PUSH2 0x1FA4 PUSH2 0x1F9F DUP5 PUSH2 0x1E23 JUMP JUMPDEST PUSH2 0x1F84 JUMP JUMPDEST PUSH2 0x1E23 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FBB DUP3 PUSH2 0x1F8E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FCD DUP3 PUSH2 0x1FB0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FDD DUP2 PUSH2 0x1FC2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FF8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1FD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x201B DUP2 PUSH2 0x1FFE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x204A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x202F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2072 DUP3 PUSH2 0x2021 JUMP JUMPDEST PUSH2 0x207C DUP2 DUP6 PUSH2 0x1D92 JUMP JUMPDEST SWAP4 POP PUSH2 0x208C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x202C JUMP JUMPDEST PUSH2 0x2095 DUP2 PUSH2 0x2056 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x20B5 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2012 JUMP JUMPDEST PUSH2 0x20C2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2012 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x20D4 DUP2 DUP5 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x20E7 DUP2 PUSH2 0x1FFE JUMP JUMPDEST DUP2 EQ PUSH2 0x20F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2104 DUP2 PUSH2 0x20DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x214C DUP3 PUSH2 0x2056 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x216B JUMPI PUSH2 0x216A PUSH2 0x2114 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x217E PUSH2 0x1E0F JUMP JUMPDEST SWAP1 POP PUSH2 0x218A DUP3 DUP3 PUSH2 0x2143 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x21AA JUMPI PUSH2 0x21A9 PUSH2 0x2114 JUMP JUMPDEST JUMPDEST PUSH2 0x21B3 DUP3 PUSH2 0x2056 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21E2 PUSH2 0x21DD DUP5 PUSH2 0x218F JUMP JUMPDEST PUSH2 0x2174 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x21FE JUMPI PUSH2 0x21FD PUSH2 0x210F JUMP JUMPDEST JUMPDEST PUSH2 0x2209 DUP5 DUP3 DUP6 PUSH2 0x21C0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2226 JUMPI PUSH2 0x2225 PUSH2 0x210A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2236 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x21CF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2258 JUMPI PUSH2 0x2257 PUSH2 0x1E19 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2266 DUP7 DUP3 DUP8 ADD PUSH2 0x20F5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2277 DUP7 DUP3 DUP8 ADD PUSH2 0x20F5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2298 JUMPI PUSH2 0x2297 PUSH2 0x1E1E JUMP JUMPDEST JUMPDEST PUSH2 0x22A4 DUP7 DUP3 DUP8 ADD PUSH2 0x2211 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x22C7 JUMPI PUSH2 0x22C6 PUSH2 0x1E19 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22D5 DUP7 DUP3 DUP8 ADD PUSH2 0x1E6C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x22E6 DUP7 DUP3 DUP8 ADD PUSH2 0x1E6C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x22F7 DUP7 DUP3 DUP8 ADD PUSH2 0x1EEF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2321 JUMPI PUSH2 0x2320 PUSH2 0x210A JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x233E JUMPI PUSH2 0x233D PUSH2 0x2301 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x235A JUMPI PUSH2 0x2359 PUSH2 0x2306 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2377 JUMPI PUSH2 0x2376 PUSH2 0x210A JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2394 JUMPI PUSH2 0x2393 PUSH2 0x2301 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x23B0 JUMPI PUSH2 0x23AF PUSH2 0x2306 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x23D3 JUMPI PUSH2 0x23D2 PUSH2 0x1E19 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23E1 DUP9 DUP3 DUP10 ADD PUSH2 0x1E6C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2402 JUMPI PUSH2 0x2401 PUSH2 0x1E1E JUMP JUMPDEST JUMPDEST PUSH2 0x240E DUP9 DUP3 DUP10 ADD PUSH2 0x230B JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2431 JUMPI PUSH2 0x2430 PUSH2 0x1E1E JUMP JUMPDEST JUMPDEST PUSH2 0x243D DUP9 DUP3 DUP10 ADD PUSH2 0x2361 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2467 PUSH2 0x2462 PUSH2 0x245D DUP5 PUSH2 0x1FFE JUMP JUMPDEST PUSH2 0x1F84 JUMP JUMPDEST PUSH2 0x1CFB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2477 DUP2 PUSH2 0x244C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2492 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1D68 JUMP JUMPDEST PUSH2 0x249F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x246E JUMP JUMPDEST PUSH2 0x24AC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x246E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F20636C61696D61626C6520616D6F756E7400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24EA PUSH1 0x13 DUP4 PUSH2 0x1D92 JUMP JUMPDEST SWAP2 POP PUSH2 0x24F5 DUP3 PUSH2 0x24B4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2519 DUP2 PUSH2 0x24DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E647320696E206A617200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2556 PUSH1 0x19 DUP4 PUSH2 0x1D92 JUMP JUMPDEST SWAP2 POP PUSH2 0x2561 DUP3 PUSH2 0x2520 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2585 DUP2 PUSH2 0x2549 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2597 DUP3 PUSH2 0x1CFB JUMP JUMPDEST SWAP2 POP PUSH2 0x25A2 DUP4 PUSH2 0x1CFB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x25BA JUMPI PUSH2 0x25B9 PUSH2 0x1D05 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25DB PUSH1 0x0 DUP4 PUSH2 0x25C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x25E6 DUP3 PUSH2 0x25CB JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25FC DUP3 PUSH2 0x25CE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4574686572207472616E73666572206661696C65640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x263C PUSH1 0x15 DUP4 PUSH2 0x1D92 JUMP JUMPDEST SWAP2 POP PUSH2 0x2647 DUP3 PUSH2 0x2606 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x266B DUP2 PUSH2 0x262F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E636F727265637420457468657220616D6F756E7400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26A8 PUSH1 0x16 DUP4 PUSH2 0x1D92 JUMP JUMPDEST SWAP2 POP PUSH2 0x26B3 DUP3 PUSH2 0x2672 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26D7 DUP2 PUSH2 0x269B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4465706F73697420616D6F756E74206D75737420626520677265617465722074 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x68616E207A65726F000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x273A PUSH1 0x28 DUP4 PUSH2 0x1D92 JUMP JUMPDEST SWAP2 POP PUSH2 0x2745 DUP3 PUSH2 0x26DE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2769 DUP2 PUSH2 0x272D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2795 PUSH2 0x2790 PUSH2 0x278B DUP5 PUSH2 0x2770 JUMP JUMPDEST PUSH2 0x1F84 JUMP JUMPDEST PUSH2 0x1FFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27A5 DUP2 PUSH2 0x277A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27C0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x279C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x280D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2820 JUMPI PUSH2 0x281F PUSH2 0x27C6 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x283B DUP2 PUSH2 0x2826 JUMP JUMPDEST DUP2 EQ PUSH2 0x2846 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2858 DUP2 PUSH2 0x2832 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2874 JUMPI PUSH2 0x2873 PUSH2 0x1E19 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2882 DUP5 DUP3 DUP6 ADD PUSH2 0x2849 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F7420616E2061646D696E00000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28C1 PUSH1 0x16 DUP4 PUSH2 0x1D92 JUMP JUMPDEST SWAP2 POP PUSH2 0x28CC DUP3 PUSH2 0x288B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28F0 DUP2 PUSH2 0x28B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53746172742074696D65206D757374206265206265666F726520656E64207469 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D65000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2953 PUSH1 0x22 DUP4 PUSH2 0x1D92 JUMP JUMPDEST SWAP2 POP PUSH2 0x295E DUP3 PUSH2 0x28F7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2982 DUP2 PUSH2 0x2946 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x29EB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x29AE JUMP JUMPDEST PUSH2 0x29F5 DUP7 DUP4 PUSH2 0x29AE JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A28 PUSH2 0x2A23 PUSH2 0x2A1E DUP5 PUSH2 0x1CFB JUMP JUMPDEST PUSH2 0x1F84 JUMP JUMPDEST PUSH2 0x1CFB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A42 DUP4 PUSH2 0x2A0D JUMP JUMPDEST PUSH2 0x2A56 PUSH2 0x2A4E DUP3 PUSH2 0x2A2F JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x29BB JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x2A6B PUSH2 0x2A5E JUMP JUMPDEST PUSH2 0x2A76 DUP2 DUP5 DUP5 PUSH2 0x2A39 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2A9A JUMPI PUSH2 0x2A8F PUSH1 0x0 DUP3 PUSH2 0x2A63 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2A7C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2ADF JUMPI PUSH2 0x2AB0 DUP2 PUSH2 0x2989 JUMP JUMPDEST PUSH2 0x2AB9 DUP5 PUSH2 0x299E JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2AC8 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2ADC PUSH2 0x2AD4 DUP6 PUSH2 0x299E JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2A7B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B02 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2AE4 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B1B DUP4 DUP4 PUSH2 0x2AF1 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2B34 DUP3 PUSH2 0x2021 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B4D JUMPI PUSH2 0x2B4C PUSH2 0x2114 JUMP JUMPDEST JUMPDEST PUSH2 0x2B57 DUP3 SLOAD PUSH2 0x27F5 JUMP JUMPDEST PUSH2 0x2B62 DUP3 DUP3 DUP6 PUSH2 0x2A9E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2B95 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2B83 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2B8D DUP6 DUP3 PUSH2 0x2B0F JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2BF5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2BA3 DUP7 PUSH2 0x2989 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2BCB JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2BA6 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2BE8 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2BE4 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2AF1 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2C12 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x246E JUMP JUMPDEST PUSH2 0x2C1F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x246E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2C31 DUP2 DUP5 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5A65726F20616464726573732075736572000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C71 PUSH1 0x11 DUP4 PUSH2 0x1D92 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C7C DUP3 PUSH2 0x2C3B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CA0 DUP2 PUSH2 0x2C64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D69736D617463686564206172726179206C656E677468730000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CDD PUSH1 0x18 DUP4 PUSH2 0x1D92 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CE8 DUP3 PUSH2 0x2CA7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D0C DUP2 PUSH2 0x2CD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x5769746864726177616C20616D6F756E74206D75737420626520677265617465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72207468616E207A65726F000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D9E PUSH1 0x2B DUP4 PUSH2 0x1D92 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DA9 DUP3 PUSH2 0x2D42 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DCD DUP2 PUSH2 0x2D91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E64730000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E0A PUSH1 0x12 DUP4 PUSH2 0x1D92 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E15 DUP3 PUSH2 0x2DD4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E39 DUP2 PUSH2 0x2DFD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E76 PUSH1 0x1F DUP4 PUSH2 0x1D92 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E81 DUP3 PUSH2 0x2E40 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2EA5 DUP2 PUSH2 0x2E69 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2EC1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1EAE JUMP JUMPDEST PUSH2 0x2ECE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D68 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2EEA PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1EAE JUMP JUMPDEST PUSH2 0x2EF7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1EAE JUMP JUMPDEST PUSH2 0x2F04 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D68 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 NOT PUSH16 0x9BBB7993E4F8222BB807BD2F78C7E974 TSTORE 0xE4 PC 0xF7 0x28 GASPRICE 0x21 0xCD GT 0xC8 PUSH22 0xD3FD64736F6C634300081C0033000000000000000000 ",
							"sourceMap": "454:6250:13:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@NATIVE_TOKEN_1495": {
									"entryPoint": 2264,
									"id": 1495,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1991": {
									"entryPoint": null,
									"id": 1991,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1999": {
									"entryPoint": null,
									"id": 1999,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_54": {
									"entryPoint": 6573,
									"id": 54,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_81": {
									"entryPoint": 7227,
									"id": 81,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__ReentrancyGuard_init_472": {
									"entryPoint": 6593,
									"id": 472,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ReentrancyGuard_init_unchained_482": {
									"entryPoint": 7361,
									"id": 482,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_1116": {
									"entryPoint": 7001,
									"id": 1116,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkInitializing_370": {
									"entryPoint": 7163,
									"id": 370,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_122": {
									"entryPoint": 6611,
									"id": 122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_447": {
									"entryPoint": 6533,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_25": {
									"entryPoint": 6961,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_438": {
									"entryPoint": 7387,
									"id": 438,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_561": {
									"entryPoint": 7379,
									"id": 561,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_516": {
									"entryPoint": 6393,
									"id": 516,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_508": {
									"entryPoint": 6187,
									"id": 508,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_193": {
									"entryPoint": 6746,
									"id": 193,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowedAmounts_1518": {
									"entryPoint": 4036,
									"id": 1518,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@bulkSetAllowedAmount_1865": {
									"entryPoint": 4662,
									"id": 1865,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@claim_1769": {
									"entryPoint": 1124,
									"id": 1769,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@currentRound_1508": {
									"entryPoint": 3243,
									"id": 1508,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_1661": {
									"entryPoint": 2269,
									"id": 1661,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@initialize_1603": {
									"entryPoint": 2712,
									"id": 1603,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@owner_105": {
									"entryPoint": 3443,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_136": {
									"entryPoint": 3185,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_821": {
									"entryPoint": 6403,
									"id": 821,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_794": {
									"entryPoint": 6266,
									"id": 794,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@scorer_1498": {
									"entryPoint": 3205,
									"id": 1498,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setAllowedAmount_1806": {
									"entryPoint": 4097,
									"id": 1806,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setRound_1899": {
									"entryPoint": 3499,
									"id": 1899,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@totalBalances_1512": {
									"entryPoint": 4073,
									"id": 1512,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_164": {
									"entryPoint": 5346,
									"id": 164,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_1971": {
									"entryPoint": 5480,
									"id": 1971,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 8655,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 8971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 9057,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 10313,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 8721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7919,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint64": {
									"entryPoint": 8437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7809,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8004,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8878,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 9143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 10334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint64t_uint64t_string_memory_ptr": {
									"entryPoint": 8767,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7854,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IScorer_$1472_to_t_address_fromStack": {
									"entryPoint": 8148,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 10140,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8295,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10566,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_27d7ea81cbaf0a0b02eea7b1644019cc31271c4da24dc2abdb33127b3a05742f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7628,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9775,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9883,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9545,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10420,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9678,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11364,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11881,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7528,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint64_to_t_uint256_fromStack": {
									"entryPoint": 9326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint64_to_t_uint64_fromStack": {
									"entryPoint": 8210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9713,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7869,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11989,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11948,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IScorer_$1472__to_t_address__fromStack_reversed": {
									"entryPoint": 8163,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 10155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_27d7ea81cbaf0a0b02eea7b1644019cc31271c4da24dc2abdb33127b3a05742f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7663,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9810,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11808,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9918,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9580,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11507,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11399,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10064,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11916,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint64_t_uint64__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9341,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint64_t_uint64_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11261,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint64_t_uint64_t_string_memory_ptr__to_t_uint64_t_uint64_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8352,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 8564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 7695,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 8591,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 10633,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 8225,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7476,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9612,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 10910,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 7747,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 10278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 10096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7419,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 8190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 10875,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_contract$_IScorer_$1472_to_t_address": {
									"entryPoint": 8130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 10106,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 8112,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 8078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 10765,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint64_to_t_uint256": {
									"entryPoint": 9292,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 11051,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 8640,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 8236,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 10654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 10229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 11023,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 8515,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 8068,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 10993,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7429,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 10182,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 11539,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8468,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 10799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 8961,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8458,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 8966,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 8463,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7710,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7705,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 10670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 10980,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 10851,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf": {
									"entryPoint": 9396,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f": {
									"entryPoint": 10487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_27d7ea81cbaf0a0b02eea7b1644019cc31271c4da24dc2abdb33127b3a05742f": {
									"entryPoint": 7587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be": {
									"entryPoint": 9734,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d": {
									"entryPoint": 11732,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375": {
									"entryPoint": 9842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d": {
									"entryPoint": 9504,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085": {
									"entryPoint": 11431,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226": {
									"entryPoint": 10379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 9675,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d": {
									"entryPoint": 11323,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71": {
									"entryPoint": 9950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76": {
									"entryPoint": 11586,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 11840,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 10683,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 10809,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7765,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 10290,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7896,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint64": {
									"entryPoint": 8414,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 10846,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:35083:14",
										"nodeType": "YulBlock",
										"src": "0:35083:14",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:14",
													"nodeType": "YulBlock",
													"src": "52:32:14",
													"statements": [
														{
															"nativeSrc": "62:16:14",
															"nodeType": "YulAssignment",
															"src": "62:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:14",
																"nodeType": "YulIdentifier",
																"src": "73:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:14",
														"nodeType": "YulTypedName",
														"src": "34:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:14",
														"nodeType": "YulTypedName",
														"src": "44:7:14",
														"type": ""
													}
												],
												"src": "7:77:14"
											},
											{
												"body": {
													"nativeSrc": "118:152:14",
													"nodeType": "YulBlock",
													"src": "118:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "135:1:14",
																		"nodeType": "YulLiteral",
																		"src": "135:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "138:77:14",
																		"nodeType": "YulLiteral",
																		"src": "138:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "128:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "128:6:14"
																},
																"nativeSrc": "128:88:14",
																"nodeType": "YulFunctionCall",
																"src": "128:88:14"
															},
															"nativeSrc": "128:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "128:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "232:1:14",
																		"nodeType": "YulLiteral",
																		"src": "232:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "235:4:14",
																		"nodeType": "YulLiteral",
																		"src": "235:4:14",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "225:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "225:6:14"
																},
																"nativeSrc": "225:15:14",
																"nodeType": "YulFunctionCall",
																"src": "225:15:14"
															},
															"nativeSrc": "225:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "225:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "256:1:14",
																		"nodeType": "YulLiteral",
																		"src": "256:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "259:4:14",
																		"nodeType": "YulLiteral",
																		"src": "259:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "249:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "249:6:14"
																},
																"nativeSrc": "249:15:14",
																"nodeType": "YulFunctionCall",
																"src": "249:15:14"
															},
															"nativeSrc": "249:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "249:15:14"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "90:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "90:180:14"
											},
											{
												"body": {
													"nativeSrc": "320:147:14",
													"nodeType": "YulBlock",
													"src": "320:147:14",
													"statements": [
														{
															"nativeSrc": "330:25:14",
															"nodeType": "YulAssignment",
															"src": "330:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "353:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "353:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "335:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "335:17:14"
																},
																"nativeSrc": "335:20:14",
																"nodeType": "YulFunctionCall",
																"src": "335:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "330:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "330:1:14"
																}
															]
														},
														{
															"nativeSrc": "364:25:14",
															"nodeType": "YulAssignment",
															"src": "364:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "387:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "387:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "369:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "369:17:14"
																},
																"nativeSrc": "369:20:14",
																"nodeType": "YulFunctionCall",
																"src": "369:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "364:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "364:1:14"
																}
															]
														},
														{
															"nativeSrc": "398:16:14",
															"nodeType": "YulAssignment",
															"src": "398:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "409:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "409:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "412:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "412:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "405:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "405:3:14"
																},
																"nativeSrc": "405:9:14",
																"nodeType": "YulFunctionCall",
																"src": "405:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "398:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "398:3:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "438:22:14",
																"nodeType": "YulBlock",
																"src": "438:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "440:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "440:16:14"
																			},
																			"nativeSrc": "440:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "440:18:14"
																		},
																		"nativeSrc": "440:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "440:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "430:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "430:1:14"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "433:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "433:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "427:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "427:2:14"
																},
																"nativeSrc": "427:10:14",
																"nodeType": "YulFunctionCall",
																"src": "427:10:14"
															},
															"nativeSrc": "424:36:14",
															"nodeType": "YulIf",
															"src": "424:36:14"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "276:191:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "307:1:14",
														"nodeType": "YulTypedName",
														"src": "307:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "310:1:14",
														"nodeType": "YulTypedName",
														"src": "310:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "316:3:14",
														"nodeType": "YulTypedName",
														"src": "316:3:14",
														"type": ""
													}
												],
												"src": "276:191:14"
											},
											{
												"body": {
													"nativeSrc": "538:53:14",
													"nodeType": "YulBlock",
													"src": "538:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "555:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "555:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "578:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "578:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "560:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "560:17:14"
																		},
																		"nativeSrc": "560:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "560:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "548:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "548:6:14"
																},
																"nativeSrc": "548:37:14",
																"nodeType": "YulFunctionCall",
																"src": "548:37:14"
															},
															"nativeSrc": "548:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "548:37:14"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "473:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "526:5:14",
														"nodeType": "YulTypedName",
														"src": "526:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "533:3:14",
														"nodeType": "YulTypedName",
														"src": "533:3:14",
														"type": ""
													}
												],
												"src": "473:118:14"
											},
											{
												"body": {
													"nativeSrc": "695:124:14",
													"nodeType": "YulBlock",
													"src": "695:124:14",
													"statements": [
														{
															"nativeSrc": "705:26:14",
															"nodeType": "YulAssignment",
															"src": "705:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "717:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "717:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "728:2:14",
																		"nodeType": "YulLiteral",
																		"src": "728:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "713:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "713:3:14"
																},
																"nativeSrc": "713:18:14",
																"nodeType": "YulFunctionCall",
																"src": "713:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "705:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "705:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "785:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "785:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "798:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "798:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "809:1:14",
																				"nodeType": "YulLiteral",
																				"src": "809:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "794:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "794:3:14"
																		},
																		"nativeSrc": "794:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "794:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "741:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "741:43:14"
																},
																"nativeSrc": "741:71:14",
																"nodeType": "YulFunctionCall",
																"src": "741:71:14"
															},
															"nativeSrc": "741:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "741:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "597:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "667:9:14",
														"nodeType": "YulTypedName",
														"src": "667:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "679:6:14",
														"nodeType": "YulTypedName",
														"src": "679:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "690:4:14",
														"nodeType": "YulTypedName",
														"src": "690:4:14",
														"type": ""
													}
												],
												"src": "597:222:14"
											},
											{
												"body": {
													"nativeSrc": "921:73:14",
													"nodeType": "YulBlock",
													"src": "921:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "938:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "938:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "943:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "943:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "931:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "931:6:14"
																},
																"nativeSrc": "931:19:14",
																"nodeType": "YulFunctionCall",
																"src": "931:19:14"
															},
															"nativeSrc": "931:19:14",
															"nodeType": "YulExpressionStatement",
															"src": "931:19:14"
														},
														{
															"nativeSrc": "959:29:14",
															"nodeType": "YulAssignment",
															"src": "959:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "978:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "978:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "983:4:14",
																		"nodeType": "YulLiteral",
																		"src": "983:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "974:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "974:3:14"
																},
																"nativeSrc": "974:14:14",
																"nodeType": "YulFunctionCall",
																"src": "974:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "959:11:14",
																	"nodeType": "YulIdentifier",
																	"src": "959:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "825:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "893:3:14",
														"nodeType": "YulTypedName",
														"src": "893:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "898:6:14",
														"nodeType": "YulTypedName",
														"src": "898:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "909:11:14",
														"nodeType": "YulTypedName",
														"src": "909:11:14",
														"type": ""
													}
												],
												"src": "825:169:14"
											},
											{
												"body": {
													"nativeSrc": "1106:68:14",
													"nodeType": "YulBlock",
													"src": "1106:68:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1128:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1128:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1136:1:14",
																				"nodeType": "YulLiteral",
																				"src": "1136:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1124:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1124:3:14"
																		},
																		"nativeSrc": "1124:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1124:14:14"
																	},
																	{
																		"hexValue": "537765657473706f743a20757365206465706f7369742829",
																		"kind": "string",
																		"nativeSrc": "1140:26:14",
																		"nodeType": "YulLiteral",
																		"src": "1140:26:14",
																		"type": "",
																		"value": "Sweetspot: use deposit()"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1117:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1117:6:14"
																},
																"nativeSrc": "1117:50:14",
																"nodeType": "YulFunctionCall",
																"src": "1117:50:14"
															},
															"nativeSrc": "1117:50:14",
															"nodeType": "YulExpressionStatement",
															"src": "1117:50:14"
														}
													]
												},
												"name": "store_literal_in_memory_27d7ea81cbaf0a0b02eea7b1644019cc31271c4da24dc2abdb33127b3a05742f",
												"nativeSrc": "1000:174:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1098:6:14",
														"nodeType": "YulTypedName",
														"src": "1098:6:14",
														"type": ""
													}
												],
												"src": "1000:174:14"
											},
											{
												"body": {
													"nativeSrc": "1326:220:14",
													"nodeType": "YulBlock",
													"src": "1326:220:14",
													"statements": [
														{
															"nativeSrc": "1336:74:14",
															"nodeType": "YulAssignment",
															"src": "1336:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1402:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1402:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1407:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1407:2:14",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1343:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "1343:58:14"
																},
																"nativeSrc": "1343:67:14",
																"nodeType": "YulFunctionCall",
																"src": "1343:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1336:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1336:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1508:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1508:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_27d7ea81cbaf0a0b02eea7b1644019cc31271c4da24dc2abdb33127b3a05742f",
																	"nativeSrc": "1419:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "1419:88:14"
																},
																"nativeSrc": "1419:93:14",
																"nodeType": "YulFunctionCall",
																"src": "1419:93:14"
															},
															"nativeSrc": "1419:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "1419:93:14"
														},
														{
															"nativeSrc": "1521:19:14",
															"nodeType": "YulAssignment",
															"src": "1521:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1532:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1532:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1537:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1537:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1528:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1528:3:14"
																},
																"nativeSrc": "1528:12:14",
																"nodeType": "YulFunctionCall",
																"src": "1528:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1521:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1521:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_27d7ea81cbaf0a0b02eea7b1644019cc31271c4da24dc2abdb33127b3a05742f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1180:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1314:3:14",
														"nodeType": "YulTypedName",
														"src": "1314:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1322:3:14",
														"nodeType": "YulTypedName",
														"src": "1322:3:14",
														"type": ""
													}
												],
												"src": "1180:366:14"
											},
											{
												"body": {
													"nativeSrc": "1723:248:14",
													"nodeType": "YulBlock",
													"src": "1723:248:14",
													"statements": [
														{
															"nativeSrc": "1733:26:14",
															"nodeType": "YulAssignment",
															"src": "1733:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1745:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1745:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1756:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1756:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1741:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1741:3:14"
																},
																"nativeSrc": "1741:18:14",
																"nodeType": "YulFunctionCall",
																"src": "1741:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1733:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "1733:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1780:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1780:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1791:1:14",
																				"nodeType": "YulLiteral",
																				"src": "1791:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1776:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1776:3:14"
																		},
																		"nativeSrc": "1776:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1776:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1799:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "1799:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1805:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1805:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1795:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1795:3:14"
																		},
																		"nativeSrc": "1795:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1795:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1769:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1769:6:14"
																},
																"nativeSrc": "1769:47:14",
																"nodeType": "YulFunctionCall",
																"src": "1769:47:14"
															},
															"nativeSrc": "1769:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "1769:47:14"
														},
														{
															"nativeSrc": "1825:139:14",
															"nodeType": "YulAssignment",
															"src": "1825:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "1959:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "1959:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_27d7ea81cbaf0a0b02eea7b1644019cc31271c4da24dc2abdb33127b3a05742f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1833:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "1833:124:14"
																},
																"nativeSrc": "1833:131:14",
																"nodeType": "YulFunctionCall",
																"src": "1833:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1825:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "1825:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_27d7ea81cbaf0a0b02eea7b1644019cc31271c4da24dc2abdb33127b3a05742f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1552:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1703:9:14",
														"nodeType": "YulTypedName",
														"src": "1703:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1718:4:14",
														"nodeType": "YulTypedName",
														"src": "1718:4:14",
														"type": ""
													}
												],
												"src": "1552:419:14"
											},
											{
												"body": {
													"nativeSrc": "2017:35:14",
													"nodeType": "YulBlock",
													"src": "2017:35:14",
													"statements": [
														{
															"nativeSrc": "2027:19:14",
															"nodeType": "YulAssignment",
															"src": "2027:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2043:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2043:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2037:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2037:5:14"
																},
																"nativeSrc": "2037:9:14",
																"nodeType": "YulFunctionCall",
																"src": "2037:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2027:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2027:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1977:75:14",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "2010:6:14",
														"nodeType": "YulTypedName",
														"src": "2010:6:14",
														"type": ""
													}
												],
												"src": "1977:75:14"
											},
											{
												"body": {
													"nativeSrc": "2147:28:14",
													"nodeType": "YulBlock",
													"src": "2147:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2164:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2164:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2167:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2167:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2157:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2157:6:14"
																},
																"nativeSrc": "2157:12:14",
																"nodeType": "YulFunctionCall",
																"src": "2157:12:14"
															},
															"nativeSrc": "2157:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "2157:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "2058:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "2058:117:14"
											},
											{
												"body": {
													"nativeSrc": "2270:28:14",
													"nodeType": "YulBlock",
													"src": "2270:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2287:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2287:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2290:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2290:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2280:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2280:6:14"
																},
																"nativeSrc": "2280:12:14",
																"nodeType": "YulFunctionCall",
																"src": "2280:12:14"
															},
															"nativeSrc": "2280:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "2280:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "2181:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "2181:117:14"
											},
											{
												"body": {
													"nativeSrc": "2349:81:14",
													"nodeType": "YulBlock",
													"src": "2349:81:14",
													"statements": [
														{
															"nativeSrc": "2359:65:14",
															"nodeType": "YulAssignment",
															"src": "2359:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2374:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2374:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2381:42:14",
																		"nodeType": "YulLiteral",
																		"src": "2381:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2370:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2370:3:14"
																},
																"nativeSrc": "2370:54:14",
																"nodeType": "YulFunctionCall",
																"src": "2370:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2359:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "2359:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2304:126:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2331:5:14",
														"nodeType": "YulTypedName",
														"src": "2331:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2341:7:14",
														"nodeType": "YulTypedName",
														"src": "2341:7:14",
														"type": ""
													}
												],
												"src": "2304:126:14"
											},
											{
												"body": {
													"nativeSrc": "2481:51:14",
													"nodeType": "YulBlock",
													"src": "2481:51:14",
													"statements": [
														{
															"nativeSrc": "2491:35:14",
															"nodeType": "YulAssignment",
															"src": "2491:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2520:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2520:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2502:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "2502:17:14"
																},
																"nativeSrc": "2502:24:14",
																"nodeType": "YulFunctionCall",
																"src": "2502:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2491:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "2491:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2436:96:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2463:5:14",
														"nodeType": "YulTypedName",
														"src": "2463:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2473:7:14",
														"nodeType": "YulTypedName",
														"src": "2473:7:14",
														"type": ""
													}
												],
												"src": "2436:96:14"
											},
											{
												"body": {
													"nativeSrc": "2581:79:14",
													"nodeType": "YulBlock",
													"src": "2581:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2638:16:14",
																"nodeType": "YulBlock",
																"src": "2638:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2647:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2647:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2650:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2650:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2640:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2640:6:14"
																			},
																			"nativeSrc": "2640:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2640:12:14"
																		},
																		"nativeSrc": "2640:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2640:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2604:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "2604:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2629:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "2629:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2611:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "2611:17:14"
																				},
																				"nativeSrc": "2611:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2611:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2601:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "2601:2:14"
																		},
																		"nativeSrc": "2601:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2601:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2594:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2594:6:14"
																},
																"nativeSrc": "2594:43:14",
																"nodeType": "YulFunctionCall",
																"src": "2594:43:14"
															},
															"nativeSrc": "2591:63:14",
															"nodeType": "YulIf",
															"src": "2591:63:14"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2538:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2574:5:14",
														"nodeType": "YulTypedName",
														"src": "2574:5:14",
														"type": ""
													}
												],
												"src": "2538:122:14"
											},
											{
												"body": {
													"nativeSrc": "2718:87:14",
													"nodeType": "YulBlock",
													"src": "2718:87:14",
													"statements": [
														{
															"nativeSrc": "2728:29:14",
															"nodeType": "YulAssignment",
															"src": "2728:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2750:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2750:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2737:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "2737:12:14"
																},
																"nativeSrc": "2737:20:14",
																"nodeType": "YulFunctionCall",
																"src": "2737:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2728:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2728:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2793:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2793:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2766:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "2766:26:14"
																},
																"nativeSrc": "2766:33:14",
																"nodeType": "YulFunctionCall",
																"src": "2766:33:14"
															},
															"nativeSrc": "2766:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "2766:33:14"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2666:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2696:6:14",
														"nodeType": "YulTypedName",
														"src": "2696:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2704:3:14",
														"nodeType": "YulTypedName",
														"src": "2704:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2712:5:14",
														"nodeType": "YulTypedName",
														"src": "2712:5:14",
														"type": ""
													}
												],
												"src": "2666:139:14"
											},
											{
												"body": {
													"nativeSrc": "2877:263:14",
													"nodeType": "YulBlock",
													"src": "2877:263:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2923:83:14",
																"nodeType": "YulBlock",
																"src": "2923:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2925:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "2925:77:14"
																			},
																			"nativeSrc": "2925:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2925:79:14"
																		},
																		"nativeSrc": "2925:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2925:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2898:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2898:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2907:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2907:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2894:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2894:3:14"
																		},
																		"nativeSrc": "2894:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2894:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2919:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2919:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2890:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2890:3:14"
																},
																"nativeSrc": "2890:32:14",
																"nodeType": "YulFunctionCall",
																"src": "2890:32:14"
															},
															"nativeSrc": "2887:119:14",
															"nodeType": "YulIf",
															"src": "2887:119:14"
														},
														{
															"nativeSrc": "3016:117:14",
															"nodeType": "YulBlock",
															"src": "3016:117:14",
															"statements": [
																{
																	"nativeSrc": "3031:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3031:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3045:1:14",
																		"nodeType": "YulLiteral",
																		"src": "3045:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3035:6:14",
																			"nodeType": "YulTypedName",
																			"src": "3035:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3060:63:14",
																	"nodeType": "YulAssignment",
																	"src": "3060:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3095:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "3095:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3106:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "3106:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3091:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3091:3:14"
																				},
																				"nativeSrc": "3091:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3091:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3115:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3115:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3070:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "3070:20:14"
																		},
																		"nativeSrc": "3070:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3070:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3060:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "3060:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2811:329:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2847:9:14",
														"nodeType": "YulTypedName",
														"src": "2847:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2858:7:14",
														"nodeType": "YulTypedName",
														"src": "2858:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2870:6:14",
														"nodeType": "YulTypedName",
														"src": "2870:6:14",
														"type": ""
													}
												],
												"src": "2811:329:14"
											},
											{
												"body": {
													"nativeSrc": "3211:53:14",
													"nodeType": "YulBlock",
													"src": "3211:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3228:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "3228:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3251:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "3251:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3233:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "3233:17:14"
																		},
																		"nativeSrc": "3233:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3233:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3221:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3221:6:14"
																},
																"nativeSrc": "3221:37:14",
																"nodeType": "YulFunctionCall",
																"src": "3221:37:14"
															},
															"nativeSrc": "3221:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "3221:37:14"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3146:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3199:5:14",
														"nodeType": "YulTypedName",
														"src": "3199:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3206:3:14",
														"nodeType": "YulTypedName",
														"src": "3206:3:14",
														"type": ""
													}
												],
												"src": "3146:118:14"
											},
											{
												"body": {
													"nativeSrc": "3368:124:14",
													"nodeType": "YulBlock",
													"src": "3368:124:14",
													"statements": [
														{
															"nativeSrc": "3378:26:14",
															"nodeType": "YulAssignment",
															"src": "3378:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3390:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "3390:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3401:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3401:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3386:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3386:3:14"
																},
																"nativeSrc": "3386:18:14",
																"nodeType": "YulFunctionCall",
																"src": "3386:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3378:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "3378:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3458:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3458:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3471:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3471:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3482:1:14",
																				"nodeType": "YulLiteral",
																				"src": "3482:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3467:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3467:3:14"
																		},
																		"nativeSrc": "3467:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3467:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3414:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "3414:43:14"
																},
																"nativeSrc": "3414:71:14",
																"nodeType": "YulFunctionCall",
																"src": "3414:71:14"
															},
															"nativeSrc": "3414:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "3414:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3270:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3340:9:14",
														"nodeType": "YulTypedName",
														"src": "3340:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3352:6:14",
														"nodeType": "YulTypedName",
														"src": "3352:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3363:4:14",
														"nodeType": "YulTypedName",
														"src": "3363:4:14",
														"type": ""
													}
												],
												"src": "3270:222:14"
											},
											{
												"body": {
													"nativeSrc": "3541:79:14",
													"nodeType": "YulBlock",
													"src": "3541:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "3598:16:14",
																"nodeType": "YulBlock",
																"src": "3598:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3607:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3607:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3610:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3610:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3600:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3600:6:14"
																			},
																			"nativeSrc": "3600:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3600:12:14"
																		},
																		"nativeSrc": "3600:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3600:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3564:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "3564:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3589:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "3589:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3571:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "3571:17:14"
																				},
																				"nativeSrc": "3571:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3571:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3561:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "3561:2:14"
																		},
																		"nativeSrc": "3561:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3561:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3554:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3554:6:14"
																},
																"nativeSrc": "3554:43:14",
																"nodeType": "YulFunctionCall",
																"src": "3554:43:14"
															},
															"nativeSrc": "3551:63:14",
															"nodeType": "YulIf",
															"src": "3551:63:14"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3498:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3534:5:14",
														"nodeType": "YulTypedName",
														"src": "3534:5:14",
														"type": ""
													}
												],
												"src": "3498:122:14"
											},
											{
												"body": {
													"nativeSrc": "3678:87:14",
													"nodeType": "YulBlock",
													"src": "3678:87:14",
													"statements": [
														{
															"nativeSrc": "3688:29:14",
															"nodeType": "YulAssignment",
															"src": "3688:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3710:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3710:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3697:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "3697:12:14"
																},
																"nativeSrc": "3697:20:14",
																"nodeType": "YulFunctionCall",
																"src": "3697:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3688:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "3688:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3753:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "3753:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3726:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "3726:26:14"
																},
																"nativeSrc": "3726:33:14",
																"nodeType": "YulFunctionCall",
																"src": "3726:33:14"
															},
															"nativeSrc": "3726:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "3726:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3626:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3656:6:14",
														"nodeType": "YulTypedName",
														"src": "3656:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3664:3:14",
														"nodeType": "YulTypedName",
														"src": "3664:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3672:5:14",
														"nodeType": "YulTypedName",
														"src": "3672:5:14",
														"type": ""
													}
												],
												"src": "3626:139:14"
											},
											{
												"body": {
													"nativeSrc": "3854:391:14",
													"nodeType": "YulBlock",
													"src": "3854:391:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "3900:83:14",
																"nodeType": "YulBlock",
																"src": "3900:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3902:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "3902:77:14"
																			},
																			"nativeSrc": "3902:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3902:79:14"
																		},
																		"nativeSrc": "3902:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3902:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3875:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3875:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3884:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3884:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3871:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3871:3:14"
																		},
																		"nativeSrc": "3871:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3871:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3896:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3896:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3867:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3867:3:14"
																},
																"nativeSrc": "3867:32:14",
																"nodeType": "YulFunctionCall",
																"src": "3867:32:14"
															},
															"nativeSrc": "3864:119:14",
															"nodeType": "YulIf",
															"src": "3864:119:14"
														},
														{
															"nativeSrc": "3993:117:14",
															"nodeType": "YulBlock",
															"src": "3993:117:14",
															"statements": [
																{
																	"nativeSrc": "4008:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4008:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4022:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4022:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4012:6:14",
																			"nodeType": "YulTypedName",
																			"src": "4012:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4037:63:14",
																	"nodeType": "YulAssignment",
																	"src": "4037:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4072:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "4072:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4083:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4083:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4068:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4068:3:14"
																				},
																				"nativeSrc": "4068:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4068:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4092:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4092:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4047:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "4047:20:14"
																		},
																		"nativeSrc": "4047:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4047:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4037:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4037:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4120:118:14",
															"nodeType": "YulBlock",
															"src": "4120:118:14",
															"statements": [
																{
																	"nativeSrc": "4135:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4135:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4149:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4149:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4139:6:14",
																			"nodeType": "YulTypedName",
																			"src": "4139:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4165:63:14",
																	"nodeType": "YulAssignment",
																	"src": "4165:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4200:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "4200:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4211:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4211:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4196:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4196:3:14"
																				},
																				"nativeSrc": "4196:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4196:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4220:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4220:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4175:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "4175:20:14"
																		},
																		"nativeSrc": "4175:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4175:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4165:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4165:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3771:474:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3816:9:14",
														"nodeType": "YulTypedName",
														"src": "3816:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3827:7:14",
														"nodeType": "YulTypedName",
														"src": "3827:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3839:6:14",
														"nodeType": "YulTypedName",
														"src": "3839:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3847:6:14",
														"nodeType": "YulTypedName",
														"src": "3847:6:14",
														"type": ""
													}
												],
												"src": "3771:474:14"
											},
											{
												"body": {
													"nativeSrc": "4334:391:14",
													"nodeType": "YulBlock",
													"src": "4334:391:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "4380:83:14",
																"nodeType": "YulBlock",
																"src": "4380:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4382:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "4382:77:14"
																			},
																			"nativeSrc": "4382:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4382:79:14"
																		},
																		"nativeSrc": "4382:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4382:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4355:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4355:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4364:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4364:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4351:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4351:3:14"
																		},
																		"nativeSrc": "4351:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4351:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4376:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4376:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4347:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4347:3:14"
																},
																"nativeSrc": "4347:32:14",
																"nodeType": "YulFunctionCall",
																"src": "4347:32:14"
															},
															"nativeSrc": "4344:119:14",
															"nodeType": "YulIf",
															"src": "4344:119:14"
														},
														{
															"nativeSrc": "4473:117:14",
															"nodeType": "YulBlock",
															"src": "4473:117:14",
															"statements": [
																{
																	"nativeSrc": "4488:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4488:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4502:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4502:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4492:6:14",
																			"nodeType": "YulTypedName",
																			"src": "4492:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4517:63:14",
																	"nodeType": "YulAssignment",
																	"src": "4517:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4552:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "4552:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4563:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4563:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4548:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4548:3:14"
																				},
																				"nativeSrc": "4548:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4548:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4572:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4572:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4527:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "4527:20:14"
																		},
																		"nativeSrc": "4527:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4527:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4517:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4517:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4600:118:14",
															"nodeType": "YulBlock",
															"src": "4600:118:14",
															"statements": [
																{
																	"nativeSrc": "4615:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4615:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4629:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4629:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4619:6:14",
																			"nodeType": "YulTypedName",
																			"src": "4619:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4645:63:14",
																	"nodeType": "YulAssignment",
																	"src": "4645:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4680:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "4680:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4691:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4691:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4676:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4676:3:14"
																				},
																				"nativeSrc": "4676:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4676:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4700:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4700:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4655:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "4655:20:14"
																		},
																		"nativeSrc": "4655:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4655:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4645:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4645:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "4251:474:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4296:9:14",
														"nodeType": "YulTypedName",
														"src": "4296:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4307:7:14",
														"nodeType": "YulTypedName",
														"src": "4307:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4319:6:14",
														"nodeType": "YulTypedName",
														"src": "4319:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4327:6:14",
														"nodeType": "YulTypedName",
														"src": "4327:6:14",
														"type": ""
													}
												],
												"src": "4251:474:14"
											},
											{
												"body": {
													"nativeSrc": "4763:28:14",
													"nodeType": "YulBlock",
													"src": "4763:28:14",
													"statements": [
														{
															"nativeSrc": "4773:12:14",
															"nodeType": "YulAssignment",
															"src": "4773:12:14",
															"value": {
																"name": "value",
																"nativeSrc": "4780:5:14",
																"nodeType": "YulIdentifier",
																"src": "4780:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4773:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4773:3:14"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4731:60:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4749:5:14",
														"nodeType": "YulTypedName",
														"src": "4749:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4759:3:14",
														"nodeType": "YulTypedName",
														"src": "4759:3:14",
														"type": ""
													}
												],
												"src": "4731:60:14"
											},
											{
												"body": {
													"nativeSrc": "4857:82:14",
													"nodeType": "YulBlock",
													"src": "4857:82:14",
													"statements": [
														{
															"nativeSrc": "4867:66:14",
															"nodeType": "YulAssignment",
															"src": "4867:66:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4925:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "4925:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "4907:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "4907:17:14"
																				},
																				"nativeSrc": "4907:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4907:24:14"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "4898:8:14",
																			"nodeType": "YulIdentifier",
																			"src": "4898:8:14"
																		},
																		"nativeSrc": "4898:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4898:34:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "4880:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "4880:17:14"
																},
																"nativeSrc": "4880:53:14",
																"nodeType": "YulFunctionCall",
																"src": "4880:53:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4867:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "4867:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "4797:142:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4837:5:14",
														"nodeType": "YulTypedName",
														"src": "4837:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4847:9:14",
														"nodeType": "YulTypedName",
														"src": "4847:9:14",
														"type": ""
													}
												],
												"src": "4797:142:14"
											},
											{
												"body": {
													"nativeSrc": "5005:66:14",
													"nodeType": "YulBlock",
													"src": "5005:66:14",
													"statements": [
														{
															"nativeSrc": "5015:50:14",
															"nodeType": "YulAssignment",
															"src": "5015:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5059:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "5059:5:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "5028:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "5028:30:14"
																},
																"nativeSrc": "5028:37:14",
																"nodeType": "YulFunctionCall",
																"src": "5028:37:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5015:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "5015:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "4945:126:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4985:5:14",
														"nodeType": "YulTypedName",
														"src": "4985:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4995:9:14",
														"nodeType": "YulTypedName",
														"src": "4995:9:14",
														"type": ""
													}
												],
												"src": "4945:126:14"
											},
											{
												"body": {
													"nativeSrc": "5153:66:14",
													"nodeType": "YulBlock",
													"src": "5153:66:14",
													"statements": [
														{
															"nativeSrc": "5163:50:14",
															"nodeType": "YulAssignment",
															"src": "5163:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5207:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "5207:5:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "5176:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "5176:30:14"
																},
																"nativeSrc": "5176:37:14",
																"nodeType": "YulFunctionCall",
																"src": "5176:37:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5163:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "5163:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IScorer_$1472_to_t_address",
												"nativeSrc": "5077:142:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5133:5:14",
														"nodeType": "YulTypedName",
														"src": "5133:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5143:9:14",
														"nodeType": "YulTypedName",
														"src": "5143:9:14",
														"type": ""
													}
												],
												"src": "5077:142:14"
											},
											{
												"body": {
													"nativeSrc": "5306:82:14",
													"nodeType": "YulBlock",
													"src": "5306:82:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5323:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "5323:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5375:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "5375:5:14"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IScorer_$1472_to_t_address",
																			"nativeSrc": "5328:46:14",
																			"nodeType": "YulIdentifier",
																			"src": "5328:46:14"
																		},
																		"nativeSrc": "5328:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5328:53:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5316:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5316:6:14"
																},
																"nativeSrc": "5316:66:14",
																"nodeType": "YulFunctionCall",
																"src": "5316:66:14"
															},
															"nativeSrc": "5316:66:14",
															"nodeType": "YulExpressionStatement",
															"src": "5316:66:14"
														}
													]
												},
												"name": "abi_encode_t_contract$_IScorer_$1472_to_t_address_fromStack",
												"nativeSrc": "5225:163:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5294:5:14",
														"nodeType": "YulTypedName",
														"src": "5294:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5301:3:14",
														"nodeType": "YulTypedName",
														"src": "5301:3:14",
														"type": ""
													}
												],
												"src": "5225:163:14"
											},
											{
												"body": {
													"nativeSrc": "5508:140:14",
													"nodeType": "YulBlock",
													"src": "5508:140:14",
													"statements": [
														{
															"nativeSrc": "5518:26:14",
															"nodeType": "YulAssignment",
															"src": "5518:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5530:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "5530:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5541:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5541:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5526:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5526:3:14"
																},
																"nativeSrc": "5526:18:14",
																"nodeType": "YulFunctionCall",
																"src": "5526:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5518:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "5518:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5614:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5614:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5627:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5627:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5638:1:14",
																				"nodeType": "YulLiteral",
																				"src": "5638:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5623:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5623:3:14"
																		},
																		"nativeSrc": "5623:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5623:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IScorer_$1472_to_t_address_fromStack",
																	"nativeSrc": "5554:59:14",
																	"nodeType": "YulIdentifier",
																	"src": "5554:59:14"
																},
																"nativeSrc": "5554:87:14",
																"nodeType": "YulFunctionCall",
																"src": "5554:87:14"
															},
															"nativeSrc": "5554:87:14",
															"nodeType": "YulExpressionStatement",
															"src": "5554:87:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IScorer_$1472__to_t_address__fromStack_reversed",
												"nativeSrc": "5394:254:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5480:9:14",
														"nodeType": "YulTypedName",
														"src": "5480:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5492:6:14",
														"nodeType": "YulTypedName",
														"src": "5492:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5503:4:14",
														"nodeType": "YulTypedName",
														"src": "5503:4:14",
														"type": ""
													}
												],
												"src": "5394:254:14"
											},
											{
												"body": {
													"nativeSrc": "5698:57:14",
													"nodeType": "YulBlock",
													"src": "5698:57:14",
													"statements": [
														{
															"nativeSrc": "5708:41:14",
															"nodeType": "YulAssignment",
															"src": "5708:41:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5723:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "5723:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5730:18:14",
																		"nodeType": "YulLiteral",
																		"src": "5730:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5719:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5719:3:14"
																},
																"nativeSrc": "5719:30:14",
																"nodeType": "YulFunctionCall",
																"src": "5719:30:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5708:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "5708:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "5654:101:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5680:5:14",
														"nodeType": "YulTypedName",
														"src": "5680:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5690:7:14",
														"nodeType": "YulTypedName",
														"src": "5690:7:14",
														"type": ""
													}
												],
												"src": "5654:101:14"
											},
											{
												"body": {
													"nativeSrc": "5824:52:14",
													"nodeType": "YulBlock",
													"src": "5824:52:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5841:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "5841:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5863:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "5863:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint64",
																			"nativeSrc": "5846:16:14",
																			"nodeType": "YulIdentifier",
																			"src": "5846:16:14"
																		},
																		"nativeSrc": "5846:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5846:23:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5834:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5834:6:14"
																},
																"nativeSrc": "5834:36:14",
																"nodeType": "YulFunctionCall",
																"src": "5834:36:14"
															},
															"nativeSrc": "5834:36:14",
															"nodeType": "YulExpressionStatement",
															"src": "5834:36:14"
														}
													]
												},
												"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
												"nativeSrc": "5761:115:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5812:5:14",
														"nodeType": "YulTypedName",
														"src": "5812:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5819:3:14",
														"nodeType": "YulTypedName",
														"src": "5819:3:14",
														"type": ""
													}
												],
												"src": "5761:115:14"
											},
											{
												"body": {
													"nativeSrc": "5941:40:14",
													"nodeType": "YulBlock",
													"src": "5941:40:14",
													"statements": [
														{
															"nativeSrc": "5952:22:14",
															"nodeType": "YulAssignment",
															"src": "5952:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5968:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "5968:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5962:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "5962:5:14"
																},
																"nativeSrc": "5962:12:14",
																"nodeType": "YulFunctionCall",
																"src": "5962:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5952:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5952:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "5882:99:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5924:5:14",
														"nodeType": "YulTypedName",
														"src": "5924:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5934:6:14",
														"nodeType": "YulTypedName",
														"src": "5934:6:14",
														"type": ""
													}
												],
												"src": "5882:99:14"
											},
											{
												"body": {
													"nativeSrc": "6049:186:14",
													"nodeType": "YulBlock",
													"src": "6049:186:14",
													"statements": [
														{
															"nativeSrc": "6060:10:14",
															"nodeType": "YulVariableDeclaration",
															"src": "6060:10:14",
															"value": {
																"kind": "number",
																"nativeSrc": "6069:1:14",
																"nodeType": "YulLiteral",
																"src": "6069:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "6064:1:14",
																	"nodeType": "YulTypedName",
																	"src": "6064:1:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6129:63:14",
																"nodeType": "YulBlock",
																"src": "6129:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "6154:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "6154:3:14"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "6159:1:14",
																							"nodeType": "YulIdentifier",
																							"src": "6159:1:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6150:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "6150:3:14"
																					},
																					"nativeSrc": "6150:11:14",
																					"nodeType": "YulFunctionCall",
																					"src": "6150:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "6173:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "6173:3:14"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "6178:1:14",
																									"nodeType": "YulIdentifier",
																									"src": "6178:1:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6169:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "6169:3:14"
																							},
																							"nativeSrc": "6169:11:14",
																							"nodeType": "YulFunctionCall",
																							"src": "6169:11:14"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "6163:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "6163:5:14"
																					},
																					"nativeSrc": "6163:18:14",
																					"nodeType": "YulFunctionCall",
																					"src": "6163:18:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6143:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6143:6:14"
																			},
																			"nativeSrc": "6143:39:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6143:39:14"
																		},
																		"nativeSrc": "6143:39:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6143:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "6090:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "6090:1:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6093:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6093:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6087:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "6087:2:14"
																},
																"nativeSrc": "6087:13:14",
																"nodeType": "YulFunctionCall",
																"src": "6087:13:14"
															},
															"nativeSrc": "6079:113:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6101:19:14",
																"nodeType": "YulBlock",
																"src": "6101:19:14",
																"statements": [
																	{
																		"nativeSrc": "6103:15:14",
																		"nodeType": "YulAssignment",
																		"src": "6103:15:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "6112:1:14",
																					"nodeType": "YulIdentifier",
																					"src": "6112:1:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6115:2:14",
																					"nodeType": "YulLiteral",
																					"src": "6115:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6108:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "6108:3:14"
																			},
																			"nativeSrc": "6108:10:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6108:10:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "6103:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "6103:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6083:3:14",
																"nodeType": "YulBlock",
																"src": "6083:3:14",
																"statements": []
															},
															"src": "6079:113:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6212:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "6212:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6217:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6217:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6208:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6208:3:14"
																		},
																		"nativeSrc": "6208:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6208:16:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6226:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6226:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6201:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6201:6:14"
																},
																"nativeSrc": "6201:27:14",
																"nodeType": "YulFunctionCall",
																"src": "6201:27:14"
															},
															"nativeSrc": "6201:27:14",
															"nodeType": "YulExpressionStatement",
															"src": "6201:27:14"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "5987:248:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6031:3:14",
														"nodeType": "YulTypedName",
														"src": "6031:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6036:3:14",
														"nodeType": "YulTypedName",
														"src": "6036:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6041:6:14",
														"nodeType": "YulTypedName",
														"src": "6041:6:14",
														"type": ""
													}
												],
												"src": "5987:248:14"
											},
											{
												"body": {
													"nativeSrc": "6289:54:14",
													"nodeType": "YulBlock",
													"src": "6289:54:14",
													"statements": [
														{
															"nativeSrc": "6299:38:14",
															"nodeType": "YulAssignment",
															"src": "6299:38:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6317:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "6317:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6324:2:14",
																				"nodeType": "YulLiteral",
																				"src": "6324:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6313:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6313:3:14"
																		},
																		"nativeSrc": "6313:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6313:14:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6333:2:14",
																				"nodeType": "YulLiteral",
																				"src": "6333:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "6329:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6329:3:14"
																		},
																		"nativeSrc": "6329:7:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6329:7:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6309:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6309:3:14"
																},
																"nativeSrc": "6309:28:14",
																"nodeType": "YulFunctionCall",
																"src": "6309:28:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6299:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6299:6:14"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "6241:102:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6272:5:14",
														"nodeType": "YulTypedName",
														"src": "6272:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6282:6:14",
														"nodeType": "YulTypedName",
														"src": "6282:6:14",
														"type": ""
													}
												],
												"src": "6241:102:14"
											},
											{
												"body": {
													"nativeSrc": "6441:285:14",
													"nodeType": "YulBlock",
													"src": "6441:285:14",
													"statements": [
														{
															"nativeSrc": "6451:53:14",
															"nodeType": "YulVariableDeclaration",
															"src": "6451:53:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6498:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "6498:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "6465:32:14",
																	"nodeType": "YulIdentifier",
																	"src": "6465:32:14"
																},
																"nativeSrc": "6465:39:14",
																"nodeType": "YulFunctionCall",
																"src": "6465:39:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6455:6:14",
																	"nodeType": "YulTypedName",
																	"src": "6455:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6513:78:14",
															"nodeType": "YulAssignment",
															"src": "6513:78:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6579:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "6579:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6584:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6584:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6520:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "6520:58:14"
																},
																"nativeSrc": "6520:71:14",
																"nodeType": "YulFunctionCall",
																"src": "6520:71:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6513:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6513:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6639:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "6639:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6646:4:14",
																				"nodeType": "YulLiteral",
																				"src": "6646:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6635:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6635:3:14"
																		},
																		"nativeSrc": "6635:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6635:16:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6653:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "6653:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6658:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6658:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "6600:34:14",
																	"nodeType": "YulIdentifier",
																	"src": "6600:34:14"
																},
																"nativeSrc": "6600:65:14",
																"nodeType": "YulFunctionCall",
																"src": "6600:65:14"
															},
															"nativeSrc": "6600:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "6600:65:14"
														},
														{
															"nativeSrc": "6674:46:14",
															"nodeType": "YulAssignment",
															"src": "6674:46:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6685:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "6685:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6712:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6712:6:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "6690:21:14",
																			"nodeType": "YulIdentifier",
																			"src": "6690:21:14"
																		},
																		"nativeSrc": "6690:29:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6690:29:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6681:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6681:3:14"
																},
																"nativeSrc": "6681:39:14",
																"nodeType": "YulFunctionCall",
																"src": "6681:39:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6674:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6674:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6349:377:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6422:5:14",
														"nodeType": "YulTypedName",
														"src": "6422:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6429:3:14",
														"nodeType": "YulTypedName",
														"src": "6429:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6437:3:14",
														"nodeType": "YulTypedName",
														"src": "6437:3:14",
														"type": ""
													}
												],
												"src": "6349:377:14"
											},
											{
												"body": {
													"nativeSrc": "6902:355:14",
													"nodeType": "YulBlock",
													"src": "6902:355:14",
													"statements": [
														{
															"nativeSrc": "6912:26:14",
															"nodeType": "YulAssignment",
															"src": "6912:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6924:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "6924:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6935:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6935:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6920:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6920:3:14"
																},
																"nativeSrc": "6920:18:14",
																"nodeType": "YulFunctionCall",
																"src": "6920:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6912:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "6912:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6990:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6990:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7003:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7003:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7014:1:14",
																				"nodeType": "YulLiteral",
																				"src": "7014:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6999:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6999:3:14"
																		},
																		"nativeSrc": "6999:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6999:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
																	"nativeSrc": "6948:41:14",
																	"nodeType": "YulIdentifier",
																	"src": "6948:41:14"
																},
																"nativeSrc": "6948:69:14",
																"nodeType": "YulFunctionCall",
																"src": "6948:69:14"
															},
															"nativeSrc": "6948:69:14",
															"nodeType": "YulExpressionStatement",
															"src": "6948:69:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7069:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7069:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7082:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7082:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7093:2:14",
																				"nodeType": "YulLiteral",
																				"src": "7093:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7078:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7078:3:14"
																		},
																		"nativeSrc": "7078:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7078:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
																	"nativeSrc": "7027:41:14",
																	"nodeType": "YulIdentifier",
																	"src": "7027:41:14"
																},
																"nativeSrc": "7027:70:14",
																"nodeType": "YulFunctionCall",
																"src": "7027:70:14"
															},
															"nativeSrc": "7027:70:14",
															"nodeType": "YulExpressionStatement",
															"src": "7027:70:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7118:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7118:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7129:2:14",
																				"nodeType": "YulLiteral",
																				"src": "7129:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7114:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7114:3:14"
																		},
																		"nativeSrc": "7114:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7114:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7138:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "7138:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7144:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7144:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7134:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7134:3:14"
																		},
																		"nativeSrc": "7134:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7134:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7107:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7107:6:14"
																},
																"nativeSrc": "7107:48:14",
																"nodeType": "YulFunctionCall",
																"src": "7107:48:14"
															},
															"nativeSrc": "7107:48:14",
															"nodeType": "YulExpressionStatement",
															"src": "7107:48:14"
														},
														{
															"nativeSrc": "7164:86:14",
															"nodeType": "YulAssignment",
															"src": "7164:86:14",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7236:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7236:6:14"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "7245:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "7245:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7172:63:14",
																	"nodeType": "YulIdentifier",
																	"src": "7172:63:14"
																},
																"nativeSrc": "7172:78:14",
																"nodeType": "YulFunctionCall",
																"src": "7172:78:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7164:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "7164:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64_t_uint64_t_string_memory_ptr__to_t_uint64_t_uint64_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6732:525:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6858:9:14",
														"nodeType": "YulTypedName",
														"src": "6858:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6870:6:14",
														"nodeType": "YulTypedName",
														"src": "6870:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6878:6:14",
														"nodeType": "YulTypedName",
														"src": "6878:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6886:6:14",
														"nodeType": "YulTypedName",
														"src": "6886:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6897:4:14",
														"nodeType": "YulTypedName",
														"src": "6897:4:14",
														"type": ""
													}
												],
												"src": "6732:525:14"
											},
											{
												"body": {
													"nativeSrc": "7305:78:14",
													"nodeType": "YulBlock",
													"src": "7305:78:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "7361:16:14",
																"nodeType": "YulBlock",
																"src": "7361:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7370:1:14",
																					"nodeType": "YulLiteral",
																					"src": "7370:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7373:1:14",
																					"nodeType": "YulLiteral",
																					"src": "7373:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7363:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "7363:6:14"
																			},
																			"nativeSrc": "7363:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7363:12:14"
																		},
																		"nativeSrc": "7363:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "7363:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7328:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "7328:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7352:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "7352:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint64",
																					"nativeSrc": "7335:16:14",
																					"nodeType": "YulIdentifier",
																					"src": "7335:16:14"
																				},
																				"nativeSrc": "7335:23:14",
																				"nodeType": "YulFunctionCall",
																				"src": "7335:23:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7325:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "7325:2:14"
																		},
																		"nativeSrc": "7325:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7325:34:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7318:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7318:6:14"
																},
																"nativeSrc": "7318:42:14",
																"nodeType": "YulFunctionCall",
																"src": "7318:42:14"
															},
															"nativeSrc": "7315:62:14",
															"nodeType": "YulIf",
															"src": "7315:62:14"
														}
													]
												},
												"name": "validator_revert_t_uint64",
												"nativeSrc": "7263:120:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7298:5:14",
														"nodeType": "YulTypedName",
														"src": "7298:5:14",
														"type": ""
													}
												],
												"src": "7263:120:14"
											},
											{
												"body": {
													"nativeSrc": "7440:86:14",
													"nodeType": "YulBlock",
													"src": "7440:86:14",
													"statements": [
														{
															"nativeSrc": "7450:29:14",
															"nodeType": "YulAssignment",
															"src": "7450:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7472:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7472:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7459:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "7459:12:14"
																},
																"nativeSrc": "7459:20:14",
																"nodeType": "YulFunctionCall",
																"src": "7459:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7450:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "7450:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7514:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "7514:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint64",
																	"nativeSrc": "7488:25:14",
																	"nodeType": "YulIdentifier",
																	"src": "7488:25:14"
																},
																"nativeSrc": "7488:32:14",
																"nodeType": "YulFunctionCall",
																"src": "7488:32:14"
															},
															"nativeSrc": "7488:32:14",
															"nodeType": "YulExpressionStatement",
															"src": "7488:32:14"
														}
													]
												},
												"name": "abi_decode_t_uint64",
												"nativeSrc": "7389:137:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7418:6:14",
														"nodeType": "YulTypedName",
														"src": "7418:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7426:3:14",
														"nodeType": "YulTypedName",
														"src": "7426:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7434:5:14",
														"nodeType": "YulTypedName",
														"src": "7434:5:14",
														"type": ""
													}
												],
												"src": "7389:137:14"
											},
											{
												"body": {
													"nativeSrc": "7621:28:14",
													"nodeType": "YulBlock",
													"src": "7621:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7638:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7638:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7641:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7641:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7631:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7631:6:14"
																},
																"nativeSrc": "7631:12:14",
																"nodeType": "YulFunctionCall",
																"src": "7631:12:14"
															},
															"nativeSrc": "7631:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "7631:12:14"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "7532:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "7532:117:14"
											},
											{
												"body": {
													"nativeSrc": "7744:28:14",
													"nodeType": "YulBlock",
													"src": "7744:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7761:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7761:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7764:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7764:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7754:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7754:6:14"
																},
																"nativeSrc": "7754:12:14",
																"nodeType": "YulFunctionCall",
																"src": "7754:12:14"
															},
															"nativeSrc": "7754:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "7754:12:14"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "7655:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "7655:117:14"
											},
											{
												"body": {
													"nativeSrc": "7806:152:14",
													"nodeType": "YulBlock",
													"src": "7806:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7823:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7823:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7826:77:14",
																		"nodeType": "YulLiteral",
																		"src": "7826:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7816:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7816:6:14"
																},
																"nativeSrc": "7816:88:14",
																"nodeType": "YulFunctionCall",
																"src": "7816:88:14"
															},
															"nativeSrc": "7816:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "7816:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7920:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7920:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7923:4:14",
																		"nodeType": "YulLiteral",
																		"src": "7923:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7913:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7913:6:14"
																},
																"nativeSrc": "7913:15:14",
																"nodeType": "YulFunctionCall",
																"src": "7913:15:14"
															},
															"nativeSrc": "7913:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "7913:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7944:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7944:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7947:4:14",
																		"nodeType": "YulLiteral",
																		"src": "7947:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7937:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7937:6:14"
																},
																"nativeSrc": "7937:15:14",
																"nodeType": "YulFunctionCall",
																"src": "7937:15:14"
															},
															"nativeSrc": "7937:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "7937:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "7778:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "7778:180:14"
											},
											{
												"body": {
													"nativeSrc": "8007:238:14",
													"nodeType": "YulBlock",
													"src": "8007:238:14",
													"statements": [
														{
															"nativeSrc": "8017:58:14",
															"nodeType": "YulVariableDeclaration",
															"src": "8017:58:14",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "8039:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8039:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "8069:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "8069:4:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "8047:21:14",
																			"nodeType": "YulIdentifier",
																			"src": "8047:21:14"
																		},
																		"nativeSrc": "8047:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8047:27:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8035:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8035:3:14"
																},
																"nativeSrc": "8035:40:14",
																"nodeType": "YulFunctionCall",
																"src": "8035:40:14"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "8021:10:14",
																	"nodeType": "YulTypedName",
																	"src": "8021:10:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8186:22:14",
																"nodeType": "YulBlock",
																"src": "8186:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8188:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "8188:16:14"
																			},
																			"nativeSrc": "8188:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8188:18:14"
																		},
																		"nativeSrc": "8188:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "8188:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "8129:10:14",
																				"nodeType": "YulIdentifier",
																				"src": "8129:10:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8141:18:14",
																				"nodeType": "YulLiteral",
																				"src": "8141:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8126:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "8126:2:14"
																		},
																		"nativeSrc": "8126:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8126:34:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "8165:10:14",
																				"nodeType": "YulIdentifier",
																				"src": "8165:10:14"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "8177:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8177:6:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8162:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "8162:2:14"
																		},
																		"nativeSrc": "8162:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8162:22:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8123:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "8123:2:14"
																},
																"nativeSrc": "8123:62:14",
																"nodeType": "YulFunctionCall",
																"src": "8123:62:14"
															},
															"nativeSrc": "8120:88:14",
															"nodeType": "YulIf",
															"src": "8120:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8224:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8224:2:14",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "8228:10:14",
																		"nodeType": "YulIdentifier",
																		"src": "8228:10:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8217:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8217:6:14"
																},
																"nativeSrc": "8217:22:14",
																"nodeType": "YulFunctionCall",
																"src": "8217:22:14"
															},
															"nativeSrc": "8217:22:14",
															"nodeType": "YulExpressionStatement",
															"src": "8217:22:14"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "7964:281:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7993:6:14",
														"nodeType": "YulTypedName",
														"src": "7993:6:14",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "8001:4:14",
														"nodeType": "YulTypedName",
														"src": "8001:4:14",
														"type": ""
													}
												],
												"src": "7964:281:14"
											},
											{
												"body": {
													"nativeSrc": "8292:88:14",
													"nodeType": "YulBlock",
													"src": "8292:88:14",
													"statements": [
														{
															"nativeSrc": "8302:30:14",
															"nodeType": "YulAssignment",
															"src": "8302:30:14",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "8312:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "8312:18:14"
																},
																"nativeSrc": "8312:20:14",
																"nodeType": "YulFunctionCall",
																"src": "8312:20:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "8302:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8302:6:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "8361:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8361:6:14"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "8369:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "8369:4:14"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "8341:19:14",
																	"nodeType": "YulIdentifier",
																	"src": "8341:19:14"
																},
																"nativeSrc": "8341:33:14",
																"nodeType": "YulFunctionCall",
																"src": "8341:33:14"
															},
															"nativeSrc": "8341:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "8341:33:14"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "8251:129:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "8276:4:14",
														"nodeType": "YulTypedName",
														"src": "8276:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "8285:6:14",
														"nodeType": "YulTypedName",
														"src": "8285:6:14",
														"type": ""
													}
												],
												"src": "8251:129:14"
											},
											{
												"body": {
													"nativeSrc": "8453:241:14",
													"nodeType": "YulBlock",
													"src": "8453:241:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "8558:22:14",
																"nodeType": "YulBlock",
																"src": "8558:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8560:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "8560:16:14"
																			},
																			"nativeSrc": "8560:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8560:18:14"
																		},
																		"nativeSrc": "8560:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "8560:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8530:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8530:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8538:18:14",
																		"nodeType": "YulLiteral",
																		"src": "8538:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8527:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "8527:2:14"
																},
																"nativeSrc": "8527:30:14",
																"nodeType": "YulFunctionCall",
																"src": "8527:30:14"
															},
															"nativeSrc": "8524:56:14",
															"nodeType": "YulIf",
															"src": "8524:56:14"
														},
														{
															"nativeSrc": "8590:37:14",
															"nodeType": "YulAssignment",
															"src": "8590:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8620:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8620:6:14"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "8598:21:14",
																	"nodeType": "YulIdentifier",
																	"src": "8598:21:14"
																},
																"nativeSrc": "8598:29:14",
																"nodeType": "YulFunctionCall",
																"src": "8598:29:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8590:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "8590:4:14"
																}
															]
														},
														{
															"nativeSrc": "8664:23:14",
															"nodeType": "YulAssignment",
															"src": "8664:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "8676:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "8676:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8682:4:14",
																		"nodeType": "YulLiteral",
																		"src": "8682:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8672:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8672:3:14"
																},
																"nativeSrc": "8672:15:14",
																"nodeType": "YulFunctionCall",
																"src": "8672:15:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8664:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "8664:4:14"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "8386:308:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "8437:6:14",
														"nodeType": "YulTypedName",
														"src": "8437:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "8448:4:14",
														"nodeType": "YulTypedName",
														"src": "8448:4:14",
														"type": ""
													}
												],
												"src": "8386:308:14"
											},
											{
												"body": {
													"nativeSrc": "8764:84:14",
													"nodeType": "YulBlock",
													"src": "8764:84:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "8788:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "8788:3:14"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "8793:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "8793:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8798:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8798:6:14"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "8775:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "8775:12:14"
																},
																"nativeSrc": "8775:30:14",
																"nodeType": "YulFunctionCall",
																"src": "8775:30:14"
															},
															"nativeSrc": "8775:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "8775:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "8825:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "8825:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8830:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8830:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8821:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8821:3:14"
																		},
																		"nativeSrc": "8821:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8821:16:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8839:1:14",
																		"nodeType": "YulLiteral",
																		"src": "8839:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8814:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8814:6:14"
																},
																"nativeSrc": "8814:27:14",
																"nodeType": "YulFunctionCall",
																"src": "8814:27:14"
															},
															"nativeSrc": "8814:27:14",
															"nodeType": "YulExpressionStatement",
															"src": "8814:27:14"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "8700:148:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8746:3:14",
														"nodeType": "YulTypedName",
														"src": "8746:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "8751:3:14",
														"nodeType": "YulTypedName",
														"src": "8751:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8756:6:14",
														"nodeType": "YulTypedName",
														"src": "8756:6:14",
														"type": ""
													}
												],
												"src": "8700:148:14"
											},
											{
												"body": {
													"nativeSrc": "8938:341:14",
													"nodeType": "YulBlock",
													"src": "8938:341:14",
													"statements": [
														{
															"nativeSrc": "8948:75:14",
															"nodeType": "YulAssignment",
															"src": "8948:75:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9015:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "9015:6:14"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "8973:41:14",
																			"nodeType": "YulIdentifier",
																			"src": "8973:41:14"
																		},
																		"nativeSrc": "8973:49:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8973:49:14"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "8957:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "8957:15:14"
																},
																"nativeSrc": "8957:66:14",
																"nodeType": "YulFunctionCall",
																"src": "8957:66:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8948:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "8948:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9039:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "9039:5:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9046:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9046:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9032:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9032:6:14"
																},
																"nativeSrc": "9032:21:14",
																"nodeType": "YulFunctionCall",
																"src": "9032:21:14"
															},
															"nativeSrc": "9032:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "9032:21:14"
														},
														{
															"nativeSrc": "9062:27:14",
															"nodeType": "YulVariableDeclaration",
															"src": "9062:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9077:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "9077:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9084:4:14",
																		"nodeType": "YulLiteral",
																		"src": "9084:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9073:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9073:3:14"
																},
																"nativeSrc": "9073:16:14",
																"nodeType": "YulFunctionCall",
																"src": "9073:16:14"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "9066:3:14",
																	"nodeType": "YulTypedName",
																	"src": "9066:3:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9127:83:14",
																"nodeType": "YulBlock",
																"src": "9127:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "9129:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "9129:77:14"
																			},
																			"nativeSrc": "9129:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "9129:79:14"
																		},
																		"nativeSrc": "9129:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "9129:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "9108:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "9108:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "9113:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "9113:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9104:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9104:3:14"
																		},
																		"nativeSrc": "9104:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9104:16:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9122:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9122:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9101:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "9101:2:14"
																},
																"nativeSrc": "9101:25:14",
																"nodeType": "YulFunctionCall",
																"src": "9101:25:14"
															},
															"nativeSrc": "9098:112:14",
															"nodeType": "YulIf",
															"src": "9098:112:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "9256:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9256:3:14"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "9261:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9261:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9266:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9266:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "9219:36:14",
																	"nodeType": "YulIdentifier",
																	"src": "9219:36:14"
																},
																"nativeSrc": "9219:54:14",
																"nodeType": "YulFunctionCall",
																"src": "9219:54:14"
															},
															"nativeSrc": "9219:54:14",
															"nodeType": "YulExpressionStatement",
															"src": "9219:54:14"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "8854:425:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8911:3:14",
														"nodeType": "YulTypedName",
														"src": "8911:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8916:6:14",
														"nodeType": "YulTypedName",
														"src": "8916:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8924:3:14",
														"nodeType": "YulTypedName",
														"src": "8924:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8932:5:14",
														"nodeType": "YulTypedName",
														"src": "8932:5:14",
														"type": ""
													}
												],
												"src": "8854:425:14"
											},
											{
												"body": {
													"nativeSrc": "9361:278:14",
													"nodeType": "YulBlock",
													"src": "9361:278:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "9410:83:14",
																"nodeType": "YulBlock",
																"src": "9410:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "9412:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "9412:77:14"
																			},
																			"nativeSrc": "9412:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "9412:79:14"
																		},
																		"nativeSrc": "9412:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "9412:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "9389:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "9389:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9397:4:14",
																						"nodeType": "YulLiteral",
																						"src": "9397:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9385:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "9385:3:14"
																				},
																				"nativeSrc": "9385:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "9385:17:14"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "9404:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "9404:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "9381:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9381:3:14"
																		},
																		"nativeSrc": "9381:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9381:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9374:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9374:6:14"
																},
																"nativeSrc": "9374:35:14",
																"nodeType": "YulFunctionCall",
																"src": "9374:35:14"
															},
															"nativeSrc": "9371:122:14",
															"nodeType": "YulIf",
															"src": "9371:122:14"
														},
														{
															"nativeSrc": "9502:34:14",
															"nodeType": "YulVariableDeclaration",
															"src": "9502:34:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9529:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9529:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9516:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "9516:12:14"
																},
																"nativeSrc": "9516:20:14",
																"nodeType": "YulFunctionCall",
																"src": "9516:20:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9506:6:14",
																	"nodeType": "YulTypedName",
																	"src": "9506:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9545:88:14",
															"nodeType": "YulAssignment",
															"src": "9545:88:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9606:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "9606:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9614:4:14",
																				"nodeType": "YulLiteral",
																				"src": "9614:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9602:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9602:3:14"
																		},
																		"nativeSrc": "9602:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9602:17:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9621:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9621:6:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9629:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9629:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "9554:47:14",
																	"nodeType": "YulIdentifier",
																	"src": "9554:47:14"
																},
																"nativeSrc": "9554:79:14",
																"nodeType": "YulFunctionCall",
																"src": "9554:79:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9545:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "9545:5:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "9299:340:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9339:6:14",
														"nodeType": "YulTypedName",
														"src": "9339:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9347:3:14",
														"nodeType": "YulTypedName",
														"src": "9347:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "9355:5:14",
														"nodeType": "YulTypedName",
														"src": "9355:5:14",
														"type": ""
													}
												],
												"src": "9299:340:14"
											},
											{
												"body": {
													"nativeSrc": "9753:687:14",
													"nodeType": "YulBlock",
													"src": "9753:687:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "9799:83:14",
																"nodeType": "YulBlock",
																"src": "9799:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9801:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "9801:77:14"
																			},
																			"nativeSrc": "9801:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "9801:79:14"
																		},
																		"nativeSrc": "9801:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "9801:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9774:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "9774:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9783:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9783:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9770:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9770:3:14"
																		},
																		"nativeSrc": "9770:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9770:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9795:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9795:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9766:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9766:3:14"
																},
																"nativeSrc": "9766:32:14",
																"nodeType": "YulFunctionCall",
																"src": "9766:32:14"
															},
															"nativeSrc": "9763:119:14",
															"nodeType": "YulIf",
															"src": "9763:119:14"
														},
														{
															"nativeSrc": "9892:116:14",
															"nodeType": "YulBlock",
															"src": "9892:116:14",
															"statements": [
																{
																	"nativeSrc": "9907:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9907:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9921:1:14",
																		"nodeType": "YulLiteral",
																		"src": "9921:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9911:6:14",
																			"nodeType": "YulTypedName",
																			"src": "9911:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9936:62:14",
																	"nodeType": "YulAssignment",
																	"src": "9936:62:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9970:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "9970:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9981:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "9981:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9966:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "9966:3:14"
																				},
																				"nativeSrc": "9966:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "9966:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9990:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "9990:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint64",
																			"nativeSrc": "9946:19:14",
																			"nodeType": "YulIdentifier",
																			"src": "9946:19:14"
																		},
																		"nativeSrc": "9946:52:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9946:52:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9936:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "9936:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10018:117:14",
															"nodeType": "YulBlock",
															"src": "10018:117:14",
															"statements": [
																{
																	"nativeSrc": "10033:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10033:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10047:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10047:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10037:6:14",
																			"nodeType": "YulTypedName",
																			"src": "10037:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10063:62:14",
																	"nodeType": "YulAssignment",
																	"src": "10063:62:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10097:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "10097:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10108:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "10108:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10093:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10093:3:14"
																				},
																				"nativeSrc": "10093:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10093:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10117:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10117:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint64",
																			"nativeSrc": "10073:19:14",
																			"nodeType": "YulIdentifier",
																			"src": "10073:19:14"
																		},
																		"nativeSrc": "10073:52:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10073:52:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10063:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "10063:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10145:288:14",
															"nodeType": "YulBlock",
															"src": "10145:288:14",
															"statements": [
																{
																	"nativeSrc": "10160:46:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10160:46:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10191:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "10191:9:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10202:2:14",
																						"nodeType": "YulLiteral",
																						"src": "10202:2:14",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10187:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10187:3:14"
																				},
																				"nativeSrc": "10187:18:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10187:18:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10174:12:14",
																			"nodeType": "YulIdentifier",
																			"src": "10174:12:14"
																		},
																		"nativeSrc": "10174:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10174:32:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10164:6:14",
																			"nodeType": "YulTypedName",
																			"src": "10164:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10253:83:14",
																		"nodeType": "YulBlock",
																		"src": "10253:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10255:77:14",
																						"nodeType": "YulIdentifier",
																						"src": "10255:77:14"
																					},
																					"nativeSrc": "10255:79:14",
																					"nodeType": "YulFunctionCall",
																					"src": "10255:79:14"
																				},
																				"nativeSrc": "10255:79:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "10255:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10225:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10225:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10233:18:14",
																				"nodeType": "YulLiteral",
																				"src": "10233:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10222:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "10222:2:14"
																		},
																		"nativeSrc": "10222:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10222:30:14"
																	},
																	"nativeSrc": "10219:117:14",
																	"nodeType": "YulIf",
																	"src": "10219:117:14"
																},
																{
																	"nativeSrc": "10350:73:14",
																	"nodeType": "YulAssignment",
																	"src": "10350:73:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10395:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "10395:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10406:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "10406:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10391:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10391:3:14"
																				},
																				"nativeSrc": "10391:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10391:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10415:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10415:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "10360:30:14",
																			"nodeType": "YulIdentifier",
																			"src": "10360:30:14"
																		},
																		"nativeSrc": "10360:63:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10360:63:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "10350:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "10350:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint64t_uint64t_string_memory_ptr",
												"nativeSrc": "9645:795:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9707:9:14",
														"nodeType": "YulTypedName",
														"src": "9707:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9718:7:14",
														"nodeType": "YulTypedName",
														"src": "9718:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9730:6:14",
														"nodeType": "YulTypedName",
														"src": "9730:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9738:6:14",
														"nodeType": "YulTypedName",
														"src": "9738:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9746:6:14",
														"nodeType": "YulTypedName",
														"src": "9746:6:14",
														"type": ""
													}
												],
												"src": "9645:795:14"
											},
											{
												"body": {
													"nativeSrc": "10546:519:14",
													"nodeType": "YulBlock",
													"src": "10546:519:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "10592:83:14",
																"nodeType": "YulBlock",
																"src": "10592:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10594:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "10594:77:14"
																			},
																			"nativeSrc": "10594:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "10594:79:14"
																		},
																		"nativeSrc": "10594:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "10594:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10567:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10567:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10576:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10576:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10563:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10563:3:14"
																		},
																		"nativeSrc": "10563:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10563:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10588:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10588:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10559:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10559:3:14"
																},
																"nativeSrc": "10559:32:14",
																"nodeType": "YulFunctionCall",
																"src": "10559:32:14"
															},
															"nativeSrc": "10556:119:14",
															"nodeType": "YulIf",
															"src": "10556:119:14"
														},
														{
															"nativeSrc": "10685:117:14",
															"nodeType": "YulBlock",
															"src": "10685:117:14",
															"statements": [
																{
																	"nativeSrc": "10700:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10700:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10714:1:14",
																		"nodeType": "YulLiteral",
																		"src": "10714:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10704:6:14",
																			"nodeType": "YulTypedName",
																			"src": "10704:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10729:63:14",
																	"nodeType": "YulAssignment",
																	"src": "10729:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10764:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "10764:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10775:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "10775:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10760:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10760:3:14"
																				},
																				"nativeSrc": "10760:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10760:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10784:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10784:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10739:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "10739:20:14"
																		},
																		"nativeSrc": "10739:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10739:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10729:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "10729:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10812:118:14",
															"nodeType": "YulBlock",
															"src": "10812:118:14",
															"statements": [
																{
																	"nativeSrc": "10827:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10827:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10841:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10841:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10831:6:14",
																			"nodeType": "YulTypedName",
																			"src": "10831:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10857:63:14",
																	"nodeType": "YulAssignment",
																	"src": "10857:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10892:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "10892:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10903:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "10903:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10888:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10888:3:14"
																				},
																				"nativeSrc": "10888:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10888:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10912:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10912:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10867:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "10867:20:14"
																		},
																		"nativeSrc": "10867:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10867:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10857:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "10857:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10940:118:14",
															"nodeType": "YulBlock",
															"src": "10940:118:14",
															"statements": [
																{
																	"nativeSrc": "10955:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10955:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10969:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10969:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10959:6:14",
																			"nodeType": "YulTypedName",
																			"src": "10959:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10985:63:14",
																	"nodeType": "YulAssignment",
																	"src": "10985:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11020:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "11020:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11031:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "11031:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11016:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "11016:3:14"
																				},
																				"nativeSrc": "11016:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11016:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11040:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "11040:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10995:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "10995:20:14"
																		},
																		"nativeSrc": "10995:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10995:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "10985:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "10985:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "10446:619:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10500:9:14",
														"nodeType": "YulTypedName",
														"src": "10500:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10511:7:14",
														"nodeType": "YulTypedName",
														"src": "10511:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10523:6:14",
														"nodeType": "YulTypedName",
														"src": "10523:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10531:6:14",
														"nodeType": "YulTypedName",
														"src": "10531:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10539:6:14",
														"nodeType": "YulTypedName",
														"src": "10539:6:14",
														"type": ""
													}
												],
												"src": "10446:619:14"
											},
											{
												"body": {
													"nativeSrc": "11160:28:14",
													"nodeType": "YulBlock",
													"src": "11160:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11177:1:14",
																		"nodeType": "YulLiteral",
																		"src": "11177:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11180:1:14",
																		"nodeType": "YulLiteral",
																		"src": "11180:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11170:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11170:6:14"
																},
																"nativeSrc": "11170:12:14",
																"nodeType": "YulFunctionCall",
																"src": "11170:12:14"
															},
															"nativeSrc": "11170:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "11170:12:14"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "11071:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "11071:117:14"
											},
											{
												"body": {
													"nativeSrc": "11283:28:14",
													"nodeType": "YulBlock",
													"src": "11283:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11300:1:14",
																		"nodeType": "YulLiteral",
																		"src": "11300:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11303:1:14",
																		"nodeType": "YulLiteral",
																		"src": "11303:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11293:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11293:6:14"
																},
																"nativeSrc": "11293:12:14",
																"nodeType": "YulFunctionCall",
																"src": "11293:12:14"
															},
															"nativeSrc": "11293:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "11293:12:14"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "11194:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "11194:117:14"
											},
											{
												"body": {
													"nativeSrc": "11424:478:14",
													"nodeType": "YulBlock",
													"src": "11424:478:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "11473:83:14",
																"nodeType": "YulBlock",
																"src": "11473:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "11475:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "11475:77:14"
																			},
																			"nativeSrc": "11475:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "11475:79:14"
																		},
																		"nativeSrc": "11475:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "11475:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "11452:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "11452:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11460:4:14",
																						"nodeType": "YulLiteral",
																						"src": "11460:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11448:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "11448:3:14"
																				},
																				"nativeSrc": "11448:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11448:17:14"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "11467:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "11467:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "11444:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11444:3:14"
																		},
																		"nativeSrc": "11444:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11444:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11437:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11437:6:14"
																},
																"nativeSrc": "11437:35:14",
																"nodeType": "YulFunctionCall",
																"src": "11437:35:14"
															},
															"nativeSrc": "11434:122:14",
															"nodeType": "YulIf",
															"src": "11434:122:14"
														},
														{
															"nativeSrc": "11565:30:14",
															"nodeType": "YulAssignment",
															"src": "11565:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11588:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "11588:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "11575:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "11575:12:14"
																},
																"nativeSrc": "11575:20:14",
																"nodeType": "YulFunctionCall",
																"src": "11575:20:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "11565:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11565:6:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11638:83:14",
																"nodeType": "YulBlock",
																"src": "11638:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "11640:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "11640:77:14"
																			},
																			"nativeSrc": "11640:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "11640:79:14"
																		},
																		"nativeSrc": "11640:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "11640:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "11610:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "11610:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11618:18:14",
																		"nodeType": "YulLiteral",
																		"src": "11618:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11607:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "11607:2:14"
																},
																"nativeSrc": "11607:30:14",
																"nodeType": "YulFunctionCall",
																"src": "11607:30:14"
															},
															"nativeSrc": "11604:117:14",
															"nodeType": "YulIf",
															"src": "11604:117:14"
														},
														{
															"nativeSrc": "11730:29:14",
															"nodeType": "YulAssignment",
															"src": "11730:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11746:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "11746:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11754:4:14",
																		"nodeType": "YulLiteral",
																		"src": "11754:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11742:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11742:3:14"
																},
																"nativeSrc": "11742:17:14",
																"nodeType": "YulFunctionCall",
																"src": "11742:17:14"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "11730:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "11730:8:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11813:83:14",
																"nodeType": "YulBlock",
																"src": "11813:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "11815:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "11815:77:14"
																			},
																			"nativeSrc": "11815:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "11815:79:14"
																		},
																		"nativeSrc": "11815:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "11815:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "11778:8:14",
																				"nodeType": "YulIdentifier",
																				"src": "11778:8:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "11792:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "11792:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11800:4:14",
																						"nodeType": "YulLiteral",
																						"src": "11800:4:14",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "11788:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "11788:3:14"
																				},
																				"nativeSrc": "11788:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11788:17:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11774:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11774:3:14"
																		},
																		"nativeSrc": "11774:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11774:32:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11808:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "11808:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11771:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "11771:2:14"
																},
																"nativeSrc": "11771:41:14",
																"nodeType": "YulFunctionCall",
																"src": "11771:41:14"
															},
															"nativeSrc": "11768:128:14",
															"nodeType": "YulIf",
															"src": "11768:128:14"
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
												"nativeSrc": "11334:568:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11391:6:14",
														"nodeType": "YulTypedName",
														"src": "11391:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11399:3:14",
														"nodeType": "YulTypedName",
														"src": "11399:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "11407:8:14",
														"nodeType": "YulTypedName",
														"src": "11407:8:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11417:6:14",
														"nodeType": "YulTypedName",
														"src": "11417:6:14",
														"type": ""
													}
												],
												"src": "11334:568:14"
											},
											{
												"body": {
													"nativeSrc": "12015:478:14",
													"nodeType": "YulBlock",
													"src": "12015:478:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "12064:83:14",
																"nodeType": "YulBlock",
																"src": "12064:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "12066:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "12066:77:14"
																			},
																			"nativeSrc": "12066:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12066:79:14"
																		},
																		"nativeSrc": "12066:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "12066:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "12043:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "12043:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12051:4:14",
																						"nodeType": "YulLiteral",
																						"src": "12051:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12039:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "12039:3:14"
																				},
																				"nativeSrc": "12039:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "12039:17:14"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "12058:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "12058:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "12035:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12035:3:14"
																		},
																		"nativeSrc": "12035:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12035:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12028:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12028:6:14"
																},
																"nativeSrc": "12028:35:14",
																"nodeType": "YulFunctionCall",
																"src": "12028:35:14"
															},
															"nativeSrc": "12025:122:14",
															"nodeType": "YulIf",
															"src": "12025:122:14"
														},
														{
															"nativeSrc": "12156:30:14",
															"nodeType": "YulAssignment",
															"src": "12156:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12179:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "12179:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "12166:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "12166:12:14"
																},
																"nativeSrc": "12166:20:14",
																"nodeType": "YulFunctionCall",
																"src": "12166:20:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12156:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12156:6:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12229:83:14",
																"nodeType": "YulBlock",
																"src": "12229:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "12231:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "12231:77:14"
																			},
																			"nativeSrc": "12231:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12231:79:14"
																		},
																		"nativeSrc": "12231:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "12231:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "12201:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "12201:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12209:18:14",
																		"nodeType": "YulLiteral",
																		"src": "12209:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12198:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "12198:2:14"
																},
																"nativeSrc": "12198:30:14",
																"nodeType": "YulFunctionCall",
																"src": "12198:30:14"
															},
															"nativeSrc": "12195:117:14",
															"nodeType": "YulIf",
															"src": "12195:117:14"
														},
														{
															"nativeSrc": "12321:29:14",
															"nodeType": "YulAssignment",
															"src": "12321:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12337:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "12337:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12345:4:14",
																		"nodeType": "YulLiteral",
																		"src": "12345:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12333:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12333:3:14"
																},
																"nativeSrc": "12333:17:14",
																"nodeType": "YulFunctionCall",
																"src": "12333:17:14"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "12321:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "12321:8:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12404:83:14",
																"nodeType": "YulBlock",
																"src": "12404:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "12406:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "12406:77:14"
																			},
																			"nativeSrc": "12406:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12406:79:14"
																		},
																		"nativeSrc": "12406:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "12406:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "12369:8:14",
																				"nodeType": "YulIdentifier",
																				"src": "12369:8:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "12383:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "12383:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12391:4:14",
																						"nodeType": "YulLiteral",
																						"src": "12391:4:14",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "12379:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "12379:3:14"
																				},
																				"nativeSrc": "12379:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "12379:17:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12365:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12365:3:14"
																		},
																		"nativeSrc": "12365:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12365:32:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "12399:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "12399:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12362:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "12362:2:14"
																},
																"nativeSrc": "12362:41:14",
																"nodeType": "YulFunctionCall",
																"src": "12362:41:14"
															},
															"nativeSrc": "12359:128:14",
															"nodeType": "YulIf",
															"src": "12359:128:14"
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "11925:568:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11982:6:14",
														"nodeType": "YulTypedName",
														"src": "11982:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11990:3:14",
														"nodeType": "YulTypedName",
														"src": "11990:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "11998:8:14",
														"nodeType": "YulTypedName",
														"src": "11998:8:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12008:6:14",
														"nodeType": "YulTypedName",
														"src": "12008:6:14",
														"type": ""
													}
												],
												"src": "11925:568:14"
											},
											{
												"body": {
													"nativeSrc": "12669:909:14",
													"nodeType": "YulBlock",
													"src": "12669:909:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "12715:83:14",
																"nodeType": "YulBlock",
																"src": "12715:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12717:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "12717:77:14"
																			},
																			"nativeSrc": "12717:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12717:79:14"
																		},
																		"nativeSrc": "12717:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "12717:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12690:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "12690:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12699:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "12699:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12686:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12686:3:14"
																		},
																		"nativeSrc": "12686:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12686:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12711:2:14",
																		"nodeType": "YulLiteral",
																		"src": "12711:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12682:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12682:3:14"
																},
																"nativeSrc": "12682:32:14",
																"nodeType": "YulFunctionCall",
																"src": "12682:32:14"
															},
															"nativeSrc": "12679:119:14",
															"nodeType": "YulIf",
															"src": "12679:119:14"
														},
														{
															"nativeSrc": "12808:117:14",
															"nodeType": "YulBlock",
															"src": "12808:117:14",
															"statements": [
																{
																	"nativeSrc": "12823:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12823:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12837:1:14",
																		"nodeType": "YulLiteral",
																		"src": "12837:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12827:6:14",
																			"nodeType": "YulTypedName",
																			"src": "12827:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12852:63:14",
																	"nodeType": "YulAssignment",
																	"src": "12852:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12887:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "12887:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12898:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "12898:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12883:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "12883:3:14"
																				},
																				"nativeSrc": "12883:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "12883:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12907:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "12907:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12862:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "12862:20:14"
																		},
																		"nativeSrc": "12862:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12862:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12852:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "12852:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12935:313:14",
															"nodeType": "YulBlock",
															"src": "12935:313:14",
															"statements": [
																{
																	"nativeSrc": "12950:46:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12950:46:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12981:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "12981:9:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12992:2:14",
																						"nodeType": "YulLiteral",
																						"src": "12992:2:14",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12977:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "12977:3:14"
																				},
																				"nativeSrc": "12977:18:14",
																				"nodeType": "YulFunctionCall",
																				"src": "12977:18:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "12964:12:14",
																			"nodeType": "YulIdentifier",
																			"src": "12964:12:14"
																		},
																		"nativeSrc": "12964:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12964:32:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12954:6:14",
																			"nodeType": "YulTypedName",
																			"src": "12954:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "13043:83:14",
																		"nodeType": "YulBlock",
																		"src": "13043:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "13045:77:14",
																						"nodeType": "YulIdentifier",
																						"src": "13045:77:14"
																					},
																					"nativeSrc": "13045:79:14",
																					"nodeType": "YulFunctionCall",
																					"src": "13045:79:14"
																				},
																				"nativeSrc": "13045:79:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "13045:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "13015:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "13015:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13023:18:14",
																				"nodeType": "YulLiteral",
																				"src": "13023:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "13012:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "13012:2:14"
																		},
																		"nativeSrc": "13012:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13012:30:14"
																	},
																	"nativeSrc": "13009:117:14",
																	"nodeType": "YulIf",
																	"src": "13009:117:14"
																},
																{
																	"nativeSrc": "13140:98:14",
																	"nodeType": "YulAssignment",
																	"src": "13140:98:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13210:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "13210:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13221:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "13221:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13206:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "13206:3:14"
																				},
																				"nativeSrc": "13206:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "13206:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13230:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "13230:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
																			"nativeSrc": "13158:47:14",
																			"nodeType": "YulIdentifier",
																			"src": "13158:47:14"
																		},
																		"nativeSrc": "13158:80:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13158:80:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "13140:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "13140:6:14"
																		},
																		{
																			"name": "value2",
																			"nativeSrc": "13148:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "13148:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13258:313:14",
															"nodeType": "YulBlock",
															"src": "13258:313:14",
															"statements": [
																{
																	"nativeSrc": "13273:46:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13273:46:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13304:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "13304:9:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13315:2:14",
																						"nodeType": "YulLiteral",
																						"src": "13315:2:14",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13300:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "13300:3:14"
																				},
																				"nativeSrc": "13300:18:14",
																				"nodeType": "YulFunctionCall",
																				"src": "13300:18:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "13287:12:14",
																			"nodeType": "YulIdentifier",
																			"src": "13287:12:14"
																		},
																		"nativeSrc": "13287:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13287:32:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13277:6:14",
																			"nodeType": "YulTypedName",
																			"src": "13277:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "13366:83:14",
																		"nodeType": "YulBlock",
																		"src": "13366:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "13368:77:14",
																						"nodeType": "YulIdentifier",
																						"src": "13368:77:14"
																					},
																					"nativeSrc": "13368:79:14",
																					"nodeType": "YulFunctionCall",
																					"src": "13368:79:14"
																				},
																				"nativeSrc": "13368:79:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "13368:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "13338:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "13338:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13346:18:14",
																				"nodeType": "YulLiteral",
																				"src": "13346:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "13335:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "13335:2:14"
																		},
																		"nativeSrc": "13335:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13335:30:14"
																	},
																	"nativeSrc": "13332:117:14",
																	"nodeType": "YulIf",
																	"src": "13332:117:14"
																},
																{
																	"nativeSrc": "13463:98:14",
																	"nodeType": "YulAssignment",
																	"src": "13463:98:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13533:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "13533:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13544:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "13544:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13529:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "13529:3:14"
																				},
																				"nativeSrc": "13529:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "13529:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13553:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "13553:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
																			"nativeSrc": "13481:47:14",
																			"nodeType": "YulIdentifier",
																			"src": "13481:47:14"
																		},
																		"nativeSrc": "13481:80:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13481:80:14"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "13463:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "13463:6:14"
																		},
																		{
																			"name": "value4",
																			"nativeSrc": "13471:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "13471:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "12499:1079:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12607:9:14",
														"nodeType": "YulTypedName",
														"src": "12607:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12618:7:14",
														"nodeType": "YulTypedName",
														"src": "12618:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12630:6:14",
														"nodeType": "YulTypedName",
														"src": "12630:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12638:6:14",
														"nodeType": "YulTypedName",
														"src": "12638:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12646:6:14",
														"nodeType": "YulTypedName",
														"src": "12646:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "12654:6:14",
														"nodeType": "YulTypedName",
														"src": "12654:6:14",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "12662:6:14",
														"nodeType": "YulTypedName",
														"src": "12662:6:14",
														"type": ""
													}
												],
												"src": "12499:1079:14"
											},
											{
												"body": {
													"nativeSrc": "13643:81:14",
													"nodeType": "YulBlock",
													"src": "13643:81:14",
													"statements": [
														{
															"nativeSrc": "13653:65:14",
															"nodeType": "YulAssignment",
															"src": "13653:65:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13710:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "13710:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint64",
																					"nativeSrc": "13693:16:14",
																					"nodeType": "YulIdentifier",
																					"src": "13693:16:14"
																				},
																				"nativeSrc": "13693:23:14",
																				"nodeType": "YulFunctionCall",
																				"src": "13693:23:14"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "13684:8:14",
																			"nodeType": "YulIdentifier",
																			"src": "13684:8:14"
																		},
																		"nativeSrc": "13684:33:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13684:33:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13666:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "13666:17:14"
																},
																"nativeSrc": "13666:52:14",
																"nodeType": "YulFunctionCall",
																"src": "13666:52:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "13653:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "13653:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint64_to_t_uint256",
												"nativeSrc": "13584:140:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13623:5:14",
														"nodeType": "YulTypedName",
														"src": "13623:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "13633:9:14",
														"nodeType": "YulTypedName",
														"src": "13633:9:14",
														"type": ""
													}
												],
												"src": "13584:140:14"
											},
											{
												"body": {
													"nativeSrc": "13794:65:14",
													"nodeType": "YulBlock",
													"src": "13794:65:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13811:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "13811:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13846:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "13846:5:14"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_uint64_to_t_uint256",
																			"nativeSrc": "13816:29:14",
																			"nodeType": "YulIdentifier",
																			"src": "13816:29:14"
																		},
																		"nativeSrc": "13816:36:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13816:36:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13804:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "13804:6:14"
																},
																"nativeSrc": "13804:49:14",
																"nodeType": "YulFunctionCall",
																"src": "13804:49:14"
															},
															"nativeSrc": "13804:49:14",
															"nodeType": "YulExpressionStatement",
															"src": "13804:49:14"
														}
													]
												},
												"name": "abi_encode_t_uint64_to_t_uint256_fromStack",
												"nativeSrc": "13730:129:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13782:5:14",
														"nodeType": "YulTypedName",
														"src": "13782:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13789:3:14",
														"nodeType": "YulTypedName",
														"src": "13789:3:14",
														"type": ""
													}
												],
												"src": "13730:129:14"
											},
											{
												"body": {
													"nativeSrc": "14017:286:14",
													"nodeType": "YulBlock",
													"src": "14017:286:14",
													"statements": [
														{
															"nativeSrc": "14027:26:14",
															"nodeType": "YulAssignment",
															"src": "14027:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14039:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "14039:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14050:2:14",
																		"nodeType": "YulLiteral",
																		"src": "14050:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14035:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14035:3:14"
																},
																"nativeSrc": "14035:18:14",
																"nodeType": "YulFunctionCall",
																"src": "14035:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14027:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "14027:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14107:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "14107:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14120:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "14120:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14131:1:14",
																				"nodeType": "YulLiteral",
																				"src": "14131:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14116:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14116:3:14"
																		},
																		"nativeSrc": "14116:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14116:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14063:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "14063:43:14"
																},
																"nativeSrc": "14063:71:14",
																"nodeType": "YulFunctionCall",
																"src": "14063:71:14"
															},
															"nativeSrc": "14063:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "14063:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14187:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "14187:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14200:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "14200:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14211:2:14",
																				"nodeType": "YulLiteral",
																				"src": "14211:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14196:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14196:3:14"
																		},
																		"nativeSrc": "14196:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14196:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint256_fromStack",
																	"nativeSrc": "14144:42:14",
																	"nodeType": "YulIdentifier",
																	"src": "14144:42:14"
																},
																"nativeSrc": "14144:71:14",
																"nodeType": "YulFunctionCall",
																"src": "14144:71:14"
															},
															"nativeSrc": "14144:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "14144:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14268:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "14268:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14281:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "14281:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14292:2:14",
																				"nodeType": "YulLiteral",
																				"src": "14292:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14277:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14277:3:14"
																		},
																		"nativeSrc": "14277:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14277:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint256_fromStack",
																	"nativeSrc": "14225:42:14",
																	"nodeType": "YulIdentifier",
																	"src": "14225:42:14"
																},
																"nativeSrc": "14225:71:14",
																"nodeType": "YulFunctionCall",
																"src": "14225:71:14"
															},
															"nativeSrc": "14225:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "14225:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint64_t_uint64__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13865:438:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13973:9:14",
														"nodeType": "YulTypedName",
														"src": "13973:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13985:6:14",
														"nodeType": "YulTypedName",
														"src": "13985:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13993:6:14",
														"nodeType": "YulTypedName",
														"src": "13993:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14001:6:14",
														"nodeType": "YulTypedName",
														"src": "14001:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14012:4:14",
														"nodeType": "YulTypedName",
														"src": "14012:4:14",
														"type": ""
													}
												],
												"src": "13865:438:14"
											},
											{
												"body": {
													"nativeSrc": "14415:63:14",
													"nodeType": "YulBlock",
													"src": "14415:63:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14437:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "14437:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14445:1:14",
																				"nodeType": "YulLiteral",
																				"src": "14445:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14433:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14433:3:14"
																		},
																		"nativeSrc": "14433:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14433:14:14"
																	},
																	{
																		"hexValue": "4e6f20636c61696d61626c6520616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "14449:21:14",
																		"nodeType": "YulLiteral",
																		"src": "14449:21:14",
																		"type": "",
																		"value": "No claimable amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14426:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14426:6:14"
																},
																"nativeSrc": "14426:45:14",
																"nodeType": "YulFunctionCall",
																"src": "14426:45:14"
															},
															"nativeSrc": "14426:45:14",
															"nodeType": "YulExpressionStatement",
															"src": "14426:45:14"
														}
													]
												},
												"name": "store_literal_in_memory_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf",
												"nativeSrc": "14309:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14407:6:14",
														"nodeType": "YulTypedName",
														"src": "14407:6:14",
														"type": ""
													}
												],
												"src": "14309:169:14"
											},
											{
												"body": {
													"nativeSrc": "14630:220:14",
													"nodeType": "YulBlock",
													"src": "14630:220:14",
													"statements": [
														{
															"nativeSrc": "14640:74:14",
															"nodeType": "YulAssignment",
															"src": "14640:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14706:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "14706:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14711:2:14",
																		"nodeType": "YulLiteral",
																		"src": "14711:2:14",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14647:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "14647:58:14"
																},
																"nativeSrc": "14647:67:14",
																"nodeType": "YulFunctionCall",
																"src": "14647:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14640:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14640:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14812:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "14812:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf",
																	"nativeSrc": "14723:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "14723:88:14"
																},
																"nativeSrc": "14723:93:14",
																"nodeType": "YulFunctionCall",
																"src": "14723:93:14"
															},
															"nativeSrc": "14723:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "14723:93:14"
														},
														{
															"nativeSrc": "14825:19:14",
															"nodeType": "YulAssignment",
															"src": "14825:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14836:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "14836:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14841:2:14",
																		"nodeType": "YulLiteral",
																		"src": "14841:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14832:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14832:3:14"
																},
																"nativeSrc": "14832:12:14",
																"nodeType": "YulFunctionCall",
																"src": "14832:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14825:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14825:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14484:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14618:3:14",
														"nodeType": "YulTypedName",
														"src": "14618:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14626:3:14",
														"nodeType": "YulTypedName",
														"src": "14626:3:14",
														"type": ""
													}
												],
												"src": "14484:366:14"
											},
											{
												"body": {
													"nativeSrc": "15027:248:14",
													"nodeType": "YulBlock",
													"src": "15027:248:14",
													"statements": [
														{
															"nativeSrc": "15037:26:14",
															"nodeType": "YulAssignment",
															"src": "15037:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15049:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "15049:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15060:2:14",
																		"nodeType": "YulLiteral",
																		"src": "15060:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15045:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15045:3:14"
																},
																"nativeSrc": "15045:18:14",
																"nodeType": "YulFunctionCall",
																"src": "15045:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15037:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "15037:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15084:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "15084:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15095:1:14",
																				"nodeType": "YulLiteral",
																				"src": "15095:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15080:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "15080:3:14"
																		},
																		"nativeSrc": "15080:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15080:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15103:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "15103:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15109:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "15109:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15099:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "15099:3:14"
																		},
																		"nativeSrc": "15099:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15099:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15073:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "15073:6:14"
																},
																"nativeSrc": "15073:47:14",
																"nodeType": "YulFunctionCall",
																"src": "15073:47:14"
															},
															"nativeSrc": "15073:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "15073:47:14"
														},
														{
															"nativeSrc": "15129:139:14",
															"nodeType": "YulAssignment",
															"src": "15129:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15263:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "15263:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15137:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "15137:124:14"
																},
																"nativeSrc": "15137:131:14",
																"nodeType": "YulFunctionCall",
																"src": "15137:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15129:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "15129:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14856:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15007:9:14",
														"nodeType": "YulTypedName",
														"src": "15007:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15022:4:14",
														"nodeType": "YulTypedName",
														"src": "15022:4:14",
														"type": ""
													}
												],
												"src": "14856:419:14"
											},
											{
												"body": {
													"nativeSrc": "15387:69:14",
													"nodeType": "YulBlock",
													"src": "15387:69:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15409:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "15409:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15417:1:14",
																				"nodeType": "YulLiteral",
																				"src": "15417:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15405:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "15405:3:14"
																		},
																		"nativeSrc": "15405:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15405:14:14"
																	},
																	{
																		"hexValue": "496e73756666696369656e742066756e647320696e206a6172",
																		"kind": "string",
																		"nativeSrc": "15421:27:14",
																		"nodeType": "YulLiteral",
																		"src": "15421:27:14",
																		"type": "",
																		"value": "Insufficient funds in jar"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15398:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "15398:6:14"
																},
																"nativeSrc": "15398:51:14",
																"nodeType": "YulFunctionCall",
																"src": "15398:51:14"
															},
															"nativeSrc": "15398:51:14",
															"nodeType": "YulExpressionStatement",
															"src": "15398:51:14"
														}
													]
												},
												"name": "store_literal_in_memory_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d",
												"nativeSrc": "15281:175:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15379:6:14",
														"nodeType": "YulTypedName",
														"src": "15379:6:14",
														"type": ""
													}
												],
												"src": "15281:175:14"
											},
											{
												"body": {
													"nativeSrc": "15608:220:14",
													"nodeType": "YulBlock",
													"src": "15608:220:14",
													"statements": [
														{
															"nativeSrc": "15618:74:14",
															"nodeType": "YulAssignment",
															"src": "15618:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15684:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "15684:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15689:2:14",
																		"nodeType": "YulLiteral",
																		"src": "15689:2:14",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15625:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "15625:58:14"
																},
																"nativeSrc": "15625:67:14",
																"nodeType": "YulFunctionCall",
																"src": "15625:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15618:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15618:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15790:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "15790:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d",
																	"nativeSrc": "15701:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "15701:88:14"
																},
																"nativeSrc": "15701:93:14",
																"nodeType": "YulFunctionCall",
																"src": "15701:93:14"
															},
															"nativeSrc": "15701:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "15701:93:14"
														},
														{
															"nativeSrc": "15803:19:14",
															"nodeType": "YulAssignment",
															"src": "15803:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15814:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "15814:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15819:2:14",
																		"nodeType": "YulLiteral",
																		"src": "15819:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15810:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15810:3:14"
																},
																"nativeSrc": "15810:12:14",
																"nodeType": "YulFunctionCall",
																"src": "15810:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15803:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15803:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15462:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15596:3:14",
														"nodeType": "YulTypedName",
														"src": "15596:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15604:3:14",
														"nodeType": "YulTypedName",
														"src": "15604:3:14",
														"type": ""
													}
												],
												"src": "15462:366:14"
											},
											{
												"body": {
													"nativeSrc": "16005:248:14",
													"nodeType": "YulBlock",
													"src": "16005:248:14",
													"statements": [
														{
															"nativeSrc": "16015:26:14",
															"nodeType": "YulAssignment",
															"src": "16015:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16027:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "16027:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16038:2:14",
																		"nodeType": "YulLiteral",
																		"src": "16038:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16023:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16023:3:14"
																},
																"nativeSrc": "16023:18:14",
																"nodeType": "YulFunctionCall",
																"src": "16023:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16015:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "16015:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16062:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "16062:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16073:1:14",
																				"nodeType": "YulLiteral",
																				"src": "16073:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16058:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "16058:3:14"
																		},
																		"nativeSrc": "16058:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16058:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16081:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "16081:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16087:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "16087:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16077:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "16077:3:14"
																		},
																		"nativeSrc": "16077:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16077:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16051:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "16051:6:14"
																},
																"nativeSrc": "16051:47:14",
																"nodeType": "YulFunctionCall",
																"src": "16051:47:14"
															},
															"nativeSrc": "16051:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "16051:47:14"
														},
														{
															"nativeSrc": "16107:139:14",
															"nodeType": "YulAssignment",
															"src": "16107:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16241:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "16241:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16115:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "16115:124:14"
																},
																"nativeSrc": "16115:131:14",
																"nodeType": "YulFunctionCall",
																"src": "16115:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16107:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "16107:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15834:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15985:9:14",
														"nodeType": "YulTypedName",
														"src": "15985:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16000:4:14",
														"nodeType": "YulTypedName",
														"src": "16000:4:14",
														"type": ""
													}
												],
												"src": "15834:419:14"
											},
											{
												"body": {
													"nativeSrc": "16304:149:14",
													"nodeType": "YulBlock",
													"src": "16304:149:14",
													"statements": [
														{
															"nativeSrc": "16314:25:14",
															"nodeType": "YulAssignment",
															"src": "16314:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16337:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "16337:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16319:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "16319:17:14"
																},
																"nativeSrc": "16319:20:14",
																"nodeType": "YulFunctionCall",
																"src": "16319:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16314:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "16314:1:14"
																}
															]
														},
														{
															"nativeSrc": "16348:25:14",
															"nodeType": "YulAssignment",
															"src": "16348:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16371:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "16371:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16353:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "16353:17:14"
																},
																"nativeSrc": "16353:20:14",
																"nodeType": "YulFunctionCall",
																"src": "16353:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16348:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "16348:1:14"
																}
															]
														},
														{
															"nativeSrc": "16382:17:14",
															"nodeType": "YulAssignment",
															"src": "16382:17:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16394:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "16394:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16397:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "16397:1:14"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "16390:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16390:3:14"
																},
																"nativeSrc": "16390:9:14",
																"nodeType": "YulFunctionCall",
																"src": "16390:9:14"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "16382:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "16382:4:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16424:22:14",
																"nodeType": "YulBlock",
																"src": "16424:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16426:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "16426:16:14"
																			},
																			"nativeSrc": "16426:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "16426:18:14"
																		},
																		"nativeSrc": "16426:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "16426:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "16415:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "16415:4:14"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "16421:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "16421:1:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16412:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "16412:2:14"
																},
																"nativeSrc": "16412:11:14",
																"nodeType": "YulFunctionCall",
																"src": "16412:11:14"
															},
															"nativeSrc": "16409:37:14",
															"nodeType": "YulIf",
															"src": "16409:37:14"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "16259:194:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16290:1:14",
														"nodeType": "YulTypedName",
														"src": "16290:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16293:1:14",
														"nodeType": "YulTypedName",
														"src": "16293:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "16299:4:14",
														"nodeType": "YulTypedName",
														"src": "16299:4:14",
														"type": ""
													}
												],
												"src": "16259:194:14"
											},
											{
												"body": {
													"nativeSrc": "16572:34:14",
													"nodeType": "YulBlock",
													"src": "16572:34:14",
													"statements": [
														{
															"nativeSrc": "16582:18:14",
															"nodeType": "YulAssignment",
															"src": "16582:18:14",
															"value": {
																"name": "pos",
																"nativeSrc": "16597:3:14",
																"nodeType": "YulIdentifier",
																"src": "16597:3:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "16582:11:14",
																	"nodeType": "YulIdentifier",
																	"src": "16582:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "16459:147:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16544:3:14",
														"nodeType": "YulTypedName",
														"src": "16544:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "16549:6:14",
														"nodeType": "YulTypedName",
														"src": "16549:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "16560:11:14",
														"nodeType": "YulTypedName",
														"src": "16560:11:14",
														"type": ""
													}
												],
												"src": "16459:147:14"
											},
											{
												"body": {
													"nativeSrc": "16718:8:14",
													"nodeType": "YulBlock",
													"src": "16718:8:14",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "16612:114:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16710:6:14",
														"nodeType": "YulTypedName",
														"src": "16710:6:14",
														"type": ""
													}
												],
												"src": "16612:114:14"
											},
											{
												"body": {
													"nativeSrc": "16895:235:14",
													"nodeType": "YulBlock",
													"src": "16895:235:14",
													"statements": [
														{
															"nativeSrc": "16905:90:14",
															"nodeType": "YulAssignment",
															"src": "16905:90:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16988:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "16988:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16993:1:14",
																		"nodeType": "YulLiteral",
																		"src": "16993:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "16912:75:14",
																	"nodeType": "YulIdentifier",
																	"src": "16912:75:14"
																},
																"nativeSrc": "16912:83:14",
																"nodeType": "YulFunctionCall",
																"src": "16912:83:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16905:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16905:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17093:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17093:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "17004:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "17004:88:14"
																},
																"nativeSrc": "17004:93:14",
																"nodeType": "YulFunctionCall",
																"src": "17004:93:14"
															},
															"nativeSrc": "17004:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "17004:93:14"
														},
														{
															"nativeSrc": "17106:18:14",
															"nodeType": "YulAssignment",
															"src": "17106:18:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17117:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17117:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17122:1:14",
																		"nodeType": "YulLiteral",
																		"src": "17122:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17113:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17113:3:14"
																},
																"nativeSrc": "17113:11:14",
																"nodeType": "YulFunctionCall",
																"src": "17113:11:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17106:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17106:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "16732:398:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16883:3:14",
														"nodeType": "YulTypedName",
														"src": "16883:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16891:3:14",
														"nodeType": "YulTypedName",
														"src": "16891:3:14",
														"type": ""
													}
												],
												"src": "16732:398:14"
											},
											{
												"body": {
													"nativeSrc": "17324:191:14",
													"nodeType": "YulBlock",
													"src": "17324:191:14",
													"statements": [
														{
															"nativeSrc": "17335:154:14",
															"nodeType": "YulAssignment",
															"src": "17335:154:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17485:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17485:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "17342:141:14",
																	"nodeType": "YulIdentifier",
																	"src": "17342:141:14"
																},
																"nativeSrc": "17342:147:14",
																"nodeType": "YulFunctionCall",
																"src": "17342:147:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17335:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17335:3:14"
																}
															]
														},
														{
															"nativeSrc": "17499:10:14",
															"nodeType": "YulAssignment",
															"src": "17499:10:14",
															"value": {
																"name": "pos",
																"nativeSrc": "17506:3:14",
																"nodeType": "YulIdentifier",
																"src": "17506:3:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17499:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17499:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "17136:379:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17311:3:14",
														"nodeType": "YulTypedName",
														"src": "17311:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17320:3:14",
														"nodeType": "YulTypedName",
														"src": "17320:3:14",
														"type": ""
													}
												],
												"src": "17136:379:14"
											},
											{
												"body": {
													"nativeSrc": "17627:65:14",
													"nodeType": "YulBlock",
													"src": "17627:65:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17649:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "17649:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17657:1:14",
																				"nodeType": "YulLiteral",
																				"src": "17657:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17645:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "17645:3:14"
																		},
																		"nativeSrc": "17645:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17645:14:14"
																	},
																	{
																		"hexValue": "4574686572207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "17661:23:14",
																		"nodeType": "YulLiteral",
																		"src": "17661:23:14",
																		"type": "",
																		"value": "Ether transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17638:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "17638:6:14"
																},
																"nativeSrc": "17638:47:14",
																"nodeType": "YulFunctionCall",
																"src": "17638:47:14"
															},
															"nativeSrc": "17638:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "17638:47:14"
														}
													]
												},
												"name": "store_literal_in_memory_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be",
												"nativeSrc": "17521:171:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17619:6:14",
														"nodeType": "YulTypedName",
														"src": "17619:6:14",
														"type": ""
													}
												],
												"src": "17521:171:14"
											},
											{
												"body": {
													"nativeSrc": "17844:220:14",
													"nodeType": "YulBlock",
													"src": "17844:220:14",
													"statements": [
														{
															"nativeSrc": "17854:74:14",
															"nodeType": "YulAssignment",
															"src": "17854:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17920:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17920:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17925:2:14",
																		"nodeType": "YulLiteral",
																		"src": "17925:2:14",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17861:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "17861:58:14"
																},
																"nativeSrc": "17861:67:14",
																"nodeType": "YulFunctionCall",
																"src": "17861:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17854:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17854:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18026:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "18026:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be",
																	"nativeSrc": "17937:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "17937:88:14"
																},
																"nativeSrc": "17937:93:14",
																"nodeType": "YulFunctionCall",
																"src": "17937:93:14"
															},
															"nativeSrc": "17937:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "17937:93:14"
														},
														{
															"nativeSrc": "18039:19:14",
															"nodeType": "YulAssignment",
															"src": "18039:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18050:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "18050:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18055:2:14",
																		"nodeType": "YulLiteral",
																		"src": "18055:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18046:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18046:3:14"
																},
																"nativeSrc": "18046:12:14",
																"nodeType": "YulFunctionCall",
																"src": "18046:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18039:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18039:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17698:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17832:3:14",
														"nodeType": "YulTypedName",
														"src": "17832:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17840:3:14",
														"nodeType": "YulTypedName",
														"src": "17840:3:14",
														"type": ""
													}
												],
												"src": "17698:366:14"
											},
											{
												"body": {
													"nativeSrc": "18241:248:14",
													"nodeType": "YulBlock",
													"src": "18241:248:14",
													"statements": [
														{
															"nativeSrc": "18251:26:14",
															"nodeType": "YulAssignment",
															"src": "18251:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18263:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "18263:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18274:2:14",
																		"nodeType": "YulLiteral",
																		"src": "18274:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18259:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18259:3:14"
																},
																"nativeSrc": "18259:18:14",
																"nodeType": "YulFunctionCall",
																"src": "18259:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18251:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "18251:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18298:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "18298:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18309:1:14",
																				"nodeType": "YulLiteral",
																				"src": "18309:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18294:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18294:3:14"
																		},
																		"nativeSrc": "18294:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18294:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18317:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "18317:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18323:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "18323:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18313:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18313:3:14"
																		},
																		"nativeSrc": "18313:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18313:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18287:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "18287:6:14"
																},
																"nativeSrc": "18287:47:14",
																"nodeType": "YulFunctionCall",
																"src": "18287:47:14"
															},
															"nativeSrc": "18287:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "18287:47:14"
														},
														{
															"nativeSrc": "18343:139:14",
															"nodeType": "YulAssignment",
															"src": "18343:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18477:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "18477:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18351:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "18351:124:14"
																},
																"nativeSrc": "18351:131:14",
																"nodeType": "YulFunctionCall",
																"src": "18351:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18343:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "18343:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18070:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18221:9:14",
														"nodeType": "YulTypedName",
														"src": "18221:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18236:4:14",
														"nodeType": "YulTypedName",
														"src": "18236:4:14",
														"type": ""
													}
												],
												"src": "18070:419:14"
											},
											{
												"body": {
													"nativeSrc": "18601:66:14",
													"nodeType": "YulBlock",
													"src": "18601:66:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18623:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "18623:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18631:1:14",
																				"nodeType": "YulLiteral",
																				"src": "18631:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18619:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18619:3:14"
																		},
																		"nativeSrc": "18619:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18619:14:14"
																	},
																	{
																		"hexValue": "496e636f727265637420457468657220616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "18635:24:14",
																		"nodeType": "YulLiteral",
																		"src": "18635:24:14",
																		"type": "",
																		"value": "Incorrect Ether amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18612:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "18612:6:14"
																},
																"nativeSrc": "18612:48:14",
																"nodeType": "YulFunctionCall",
																"src": "18612:48:14"
															},
															"nativeSrc": "18612:48:14",
															"nodeType": "YulExpressionStatement",
															"src": "18612:48:14"
														}
													]
												},
												"name": "store_literal_in_memory_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375",
												"nativeSrc": "18495:172:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18593:6:14",
														"nodeType": "YulTypedName",
														"src": "18593:6:14",
														"type": ""
													}
												],
												"src": "18495:172:14"
											},
											{
												"body": {
													"nativeSrc": "18819:220:14",
													"nodeType": "YulBlock",
													"src": "18819:220:14",
													"statements": [
														{
															"nativeSrc": "18829:74:14",
															"nodeType": "YulAssignment",
															"src": "18829:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18895:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "18895:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18900:2:14",
																		"nodeType": "YulLiteral",
																		"src": "18900:2:14",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18836:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "18836:58:14"
																},
																"nativeSrc": "18836:67:14",
																"nodeType": "YulFunctionCall",
																"src": "18836:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18829:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18829:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19001:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "19001:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375",
																	"nativeSrc": "18912:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "18912:88:14"
																},
																"nativeSrc": "18912:93:14",
																"nodeType": "YulFunctionCall",
																"src": "18912:93:14"
															},
															"nativeSrc": "18912:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "18912:93:14"
														},
														{
															"nativeSrc": "19014:19:14",
															"nodeType": "YulAssignment",
															"src": "19014:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19025:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "19025:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19030:2:14",
																		"nodeType": "YulLiteral",
																		"src": "19030:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19021:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19021:3:14"
																},
																"nativeSrc": "19021:12:14",
																"nodeType": "YulFunctionCall",
																"src": "19021:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19014:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19014:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18673:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18807:3:14",
														"nodeType": "YulTypedName",
														"src": "18807:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18815:3:14",
														"nodeType": "YulTypedName",
														"src": "18815:3:14",
														"type": ""
													}
												],
												"src": "18673:366:14"
											},
											{
												"body": {
													"nativeSrc": "19216:248:14",
													"nodeType": "YulBlock",
													"src": "19216:248:14",
													"statements": [
														{
															"nativeSrc": "19226:26:14",
															"nodeType": "YulAssignment",
															"src": "19226:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19238:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "19238:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19249:2:14",
																		"nodeType": "YulLiteral",
																		"src": "19249:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19234:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19234:3:14"
																},
																"nativeSrc": "19234:18:14",
																"nodeType": "YulFunctionCall",
																"src": "19234:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19226:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "19226:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19273:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "19273:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19284:1:14",
																				"nodeType": "YulLiteral",
																				"src": "19284:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19269:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "19269:3:14"
																		},
																		"nativeSrc": "19269:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19269:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19292:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "19292:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19298:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "19298:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19288:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "19288:3:14"
																		},
																		"nativeSrc": "19288:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19288:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19262:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "19262:6:14"
																},
																"nativeSrc": "19262:47:14",
																"nodeType": "YulFunctionCall",
																"src": "19262:47:14"
															},
															"nativeSrc": "19262:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "19262:47:14"
														},
														{
															"nativeSrc": "19318:139:14",
															"nodeType": "YulAssignment",
															"src": "19318:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19452:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "19452:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19326:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "19326:124:14"
																},
																"nativeSrc": "19326:131:14",
																"nodeType": "YulFunctionCall",
																"src": "19326:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19318:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "19318:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19045:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19196:9:14",
														"nodeType": "YulTypedName",
														"src": "19196:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19211:4:14",
														"nodeType": "YulTypedName",
														"src": "19211:4:14",
														"type": ""
													}
												],
												"src": "19045:419:14"
											},
											{
												"body": {
													"nativeSrc": "19576:121:14",
													"nodeType": "YulBlock",
													"src": "19576:121:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19598:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "19598:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19606:1:14",
																				"nodeType": "YulLiteral",
																				"src": "19606:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19594:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "19594:3:14"
																		},
																		"nativeSrc": "19594:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19594:14:14"
																	},
																	{
																		"hexValue": "4465706f73697420616d6f756e74206d75737420626520677265617465722074",
																		"kind": "string",
																		"nativeSrc": "19610:34:14",
																		"nodeType": "YulLiteral",
																		"src": "19610:34:14",
																		"type": "",
																		"value": "Deposit amount must be greater t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19587:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "19587:6:14"
																},
																"nativeSrc": "19587:58:14",
																"nodeType": "YulFunctionCall",
																"src": "19587:58:14"
															},
															"nativeSrc": "19587:58:14",
															"nodeType": "YulExpressionStatement",
															"src": "19587:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19666:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "19666:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19674:2:14",
																				"nodeType": "YulLiteral",
																				"src": "19674:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19662:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "19662:3:14"
																		},
																		"nativeSrc": "19662:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19662:15:14"
																	},
																	{
																		"hexValue": "68616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "19679:10:14",
																		"nodeType": "YulLiteral",
																		"src": "19679:10:14",
																		"type": "",
																		"value": "han zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19655:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "19655:6:14"
																},
																"nativeSrc": "19655:35:14",
																"nodeType": "YulFunctionCall",
																"src": "19655:35:14"
															},
															"nativeSrc": "19655:35:14",
															"nodeType": "YulExpressionStatement",
															"src": "19655:35:14"
														}
													]
												},
												"name": "store_literal_in_memory_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71",
												"nativeSrc": "19470:227:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19568:6:14",
														"nodeType": "YulTypedName",
														"src": "19568:6:14",
														"type": ""
													}
												],
												"src": "19470:227:14"
											},
											{
												"body": {
													"nativeSrc": "19849:220:14",
													"nodeType": "YulBlock",
													"src": "19849:220:14",
													"statements": [
														{
															"nativeSrc": "19859:74:14",
															"nodeType": "YulAssignment",
															"src": "19859:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19925:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "19925:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19930:2:14",
																		"nodeType": "YulLiteral",
																		"src": "19930:2:14",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19866:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "19866:58:14"
																},
																"nativeSrc": "19866:67:14",
																"nodeType": "YulFunctionCall",
																"src": "19866:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19859:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19859:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20031:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "20031:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71",
																	"nativeSrc": "19942:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "19942:88:14"
																},
																"nativeSrc": "19942:93:14",
																"nodeType": "YulFunctionCall",
																"src": "19942:93:14"
															},
															"nativeSrc": "19942:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "19942:93:14"
														},
														{
															"nativeSrc": "20044:19:14",
															"nodeType": "YulAssignment",
															"src": "20044:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20055:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "20055:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20060:2:14",
																		"nodeType": "YulLiteral",
																		"src": "20060:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20051:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "20051:3:14"
																},
																"nativeSrc": "20051:12:14",
																"nodeType": "YulFunctionCall",
																"src": "20051:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20044:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "20044:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19703:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19837:3:14",
														"nodeType": "YulTypedName",
														"src": "19837:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19845:3:14",
														"nodeType": "YulTypedName",
														"src": "19845:3:14",
														"type": ""
													}
												],
												"src": "19703:366:14"
											},
											{
												"body": {
													"nativeSrc": "20246:248:14",
													"nodeType": "YulBlock",
													"src": "20246:248:14",
													"statements": [
														{
															"nativeSrc": "20256:26:14",
															"nodeType": "YulAssignment",
															"src": "20256:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20268:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "20268:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20279:2:14",
																		"nodeType": "YulLiteral",
																		"src": "20279:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20264:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "20264:3:14"
																},
																"nativeSrc": "20264:18:14",
																"nodeType": "YulFunctionCall",
																"src": "20264:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20256:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "20256:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20303:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "20303:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20314:1:14",
																				"nodeType": "YulLiteral",
																				"src": "20314:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20299:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "20299:3:14"
																		},
																		"nativeSrc": "20299:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "20299:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20322:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "20322:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20328:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "20328:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20318:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "20318:3:14"
																		},
																		"nativeSrc": "20318:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "20318:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20292:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "20292:6:14"
																},
																"nativeSrc": "20292:47:14",
																"nodeType": "YulFunctionCall",
																"src": "20292:47:14"
															},
															"nativeSrc": "20292:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "20292:47:14"
														},
														{
															"nativeSrc": "20348:139:14",
															"nodeType": "YulAssignment",
															"src": "20348:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20482:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "20482:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20356:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "20356:124:14"
																},
																"nativeSrc": "20356:131:14",
																"nodeType": "YulFunctionCall",
																"src": "20356:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20348:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "20348:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20075:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20226:9:14",
														"nodeType": "YulTypedName",
														"src": "20226:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20241:4:14",
														"nodeType": "YulTypedName",
														"src": "20241:4:14",
														"type": ""
													}
												],
												"src": "20075:419:14"
											},
											{
												"body": {
													"nativeSrc": "20553:32:14",
													"nodeType": "YulBlock",
													"src": "20553:32:14",
													"statements": [
														{
															"nativeSrc": "20563:16:14",
															"nodeType": "YulAssignment",
															"src": "20563:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "20574:5:14",
																"nodeType": "YulIdentifier",
																"src": "20574:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "20563:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "20563:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "20500:85:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20535:5:14",
														"nodeType": "YulTypedName",
														"src": "20535:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "20545:7:14",
														"nodeType": "YulTypedName",
														"src": "20545:7:14",
														"type": ""
													}
												],
												"src": "20500:85:14"
											},
											{
												"body": {
													"nativeSrc": "20658:89:14",
													"nodeType": "YulBlock",
													"src": "20658:89:14",
													"statements": [
														{
															"nativeSrc": "20668:73:14",
															"nodeType": "YulAssignment",
															"src": "20668:73:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "20733:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "20733:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "20707:25:14",
																					"nodeType": "YulIdentifier",
																					"src": "20707:25:14"
																				},
																				"nativeSrc": "20707:32:14",
																				"nodeType": "YulFunctionCall",
																				"src": "20707:32:14"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "20698:8:14",
																			"nodeType": "YulIdentifier",
																			"src": "20698:8:14"
																		},
																		"nativeSrc": "20698:42:14",
																		"nodeType": "YulFunctionCall",
																		"src": "20698:42:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nativeSrc": "20681:16:14",
																	"nodeType": "YulIdentifier",
																	"src": "20681:16:14"
																},
																"nativeSrc": "20681:60:14",
																"nodeType": "YulFunctionCall",
																"src": "20681:60:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "20668:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "20668:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nativeSrc": "20591:156:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20638:5:14",
														"nodeType": "YulTypedName",
														"src": "20638:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "20648:9:14",
														"nodeType": "YulTypedName",
														"src": "20648:9:14",
														"type": ""
													}
												],
												"src": "20591:156:14"
											},
											{
												"body": {
													"nativeSrc": "20825:73:14",
													"nodeType": "YulBlock",
													"src": "20825:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20842:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "20842:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "20885:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "20885:5:14"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nativeSrc": "20847:37:14",
																			"nodeType": "YulIdentifier",
																			"src": "20847:37:14"
																		},
																		"nativeSrc": "20847:44:14",
																		"nodeType": "YulFunctionCall",
																		"src": "20847:44:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20835:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "20835:6:14"
																},
																"nativeSrc": "20835:57:14",
																"nodeType": "YulFunctionCall",
																"src": "20835:57:14"
															},
															"nativeSrc": "20835:57:14",
															"nodeType": "YulExpressionStatement",
															"src": "20835:57:14"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nativeSrc": "20753:145:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20813:5:14",
														"nodeType": "YulTypedName",
														"src": "20813:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "20820:3:14",
														"nodeType": "YulTypedName",
														"src": "20820:3:14",
														"type": ""
													}
												],
												"src": "20753:145:14"
											},
											{
												"body": {
													"nativeSrc": "21009:131:14",
													"nodeType": "YulBlock",
													"src": "21009:131:14",
													"statements": [
														{
															"nativeSrc": "21019:26:14",
															"nodeType": "YulAssignment",
															"src": "21019:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21031:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "21031:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21042:2:14",
																		"nodeType": "YulLiteral",
																		"src": "21042:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21027:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "21027:3:14"
																},
																"nativeSrc": "21027:18:14",
																"nodeType": "YulFunctionCall",
																"src": "21027:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21019:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "21019:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21106:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "21106:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21119:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "21119:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21130:1:14",
																				"nodeType": "YulLiteral",
																				"src": "21130:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21115:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "21115:3:14"
																		},
																		"nativeSrc": "21115:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "21115:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nativeSrc": "21055:50:14",
																	"nodeType": "YulIdentifier",
																	"src": "21055:50:14"
																},
																"nativeSrc": "21055:78:14",
																"nodeType": "YulFunctionCall",
																"src": "21055:78:14"
															},
															"nativeSrc": "21055:78:14",
															"nodeType": "YulExpressionStatement",
															"src": "21055:78:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "20904:236:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20981:9:14",
														"nodeType": "YulTypedName",
														"src": "20981:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20993:6:14",
														"nodeType": "YulTypedName",
														"src": "20993:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21004:4:14",
														"nodeType": "YulTypedName",
														"src": "21004:4:14",
														"type": ""
													}
												],
												"src": "20904:236:14"
											},
											{
												"body": {
													"nativeSrc": "21174:152:14",
													"nodeType": "YulBlock",
													"src": "21174:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21191:1:14",
																		"nodeType": "YulLiteral",
																		"src": "21191:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21194:77:14",
																		"nodeType": "YulLiteral",
																		"src": "21194:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21184:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "21184:6:14"
																},
																"nativeSrc": "21184:88:14",
																"nodeType": "YulFunctionCall",
																"src": "21184:88:14"
															},
															"nativeSrc": "21184:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "21184:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21288:1:14",
																		"nodeType": "YulLiteral",
																		"src": "21288:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21291:4:14",
																		"nodeType": "YulLiteral",
																		"src": "21291:4:14",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21281:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "21281:6:14"
																},
																"nativeSrc": "21281:15:14",
																"nodeType": "YulFunctionCall",
																"src": "21281:15:14"
															},
															"nativeSrc": "21281:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "21281:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21312:1:14",
																		"nodeType": "YulLiteral",
																		"src": "21312:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21315:4:14",
																		"nodeType": "YulLiteral",
																		"src": "21315:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "21305:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "21305:6:14"
																},
																"nativeSrc": "21305:15:14",
																"nodeType": "YulFunctionCall",
																"src": "21305:15:14"
															},
															"nativeSrc": "21305:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "21305:15:14"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "21146:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "21146:180:14"
											},
											{
												"body": {
													"nativeSrc": "21383:269:14",
													"nodeType": "YulBlock",
													"src": "21383:269:14",
													"statements": [
														{
															"nativeSrc": "21393:22:14",
															"nodeType": "YulAssignment",
															"src": "21393:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "21407:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "21407:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21413:1:14",
																		"nodeType": "YulLiteral",
																		"src": "21413:1:14",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "21403:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "21403:3:14"
																},
																"nativeSrc": "21403:12:14",
																"nodeType": "YulFunctionCall",
																"src": "21403:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "21393:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "21393:6:14"
																}
															]
														},
														{
															"nativeSrc": "21424:38:14",
															"nodeType": "YulVariableDeclaration",
															"src": "21424:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "21454:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "21454:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21460:1:14",
																		"nodeType": "YulLiteral",
																		"src": "21460:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "21450:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "21450:3:14"
																},
																"nativeSrc": "21450:12:14",
																"nodeType": "YulFunctionCall",
																"src": "21450:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "21428:18:14",
																	"nodeType": "YulTypedName",
																	"src": "21428:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21501:51:14",
																"nodeType": "YulBlock",
																"src": "21501:51:14",
																"statements": [
																	{
																		"nativeSrc": "21515:27:14",
																		"nodeType": "YulAssignment",
																		"src": "21515:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "21529:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "21529:6:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "21537:4:14",
																					"nodeType": "YulLiteral",
																					"src": "21537:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "21525:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "21525:3:14"
																			},
																			"nativeSrc": "21525:17:14",
																			"nodeType": "YulFunctionCall",
																			"src": "21525:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "21515:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "21515:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "21481:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "21481:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "21474:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "21474:6:14"
																},
																"nativeSrc": "21474:26:14",
																"nodeType": "YulFunctionCall",
																"src": "21474:26:14"
															},
															"nativeSrc": "21471:81:14",
															"nodeType": "YulIf",
															"src": "21471:81:14"
														},
														{
															"body": {
																"nativeSrc": "21604:42:14",
																"nodeType": "YulBlock",
																"src": "21604:42:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "21618:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "21618:16:14"
																			},
																			"nativeSrc": "21618:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "21618:18:14"
																		},
																		"nativeSrc": "21618:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "21618:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "21568:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "21568:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "21591:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "21591:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21599:2:14",
																				"nodeType": "YulLiteral",
																				"src": "21599:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "21588:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "21588:2:14"
																		},
																		"nativeSrc": "21588:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "21588:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "21565:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "21565:2:14"
																},
																"nativeSrc": "21565:38:14",
																"nodeType": "YulFunctionCall",
																"src": "21565:38:14"
															},
															"nativeSrc": "21562:84:14",
															"nodeType": "YulIf",
															"src": "21562:84:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "21332:320:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "21367:4:14",
														"nodeType": "YulTypedName",
														"src": "21367:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "21376:6:14",
														"nodeType": "YulTypedName",
														"src": "21376:6:14",
														"type": ""
													}
												],
												"src": "21332:320:14"
											},
											{
												"body": {
													"nativeSrc": "21700:48:14",
													"nodeType": "YulBlock",
													"src": "21700:48:14",
													"statements": [
														{
															"nativeSrc": "21710:32:14",
															"nodeType": "YulAssignment",
															"src": "21710:32:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "21735:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "21735:5:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "21728:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "21728:6:14"
																		},
																		"nativeSrc": "21728:13:14",
																		"nodeType": "YulFunctionCall",
																		"src": "21728:13:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "21721:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "21721:6:14"
																},
																"nativeSrc": "21721:21:14",
																"nodeType": "YulFunctionCall",
																"src": "21721:21:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "21710:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "21710:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "21658:90:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21682:5:14",
														"nodeType": "YulTypedName",
														"src": "21682:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "21692:7:14",
														"nodeType": "YulTypedName",
														"src": "21692:7:14",
														"type": ""
													}
												],
												"src": "21658:90:14"
											},
											{
												"body": {
													"nativeSrc": "21794:76:14",
													"nodeType": "YulBlock",
													"src": "21794:76:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "21848:16:14",
																"nodeType": "YulBlock",
																"src": "21848:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "21857:1:14",
																					"nodeType": "YulLiteral",
																					"src": "21857:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "21860:1:14",
																					"nodeType": "YulLiteral",
																					"src": "21860:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "21850:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "21850:6:14"
																			},
																			"nativeSrc": "21850:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "21850:12:14"
																		},
																		"nativeSrc": "21850:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "21850:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "21817:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "21817:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "21839:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "21839:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "21824:14:14",
																					"nodeType": "YulIdentifier",
																					"src": "21824:14:14"
																				},
																				"nativeSrc": "21824:21:14",
																				"nodeType": "YulFunctionCall",
																				"src": "21824:21:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "21814:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "21814:2:14"
																		},
																		"nativeSrc": "21814:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "21814:32:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "21807:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "21807:6:14"
																},
																"nativeSrc": "21807:40:14",
																"nodeType": "YulFunctionCall",
																"src": "21807:40:14"
															},
															"nativeSrc": "21804:60:14",
															"nodeType": "YulIf",
															"src": "21804:60:14"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "21754:116:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21787:5:14",
														"nodeType": "YulTypedName",
														"src": "21787:5:14",
														"type": ""
													}
												],
												"src": "21754:116:14"
											},
											{
												"body": {
													"nativeSrc": "21936:77:14",
													"nodeType": "YulBlock",
													"src": "21936:77:14",
													"statements": [
														{
															"nativeSrc": "21946:22:14",
															"nodeType": "YulAssignment",
															"src": "21946:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "21961:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "21961:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "21955:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "21955:5:14"
																},
																"nativeSrc": "21955:13:14",
																"nodeType": "YulFunctionCall",
																"src": "21955:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "21946:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "21946:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "22001:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "22001:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "21977:23:14",
																	"nodeType": "YulIdentifier",
																	"src": "21977:23:14"
																},
																"nativeSrc": "21977:30:14",
																"nodeType": "YulFunctionCall",
																"src": "21977:30:14"
															},
															"nativeSrc": "21977:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "21977:30:14"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "21876:137:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "21914:6:14",
														"nodeType": "YulTypedName",
														"src": "21914:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "21922:3:14",
														"nodeType": "YulTypedName",
														"src": "21922:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "21930:5:14",
														"nodeType": "YulTypedName",
														"src": "21930:5:14",
														"type": ""
													}
												],
												"src": "21876:137:14"
											},
											{
												"body": {
													"nativeSrc": "22093:271:14",
													"nodeType": "YulBlock",
													"src": "22093:271:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "22139:83:14",
																"nodeType": "YulBlock",
																"src": "22139:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "22141:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "22141:77:14"
																			},
																			"nativeSrc": "22141:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "22141:79:14"
																		},
																		"nativeSrc": "22141:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "22141:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "22114:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "22114:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22123:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "22123:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22110:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "22110:3:14"
																		},
																		"nativeSrc": "22110:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "22110:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22135:2:14",
																		"nodeType": "YulLiteral",
																		"src": "22135:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "22106:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "22106:3:14"
																},
																"nativeSrc": "22106:32:14",
																"nodeType": "YulFunctionCall",
																"src": "22106:32:14"
															},
															"nativeSrc": "22103:119:14",
															"nodeType": "YulIf",
															"src": "22103:119:14"
														},
														{
															"nativeSrc": "22232:125:14",
															"nodeType": "YulBlock",
															"src": "22232:125:14",
															"statements": [
																{
																	"nativeSrc": "22247:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "22247:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "22261:1:14",
																		"nodeType": "YulLiteral",
																		"src": "22261:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "22251:6:14",
																			"nodeType": "YulTypedName",
																			"src": "22251:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "22276:71:14",
																	"nodeType": "YulAssignment",
																	"src": "22276:71:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "22319:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "22319:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "22330:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "22330:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "22315:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "22315:3:14"
																				},
																				"nativeSrc": "22315:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "22315:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "22339:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "22339:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "22286:28:14",
																			"nodeType": "YulIdentifier",
																			"src": "22286:28:14"
																		},
																		"nativeSrc": "22286:61:14",
																		"nodeType": "YulFunctionCall",
																		"src": "22286:61:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "22276:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "22276:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "22019:345:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22063:9:14",
														"nodeType": "YulTypedName",
														"src": "22063:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "22074:7:14",
														"nodeType": "YulTypedName",
														"src": "22074:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "22086:6:14",
														"nodeType": "YulTypedName",
														"src": "22086:6:14",
														"type": ""
													}
												],
												"src": "22019:345:14"
											},
											{
												"body": {
													"nativeSrc": "22476:66:14",
													"nodeType": "YulBlock",
													"src": "22476:66:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22498:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "22498:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22506:1:14",
																				"nodeType": "YulLiteral",
																				"src": "22506:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22494:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "22494:3:14"
																		},
																		"nativeSrc": "22494:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "22494:14:14"
																	},
																	{
																		"hexValue": "43616c6c6572206973206e6f7420616e2061646d696e",
																		"kind": "string",
																		"nativeSrc": "22510:24:14",
																		"nodeType": "YulLiteral",
																		"src": "22510:24:14",
																		"type": "",
																		"value": "Caller is not an admin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22487:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "22487:6:14"
																},
																"nativeSrc": "22487:48:14",
																"nodeType": "YulFunctionCall",
																"src": "22487:48:14"
															},
															"nativeSrc": "22487:48:14",
															"nodeType": "YulExpressionStatement",
															"src": "22487:48:14"
														}
													]
												},
												"name": "store_literal_in_memory_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226",
												"nativeSrc": "22370:172:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22468:6:14",
														"nodeType": "YulTypedName",
														"src": "22468:6:14",
														"type": ""
													}
												],
												"src": "22370:172:14"
											},
											{
												"body": {
													"nativeSrc": "22694:220:14",
													"nodeType": "YulBlock",
													"src": "22694:220:14",
													"statements": [
														{
															"nativeSrc": "22704:74:14",
															"nodeType": "YulAssignment",
															"src": "22704:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22770:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "22770:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22775:2:14",
																		"nodeType": "YulLiteral",
																		"src": "22775:2:14",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22711:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "22711:58:14"
																},
																"nativeSrc": "22711:67:14",
																"nodeType": "YulFunctionCall",
																"src": "22711:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22704:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "22704:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22876:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "22876:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226",
																	"nativeSrc": "22787:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "22787:88:14"
																},
																"nativeSrc": "22787:93:14",
																"nodeType": "YulFunctionCall",
																"src": "22787:93:14"
															},
															"nativeSrc": "22787:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "22787:93:14"
														},
														{
															"nativeSrc": "22889:19:14",
															"nodeType": "YulAssignment",
															"src": "22889:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22900:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "22900:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22905:2:14",
																		"nodeType": "YulLiteral",
																		"src": "22905:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22896:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "22896:3:14"
																},
																"nativeSrc": "22896:12:14",
																"nodeType": "YulFunctionCall",
																"src": "22896:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22889:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "22889:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22548:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22682:3:14",
														"nodeType": "YulTypedName",
														"src": "22682:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22690:3:14",
														"nodeType": "YulTypedName",
														"src": "22690:3:14",
														"type": ""
													}
												],
												"src": "22548:366:14"
											},
											{
												"body": {
													"nativeSrc": "23091:248:14",
													"nodeType": "YulBlock",
													"src": "23091:248:14",
													"statements": [
														{
															"nativeSrc": "23101:26:14",
															"nodeType": "YulAssignment",
															"src": "23101:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23113:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "23113:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23124:2:14",
																		"nodeType": "YulLiteral",
																		"src": "23124:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23109:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "23109:3:14"
																},
																"nativeSrc": "23109:18:14",
																"nodeType": "YulFunctionCall",
																"src": "23109:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23101:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "23101:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23148:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "23148:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23159:1:14",
																				"nodeType": "YulLiteral",
																				"src": "23159:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23144:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "23144:3:14"
																		},
																		"nativeSrc": "23144:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "23144:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23167:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "23167:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23173:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "23173:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23163:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "23163:3:14"
																		},
																		"nativeSrc": "23163:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "23163:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23137:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "23137:6:14"
																},
																"nativeSrc": "23137:47:14",
																"nodeType": "YulFunctionCall",
																"src": "23137:47:14"
															},
															"nativeSrc": "23137:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "23137:47:14"
														},
														{
															"nativeSrc": "23193:139:14",
															"nodeType": "YulAssignment",
															"src": "23193:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23327:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "23327:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23201:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "23201:124:14"
																},
																"nativeSrc": "23201:131:14",
																"nodeType": "YulFunctionCall",
																"src": "23201:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23193:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "23193:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22920:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23071:9:14",
														"nodeType": "YulTypedName",
														"src": "23071:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23086:4:14",
														"nodeType": "YulTypedName",
														"src": "23086:4:14",
														"type": ""
													}
												],
												"src": "22920:419:14"
											},
											{
												"body": {
													"nativeSrc": "23451:115:14",
													"nodeType": "YulBlock",
													"src": "23451:115:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23473:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "23473:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23481:1:14",
																				"nodeType": "YulLiteral",
																				"src": "23481:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23469:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "23469:3:14"
																		},
																		"nativeSrc": "23469:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "23469:14:14"
																	},
																	{
																		"hexValue": "53746172742074696d65206d757374206265206265666f726520656e64207469",
																		"kind": "string",
																		"nativeSrc": "23485:34:14",
																		"nodeType": "YulLiteral",
																		"src": "23485:34:14",
																		"type": "",
																		"value": "Start time must be before end ti"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23462:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "23462:6:14"
																},
																"nativeSrc": "23462:58:14",
																"nodeType": "YulFunctionCall",
																"src": "23462:58:14"
															},
															"nativeSrc": "23462:58:14",
															"nodeType": "YulExpressionStatement",
															"src": "23462:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23541:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "23541:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23549:2:14",
																				"nodeType": "YulLiteral",
																				"src": "23549:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23537:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "23537:3:14"
																		},
																		"nativeSrc": "23537:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "23537:15:14"
																	},
																	{
																		"hexValue": "6d65",
																		"kind": "string",
																		"nativeSrc": "23554:4:14",
																		"nodeType": "YulLiteral",
																		"src": "23554:4:14",
																		"type": "",
																		"value": "me"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23530:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "23530:6:14"
																},
																"nativeSrc": "23530:29:14",
																"nodeType": "YulFunctionCall",
																"src": "23530:29:14"
															},
															"nativeSrc": "23530:29:14",
															"nodeType": "YulExpressionStatement",
															"src": "23530:29:14"
														}
													]
												},
												"name": "store_literal_in_memory_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f",
												"nativeSrc": "23345:221:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "23443:6:14",
														"nodeType": "YulTypedName",
														"src": "23443:6:14",
														"type": ""
													}
												],
												"src": "23345:221:14"
											},
											{
												"body": {
													"nativeSrc": "23718:220:14",
													"nodeType": "YulBlock",
													"src": "23718:220:14",
													"statements": [
														{
															"nativeSrc": "23728:74:14",
															"nodeType": "YulAssignment",
															"src": "23728:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23794:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "23794:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23799:2:14",
																		"nodeType": "YulLiteral",
																		"src": "23799:2:14",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23735:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "23735:58:14"
																},
																"nativeSrc": "23735:67:14",
																"nodeType": "YulFunctionCall",
																"src": "23735:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23728:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "23728:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23900:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "23900:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f",
																	"nativeSrc": "23811:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "23811:88:14"
																},
																"nativeSrc": "23811:93:14",
																"nodeType": "YulFunctionCall",
																"src": "23811:93:14"
															},
															"nativeSrc": "23811:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "23811:93:14"
														},
														{
															"nativeSrc": "23913:19:14",
															"nodeType": "YulAssignment",
															"src": "23913:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23924:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "23924:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23929:2:14",
																		"nodeType": "YulLiteral",
																		"src": "23929:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23920:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "23920:3:14"
																},
																"nativeSrc": "23920:12:14",
																"nodeType": "YulFunctionCall",
																"src": "23920:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "23913:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "23913:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "23572:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23706:3:14",
														"nodeType": "YulTypedName",
														"src": "23706:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23714:3:14",
														"nodeType": "YulTypedName",
														"src": "23714:3:14",
														"type": ""
													}
												],
												"src": "23572:366:14"
											},
											{
												"body": {
													"nativeSrc": "24115:248:14",
													"nodeType": "YulBlock",
													"src": "24115:248:14",
													"statements": [
														{
															"nativeSrc": "24125:26:14",
															"nodeType": "YulAssignment",
															"src": "24125:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24137:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "24137:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24148:2:14",
																		"nodeType": "YulLiteral",
																		"src": "24148:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24133:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "24133:3:14"
																},
																"nativeSrc": "24133:18:14",
																"nodeType": "YulFunctionCall",
																"src": "24133:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24125:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "24125:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24172:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "24172:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24183:1:14",
																				"nodeType": "YulLiteral",
																				"src": "24183:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24168:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "24168:3:14"
																		},
																		"nativeSrc": "24168:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "24168:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "24191:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "24191:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24197:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "24197:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24187:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "24187:3:14"
																		},
																		"nativeSrc": "24187:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "24187:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24161:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "24161:6:14"
																},
																"nativeSrc": "24161:47:14",
																"nodeType": "YulFunctionCall",
																"src": "24161:47:14"
															},
															"nativeSrc": "24161:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "24161:47:14"
														},
														{
															"nativeSrc": "24217:139:14",
															"nodeType": "YulAssignment",
															"src": "24217:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "24351:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "24351:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24225:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "24225:124:14"
																},
																"nativeSrc": "24225:131:14",
																"nodeType": "YulFunctionCall",
																"src": "24225:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24217:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "24217:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "23944:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24095:9:14",
														"nodeType": "YulTypedName",
														"src": "24095:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24110:4:14",
														"nodeType": "YulTypedName",
														"src": "24110:4:14",
														"type": ""
													}
												],
												"src": "23944:419:14"
											},
											{
												"body": {
													"nativeSrc": "24423:87:14",
													"nodeType": "YulBlock",
													"src": "24423:87:14",
													"statements": [
														{
															"nativeSrc": "24433:11:14",
															"nodeType": "YulAssignment",
															"src": "24433:11:14",
															"value": {
																"name": "ptr",
																"nativeSrc": "24441:3:14",
																"nodeType": "YulIdentifier",
																"src": "24441:3:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "24433:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "24433:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "24461:1:14",
																		"nodeType": "YulLiteral",
																		"src": "24461:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "24464:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "24464:3:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24454:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "24454:6:14"
																},
																"nativeSrc": "24454:14:14",
																"nodeType": "YulFunctionCall",
																"src": "24454:14:14"
															},
															"nativeSrc": "24454:14:14",
															"nodeType": "YulExpressionStatement",
															"src": "24454:14:14"
														},
														{
															"nativeSrc": "24477:26:14",
															"nodeType": "YulAssignment",
															"src": "24477:26:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "24495:1:14",
																		"nodeType": "YulLiteral",
																		"src": "24495:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24498:4:14",
																		"nodeType": "YulLiteral",
																		"src": "24498:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "24485:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "24485:9:14"
																},
																"nativeSrc": "24485:18:14",
																"nodeType": "YulFunctionCall",
																"src": "24485:18:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "24477:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "24477:4:14"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "24369:141:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "24410:3:14",
														"nodeType": "YulTypedName",
														"src": "24410:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "24418:4:14",
														"nodeType": "YulTypedName",
														"src": "24418:4:14",
														"type": ""
													}
												],
												"src": "24369:141:14"
											},
											{
												"body": {
													"nativeSrc": "24560:49:14",
													"nodeType": "YulBlock",
													"src": "24560:49:14",
													"statements": [
														{
															"nativeSrc": "24570:33:14",
															"nodeType": "YulAssignment",
															"src": "24570:33:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "24588:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "24588:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24595:2:14",
																				"nodeType": "YulLiteral",
																				"src": "24595:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24584:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "24584:3:14"
																		},
																		"nativeSrc": "24584:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "24584:14:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24600:2:14",
																		"nodeType": "YulLiteral",
																		"src": "24600:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "24580:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "24580:3:14"
																},
																"nativeSrc": "24580:23:14",
																"nodeType": "YulFunctionCall",
																"src": "24580:23:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "24570:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "24570:6:14"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "24516:93:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24543:5:14",
														"nodeType": "YulTypedName",
														"src": "24543:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "24553:6:14",
														"nodeType": "YulTypedName",
														"src": "24553:6:14",
														"type": ""
													}
												],
												"src": "24516:93:14"
											},
											{
												"body": {
													"nativeSrc": "24668:54:14",
													"nodeType": "YulBlock",
													"src": "24668:54:14",
													"statements": [
														{
															"nativeSrc": "24678:37:14",
															"nodeType": "YulAssignment",
															"src": "24678:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "24703:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "24703:4:14"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "24709:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "24709:5:14"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "24699:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "24699:3:14"
																},
																"nativeSrc": "24699:16:14",
																"nodeType": "YulFunctionCall",
																"src": "24699:16:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "24678:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "24678:8:14"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "24615:107:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "24643:4:14",
														"nodeType": "YulTypedName",
														"src": "24643:4:14",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "24649:5:14",
														"nodeType": "YulTypedName",
														"src": "24649:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "24659:8:14",
														"nodeType": "YulTypedName",
														"src": "24659:8:14",
														"type": ""
													}
												],
												"src": "24615:107:14"
											},
											{
												"body": {
													"nativeSrc": "24804:317:14",
													"nodeType": "YulBlock",
													"src": "24804:317:14",
													"statements": [
														{
															"nativeSrc": "24814:35:14",
															"nodeType": "YulVariableDeclaration",
															"src": "24814:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "24835:10:14",
																		"nodeType": "YulIdentifier",
																		"src": "24835:10:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24847:1:14",
																		"nodeType": "YulLiteral",
																		"src": "24847:1:14",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "24831:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "24831:3:14"
																},
																"nativeSrc": "24831:18:14",
																"nodeType": "YulFunctionCall",
																"src": "24831:18:14"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "24818:9:14",
																	"nodeType": "YulTypedName",
																	"src": "24818:9:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "24858:109:14",
															"nodeType": "YulVariableDeclaration",
															"src": "24858:109:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "24889:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "24889:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24900:66:14",
																		"nodeType": "YulLiteral",
																		"src": "24900:66:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "24870:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "24870:18:14"
																},
																"nativeSrc": "24870:97:14",
																"nodeType": "YulFunctionCall",
																"src": "24870:97:14"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "24862:4:14",
																	"nodeType": "YulTypedName",
																	"src": "24862:4:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "24976:51:14",
															"nodeType": "YulAssignment",
															"src": "24976:51:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "25007:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "25007:9:14"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "25018:8:14",
																		"nodeType": "YulIdentifier",
																		"src": "25018:8:14"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "24988:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "24988:18:14"
																},
																"nativeSrc": "24988:39:14",
																"nodeType": "YulFunctionCall",
																"src": "24988:39:14"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "24976:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "24976:8:14"
																}
															]
														},
														{
															"nativeSrc": "25036:30:14",
															"nodeType": "YulAssignment",
															"src": "25036:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "25049:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "25049:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "25060:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "25060:4:14"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "25056:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "25056:3:14"
																		},
																		"nativeSrc": "25056:9:14",
																		"nodeType": "YulFunctionCall",
																		"src": "25056:9:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "25045:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "25045:3:14"
																},
																"nativeSrc": "25045:21:14",
																"nodeType": "YulFunctionCall",
																"src": "25045:21:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "25036:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "25036:5:14"
																}
															]
														},
														{
															"nativeSrc": "25075:40:14",
															"nodeType": "YulAssignment",
															"src": "25075:40:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "25088:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "25088:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "25099:8:14",
																				"nodeType": "YulIdentifier",
																				"src": "25099:8:14"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "25109:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "25109:4:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "25095:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "25095:3:14"
																		},
																		"nativeSrc": "25095:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "25095:19:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "25085:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "25085:2:14"
																},
																"nativeSrc": "25085:30:14",
																"nodeType": "YulFunctionCall",
																"src": "25085:30:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "25075:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "25075:6:14"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "24728:393:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24765:5:14",
														"nodeType": "YulTypedName",
														"src": "24765:5:14",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "24772:10:14",
														"nodeType": "YulTypedName",
														"src": "24772:10:14",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "24784:8:14",
														"nodeType": "YulTypedName",
														"src": "24784:8:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "24797:6:14",
														"nodeType": "YulTypedName",
														"src": "24797:6:14",
														"type": ""
													}
												],
												"src": "24728:393:14"
											},
											{
												"body": {
													"nativeSrc": "25187:82:14",
													"nodeType": "YulBlock",
													"src": "25187:82:14",
													"statements": [
														{
															"nativeSrc": "25197:66:14",
															"nodeType": "YulAssignment",
															"src": "25197:66:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "25255:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "25255:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "25237:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "25237:17:14"
																				},
																				"nativeSrc": "25237:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "25237:24:14"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "25228:8:14",
																			"nodeType": "YulIdentifier",
																			"src": "25228:8:14"
																		},
																		"nativeSrc": "25228:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "25228:34:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "25210:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "25210:17:14"
																},
																"nativeSrc": "25210:53:14",
																"nodeType": "YulFunctionCall",
																"src": "25210:53:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "25197:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "25197:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "25127:142:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "25167:5:14",
														"nodeType": "YulTypedName",
														"src": "25167:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "25177:9:14",
														"nodeType": "YulTypedName",
														"src": "25177:9:14",
														"type": ""
													}
												],
												"src": "25127:142:14"
											},
											{
												"body": {
													"nativeSrc": "25322:28:14",
													"nodeType": "YulBlock",
													"src": "25322:28:14",
													"statements": [
														{
															"nativeSrc": "25332:12:14",
															"nodeType": "YulAssignment",
															"src": "25332:12:14",
															"value": {
																"name": "value",
																"nativeSrc": "25339:5:14",
																"nodeType": "YulIdentifier",
																"src": "25339:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "25332:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "25332:3:14"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "25275:75:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "25308:5:14",
														"nodeType": "YulTypedName",
														"src": "25308:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "25318:3:14",
														"nodeType": "YulTypedName",
														"src": "25318:3:14",
														"type": ""
													}
												],
												"src": "25275:75:14"
											},
											{
												"body": {
													"nativeSrc": "25432:193:14",
													"nodeType": "YulBlock",
													"src": "25432:193:14",
													"statements": [
														{
															"nativeSrc": "25442:63:14",
															"nodeType": "YulVariableDeclaration",
															"src": "25442:63:14",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "25497:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "25497:7:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "25466:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "25466:30:14"
																},
																"nativeSrc": "25466:39:14",
																"nodeType": "YulFunctionCall",
																"src": "25466:39:14"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "25446:16:14",
																	"nodeType": "YulTypedName",
																	"src": "25446:16:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "25521:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "25521:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "25561:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "25561:4:14"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "25555:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "25555:5:14"
																				},
																				"nativeSrc": "25555:11:14",
																				"nodeType": "YulFunctionCall",
																				"src": "25555:11:14"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "25568:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "25568:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "25600:16:14",
																						"nodeType": "YulIdentifier",
																						"src": "25600:16:14"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "25576:23:14",
																					"nodeType": "YulIdentifier",
																					"src": "25576:23:14"
																				},
																				"nativeSrc": "25576:41:14",
																				"nodeType": "YulFunctionCall",
																				"src": "25576:41:14"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "25527:27:14",
																			"nodeType": "YulIdentifier",
																			"src": "25527:27:14"
																		},
																		"nativeSrc": "25527:91:14",
																		"nodeType": "YulFunctionCall",
																		"src": "25527:91:14"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "25514:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "25514:6:14"
																},
																"nativeSrc": "25514:105:14",
																"nodeType": "YulFunctionCall",
																"src": "25514:105:14"
															},
															"nativeSrc": "25514:105:14",
															"nodeType": "YulExpressionStatement",
															"src": "25514:105:14"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "25356:269:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "25409:4:14",
														"nodeType": "YulTypedName",
														"src": "25409:4:14",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "25415:6:14",
														"nodeType": "YulTypedName",
														"src": "25415:6:14",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "25423:7:14",
														"nodeType": "YulTypedName",
														"src": "25423:7:14",
														"type": ""
													}
												],
												"src": "25356:269:14"
											},
											{
												"body": {
													"nativeSrc": "25680:24:14",
													"nodeType": "YulBlock",
													"src": "25680:24:14",
													"statements": [
														{
															"nativeSrc": "25690:8:14",
															"nodeType": "YulAssignment",
															"src": "25690:8:14",
															"value": {
																"kind": "number",
																"nativeSrc": "25697:1:14",
																"nodeType": "YulLiteral",
																"src": "25697:1:14",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "25690:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "25690:3:14"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "25631:73:14",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "25676:3:14",
														"nodeType": "YulTypedName",
														"src": "25676:3:14",
														"type": ""
													}
												],
												"src": "25631:73:14"
											},
											{
												"body": {
													"nativeSrc": "25763:136:14",
													"nodeType": "YulBlock",
													"src": "25763:136:14",
													"statements": [
														{
															"nativeSrc": "25773:46:14",
															"nodeType": "YulVariableDeclaration",
															"src": "25773:46:14",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "25787:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "25787:30:14"
																},
																"nativeSrc": "25787:32:14",
																"nodeType": "YulFunctionCall",
																"src": "25787:32:14"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "25777:6:14",
																	"nodeType": "YulTypedName",
																	"src": "25777:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "25872:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "25872:4:14"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "25878:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "25878:6:14"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "25886:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "25886:6:14"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "25828:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "25828:43:14"
																},
																"nativeSrc": "25828:65:14",
																"nodeType": "YulFunctionCall",
																"src": "25828:65:14"
															},
															"nativeSrc": "25828:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "25828:65:14"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "25710:189:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "25749:4:14",
														"nodeType": "YulTypedName",
														"src": "25749:4:14",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "25755:6:14",
														"nodeType": "YulTypedName",
														"src": "25755:6:14",
														"type": ""
													}
												],
												"src": "25710:189:14"
											},
											{
												"body": {
													"nativeSrc": "25955:136:14",
													"nodeType": "YulBlock",
													"src": "25955:136:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "26022:63:14",
																"nodeType": "YulBlock",
																"src": "26022:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "26066:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "26066:5:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "26073:1:14",
																					"nodeType": "YulLiteral",
																					"src": "26073:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "26036:29:14",
																				"nodeType": "YulIdentifier",
																				"src": "26036:29:14"
																			},
																			"nativeSrc": "26036:39:14",
																			"nodeType": "YulFunctionCall",
																			"src": "26036:39:14"
																		},
																		"nativeSrc": "26036:39:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "26036:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "25975:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "25975:5:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "25982:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "25982:3:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "25972:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "25972:2:14"
																},
																"nativeSrc": "25972:14:14",
																"nodeType": "YulFunctionCall",
																"src": "25972:14:14"
															},
															"nativeSrc": "25965:120:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "25987:26:14",
																"nodeType": "YulBlock",
																"src": "25987:26:14",
																"statements": [
																	{
																		"nativeSrc": "25989:22:14",
																		"nodeType": "YulAssignment",
																		"src": "25989:22:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "26002:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "26002:5:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "26009:1:14",
																					"nodeType": "YulLiteral",
																					"src": "26009:1:14",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "25998:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "25998:3:14"
																			},
																			"nativeSrc": "25998:13:14",
																			"nodeType": "YulFunctionCall",
																			"src": "25998:13:14"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "25989:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "25989:5:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "25969:2:14",
																"nodeType": "YulBlock",
																"src": "25969:2:14",
																"statements": []
															},
															"src": "25965:120:14"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "25905:186:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "25943:5:14",
														"nodeType": "YulTypedName",
														"src": "25943:5:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "25950:3:14",
														"nodeType": "YulTypedName",
														"src": "25950:3:14",
														"type": ""
													}
												],
												"src": "25905:186:14"
											},
											{
												"body": {
													"nativeSrc": "26176:464:14",
													"nodeType": "YulBlock",
													"src": "26176:464:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "26202:431:14",
																"nodeType": "YulBlock",
																"src": "26202:431:14",
																"statements": [
																	{
																		"nativeSrc": "26216:54:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "26216:54:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "26264:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "26264:5:14"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "26232:31:14",
																				"nodeType": "YulIdentifier",
																				"src": "26232:31:14"
																			},
																			"nativeSrc": "26232:38:14",
																			"nodeType": "YulFunctionCall",
																			"src": "26232:38:14"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "26220:8:14",
																				"nodeType": "YulTypedName",
																				"src": "26220:8:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "26283:63:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "26283:63:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "26306:8:14",
																					"nodeType": "YulIdentifier",
																					"src": "26306:8:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "26334:10:14",
																							"nodeType": "YulIdentifier",
																							"src": "26334:10:14"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "26316:17:14",
																						"nodeType": "YulIdentifier",
																						"src": "26316:17:14"
																					},
																					"nativeSrc": "26316:29:14",
																					"nodeType": "YulFunctionCall",
																					"src": "26316:29:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "26302:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "26302:3:14"
																			},
																			"nativeSrc": "26302:44:14",
																			"nodeType": "YulFunctionCall",
																			"src": "26302:44:14"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "26287:11:14",
																				"nodeType": "YulTypedName",
																				"src": "26287:11:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "26503:27:14",
																			"nodeType": "YulBlock",
																			"src": "26503:27:14",
																			"statements": [
																				{
																					"nativeSrc": "26505:23:14",
																					"nodeType": "YulAssignment",
																					"src": "26505:23:14",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "26520:8:14",
																						"nodeType": "YulIdentifier",
																						"src": "26520:8:14"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "26505:11:14",
																							"nodeType": "YulIdentifier",
																							"src": "26505:11:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "26487:10:14",
																					"nodeType": "YulIdentifier",
																					"src": "26487:10:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "26499:2:14",
																					"nodeType": "YulLiteral",
																					"src": "26499:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "26484:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "26484:2:14"
																			},
																			"nativeSrc": "26484:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "26484:18:14"
																		},
																		"nativeSrc": "26481:49:14",
																		"nodeType": "YulIf",
																		"src": "26481:49:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "26572:11:14",
																					"nodeType": "YulIdentifier",
																					"src": "26572:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "26589:8:14",
																							"nodeType": "YulIdentifier",
																							"src": "26589:8:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "26617:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "26617:3:14"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "26599:17:14",
																								"nodeType": "YulIdentifier",
																								"src": "26599:17:14"
																							},
																							"nativeSrc": "26599:22:14",
																							"nodeType": "YulFunctionCall",
																							"src": "26599:22:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "26585:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "26585:3:14"
																					},
																					"nativeSrc": "26585:37:14",
																					"nodeType": "YulFunctionCall",
																					"src": "26585:37:14"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "26543:28:14",
																				"nodeType": "YulIdentifier",
																				"src": "26543:28:14"
																			},
																			"nativeSrc": "26543:80:14",
																			"nodeType": "YulFunctionCall",
																			"src": "26543:80:14"
																		},
																		"nativeSrc": "26543:80:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "26543:80:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "26193:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "26193:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26198:2:14",
																		"nodeType": "YulLiteral",
																		"src": "26198:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "26190:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "26190:2:14"
																},
																"nativeSrc": "26190:11:14",
																"nodeType": "YulFunctionCall",
																"src": "26190:11:14"
															},
															"nativeSrc": "26187:446:14",
															"nodeType": "YulIf",
															"src": "26187:446:14"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "26097:543:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "26152:5:14",
														"nodeType": "YulTypedName",
														"src": "26152:5:14",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "26159:3:14",
														"nodeType": "YulTypedName",
														"src": "26159:3:14",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "26164:10:14",
														"nodeType": "YulTypedName",
														"src": "26164:10:14",
														"type": ""
													}
												],
												"src": "26097:543:14"
											},
											{
												"body": {
													"nativeSrc": "26709:54:14",
													"nodeType": "YulBlock",
													"src": "26709:54:14",
													"statements": [
														{
															"nativeSrc": "26719:37:14",
															"nodeType": "YulAssignment",
															"src": "26719:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "26744:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "26744:4:14"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "26750:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "26750:5:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "26740:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "26740:3:14"
																},
																"nativeSrc": "26740:16:14",
																"nodeType": "YulFunctionCall",
																"src": "26740:16:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "26719:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "26719:8:14"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "26646:117:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "26684:4:14",
														"nodeType": "YulTypedName",
														"src": "26684:4:14",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "26690:5:14",
														"nodeType": "YulTypedName",
														"src": "26690:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "26700:8:14",
														"nodeType": "YulTypedName",
														"src": "26700:8:14",
														"type": ""
													}
												],
												"src": "26646:117:14"
											},
											{
												"body": {
													"nativeSrc": "26820:118:14",
													"nodeType": "YulBlock",
													"src": "26820:118:14",
													"statements": [
														{
															"nativeSrc": "26830:68:14",
															"nodeType": "YulVariableDeclaration",
															"src": "26830:68:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "26879:1:14",
																						"nodeType": "YulLiteral",
																						"src": "26879:1:14",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "26882:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "26882:5:14"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "26875:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "26875:3:14"
																				},
																				"nativeSrc": "26875:13:14",
																				"nodeType": "YulFunctionCall",
																				"src": "26875:13:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "26894:1:14",
																						"nodeType": "YulLiteral",
																						"src": "26894:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "26890:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "26890:3:14"
																				},
																				"nativeSrc": "26890:6:14",
																				"nodeType": "YulFunctionCall",
																				"src": "26890:6:14"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "26846:28:14",
																			"nodeType": "YulIdentifier",
																			"src": "26846:28:14"
																		},
																		"nativeSrc": "26846:51:14",
																		"nodeType": "YulFunctionCall",
																		"src": "26846:51:14"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "26842:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "26842:3:14"
																},
																"nativeSrc": "26842:56:14",
																"nodeType": "YulFunctionCall",
																"src": "26842:56:14"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "26834:4:14",
																	"nodeType": "YulTypedName",
																	"src": "26834:4:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "26907:25:14",
															"nodeType": "YulAssignment",
															"src": "26907:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "26921:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "26921:4:14"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "26927:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "26927:4:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "26917:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "26917:3:14"
																},
																"nativeSrc": "26917:15:14",
																"nodeType": "YulFunctionCall",
																"src": "26917:15:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "26907:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "26907:6:14"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "26769:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "26797:4:14",
														"nodeType": "YulTypedName",
														"src": "26797:4:14",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "26803:5:14",
														"nodeType": "YulTypedName",
														"src": "26803:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "26813:6:14",
														"nodeType": "YulTypedName",
														"src": "26813:6:14",
														"type": ""
													}
												],
												"src": "26769:169:14"
											},
											{
												"body": {
													"nativeSrc": "27024:214:14",
													"nodeType": "YulBlock",
													"src": "27024:214:14",
													"statements": [
														{
															"nativeSrc": "27157:37:14",
															"nodeType": "YulAssignment",
															"src": "27157:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "27184:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "27184:4:14"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "27190:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "27190:3:14"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "27165:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "27165:18:14"
																},
																"nativeSrc": "27165:29:14",
																"nodeType": "YulFunctionCall",
																"src": "27165:29:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "27157:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "27157:4:14"
																}
															]
														},
														{
															"nativeSrc": "27203:29:14",
															"nodeType": "YulAssignment",
															"src": "27203:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "27214:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "27214:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "27224:1:14",
																				"nodeType": "YulLiteral",
																				"src": "27224:1:14",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "27227:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "27227:3:14"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "27220:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "27220:3:14"
																		},
																		"nativeSrc": "27220:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "27220:11:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "27211:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "27211:2:14"
																},
																"nativeSrc": "27211:21:14",
																"nodeType": "YulFunctionCall",
																"src": "27211:21:14"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "27203:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "27203:4:14"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "26943:295:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "27005:4:14",
														"nodeType": "YulTypedName",
														"src": "27005:4:14",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "27011:3:14",
														"nodeType": "YulTypedName",
														"src": "27011:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "27019:4:14",
														"nodeType": "YulTypedName",
														"src": "27019:4:14",
														"type": ""
													}
												],
												"src": "26943:295:14"
											},
											{
												"body": {
													"nativeSrc": "27335:1303:14",
													"nodeType": "YulBlock",
													"src": "27335:1303:14",
													"statements": [
														{
															"nativeSrc": "27346:51:14",
															"nodeType": "YulVariableDeclaration",
															"src": "27346:51:14",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "27393:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "27393:3:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "27360:32:14",
																	"nodeType": "YulIdentifier",
																	"src": "27360:32:14"
																},
																"nativeSrc": "27360:37:14",
																"nodeType": "YulFunctionCall",
																"src": "27360:37:14"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "27350:6:14",
																	"nodeType": "YulTypedName",
																	"src": "27350:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "27482:22:14",
																"nodeType": "YulBlock",
																"src": "27482:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "27484:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "27484:16:14"
																			},
																			"nativeSrc": "27484:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "27484:18:14"
																		},
																		"nativeSrc": "27484:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "27484:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "27454:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "27454:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27462:18:14",
																		"nodeType": "YulLiteral",
																		"src": "27462:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "27451:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "27451:2:14"
																},
																"nativeSrc": "27451:30:14",
																"nodeType": "YulFunctionCall",
																"src": "27451:30:14"
															},
															"nativeSrc": "27448:56:14",
															"nodeType": "YulIf",
															"src": "27448:56:14"
														},
														{
															"nativeSrc": "27514:52:14",
															"nodeType": "YulVariableDeclaration",
															"src": "27514:52:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "27560:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "27560:4:14"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "27554:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "27554:5:14"
																		},
																		"nativeSrc": "27554:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "27554:11:14"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "27528:25:14",
																	"nodeType": "YulIdentifier",
																	"src": "27528:25:14"
																},
																"nativeSrc": "27528:38:14",
																"nodeType": "YulFunctionCall",
																"src": "27528:38:14"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "27518:6:14",
																	"nodeType": "YulTypedName",
																	"src": "27518:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "27659:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "27659:4:14"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "27665:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "27665:6:14"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "27673:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "27673:6:14"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "27613:45:14",
																	"nodeType": "YulIdentifier",
																	"src": "27613:45:14"
																},
																"nativeSrc": "27613:67:14",
																"nodeType": "YulFunctionCall",
																"src": "27613:67:14"
															},
															"nativeSrc": "27613:67:14",
															"nodeType": "YulExpressionStatement",
															"src": "27613:67:14"
														},
														{
															"nativeSrc": "27690:18:14",
															"nodeType": "YulVariableDeclaration",
															"src": "27690:18:14",
															"value": {
																"kind": "number",
																"nativeSrc": "27707:1:14",
																"nodeType": "YulLiteral",
																"src": "27707:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "27694:9:14",
																	"nodeType": "YulTypedName",
																	"src": "27694:9:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "27718:17:14",
															"nodeType": "YulAssignment",
															"src": "27718:17:14",
															"value": {
																"kind": "number",
																"nativeSrc": "27731:4:14",
																"nodeType": "YulLiteral",
																"src": "27731:4:14",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "27718:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "27718:9:14"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "27782:611:14",
																		"nodeType": "YulBlock",
																		"src": "27782:611:14",
																		"statements": [
																			{
																				"nativeSrc": "27796:37:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "27796:37:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "27815:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "27815:6:14"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "27827:4:14",
																									"nodeType": "YulLiteral",
																									"src": "27827:4:14",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "27823:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "27823:3:14"
																							},
																							"nativeSrc": "27823:9:14",
																							"nodeType": "YulFunctionCall",
																							"src": "27823:9:14"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "27811:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "27811:3:14"
																					},
																					"nativeSrc": "27811:22:14",
																					"nodeType": "YulFunctionCall",
																					"src": "27811:22:14"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "27800:7:14",
																						"nodeType": "YulTypedName",
																						"src": "27800:7:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "27847:51:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "27847:51:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "27893:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "27893:4:14"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "27861:31:14",
																						"nodeType": "YulIdentifier",
																						"src": "27861:31:14"
																					},
																					"nativeSrc": "27861:37:14",
																					"nodeType": "YulFunctionCall",
																					"src": "27861:37:14"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "27851:6:14",
																						"nodeType": "YulTypedName",
																						"src": "27851:6:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "27911:10:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "27911:10:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "27920:1:14",
																					"nodeType": "YulLiteral",
																					"src": "27920:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "27915:1:14",
																						"nodeType": "YulTypedName",
																						"src": "27915:1:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "27979:163:14",
																					"nodeType": "YulBlock",
																					"src": "27979:163:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "28004:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "28004:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "28022:3:14",
																														"nodeType": "YulIdentifier",
																														"src": "28022:3:14"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "28027:9:14",
																														"nodeType": "YulIdentifier",
																														"src": "28027:9:14"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "28018:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "28018:3:14"
																												},
																												"nativeSrc": "28018:19:14",
																												"nodeType": "YulFunctionCall",
																												"src": "28018:19:14"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "28012:5:14",
																											"nodeType": "YulIdentifier",
																											"src": "28012:5:14"
																										},
																										"nativeSrc": "28012:26:14",
																										"nodeType": "YulFunctionCall",
																										"src": "28012:26:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "27997:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "27997:6:14"
																								},
																								"nativeSrc": "27997:42:14",
																								"nodeType": "YulFunctionCall",
																								"src": "27997:42:14"
																							},
																							"nativeSrc": "27997:42:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "27997:42:14"
																						},
																						{
																							"nativeSrc": "28056:24:14",
																							"nodeType": "YulAssignment",
																							"src": "28056:24:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "28070:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "28070:6:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "28078:1:14",
																										"nodeType": "YulLiteral",
																										"src": "28078:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "28066:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "28066:3:14"
																								},
																								"nativeSrc": "28066:14:14",
																								"nodeType": "YulFunctionCall",
																								"src": "28066:14:14"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "28056:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "28056:6:14"
																								}
																							]
																						},
																						{
																							"nativeSrc": "28097:31:14",
																							"nodeType": "YulAssignment",
																							"src": "28097:31:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "28114:9:14",
																										"nodeType": "YulIdentifier",
																										"src": "28114:9:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "28125:2:14",
																										"nodeType": "YulLiteral",
																										"src": "28125:2:14",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "28110:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "28110:3:14"
																								},
																								"nativeSrc": "28110:18:14",
																								"nodeType": "YulFunctionCall",
																								"src": "28110:18:14"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "28097:9:14",
																									"nodeType": "YulIdentifier",
																									"src": "28097:9:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "27945:1:14",
																							"nodeType": "YulIdentifier",
																							"src": "27945:1:14"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "27948:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "27948:7:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "27942:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "27942:2:14"
																					},
																					"nativeSrc": "27942:14:14",
																					"nodeType": "YulFunctionCall",
																					"src": "27942:14:14"
																				},
																				"nativeSrc": "27934:208:14",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "27957:21:14",
																					"nodeType": "YulBlock",
																					"src": "27957:21:14",
																					"statements": [
																						{
																							"nativeSrc": "27959:17:14",
																							"nodeType": "YulAssignment",
																							"src": "27959:17:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "27968:1:14",
																										"nodeType": "YulIdentifier",
																										"src": "27968:1:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "27971:4:14",
																										"nodeType": "YulLiteral",
																										"src": "27971:4:14",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "27964:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "27964:3:14"
																								},
																								"nativeSrc": "27964:12:14",
																								"nodeType": "YulFunctionCall",
																								"src": "27964:12:14"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "27959:1:14",
																									"nodeType": "YulIdentifier",
																									"src": "27959:1:14"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "27938:3:14",
																					"nodeType": "YulBlock",
																					"src": "27938:3:14",
																					"statements": []
																				},
																				"src": "27934:208:14"
																			},
																			{
																				"body": {
																					"nativeSrc": "28178:156:14",
																					"nodeType": "YulBlock",
																					"src": "28178:156:14",
																					"statements": [
																						{
																							"nativeSrc": "28196:43:14",
																							"nodeType": "YulVariableDeclaration",
																							"src": "28196:43:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "28223:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "28223:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "28228:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "28228:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "28219:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "28219:3:14"
																										},
																										"nativeSrc": "28219:19:14",
																										"nodeType": "YulFunctionCall",
																										"src": "28219:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "28213:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "28213:5:14"
																								},
																								"nativeSrc": "28213:26:14",
																								"nodeType": "YulFunctionCall",
																								"src": "28213:26:14"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "28200:9:14",
																									"nodeType": "YulTypedName",
																									"src": "28200:9:14",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "28263:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "28263:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "28290:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "28290:9:14"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "28305:6:14",
																														"nodeType": "YulIdentifier",
																														"src": "28305:6:14"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "28313:4:14",
																														"nodeType": "YulLiteral",
																														"src": "28313:4:14",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "28301:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "28301:3:14"
																												},
																												"nativeSrc": "28301:17:14",
																												"nodeType": "YulFunctionCall",
																												"src": "28301:17:14"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "28271:18:14",
																											"nodeType": "YulIdentifier",
																											"src": "28271:18:14"
																										},
																										"nativeSrc": "28271:48:14",
																										"nodeType": "YulFunctionCall",
																										"src": "28271:48:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "28256:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "28256:6:14"
																								},
																								"nativeSrc": "28256:64:14",
																								"nodeType": "YulFunctionCall",
																								"src": "28256:64:14"
																							},
																							"nativeSrc": "28256:64:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "28256:64:14"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "28161:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "28161:7:14"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "28170:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "28170:6:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "28158:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "28158:2:14"
																					},
																					"nativeSrc": "28158:19:14",
																					"nodeType": "YulFunctionCall",
																					"src": "28158:19:14"
																				},
																				"nativeSrc": "28155:179:14",
																				"nodeType": "YulIf",
																				"src": "28155:179:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "28354:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "28354:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "28368:6:14",
																											"nodeType": "YulIdentifier",
																											"src": "28368:6:14"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "28376:1:14",
																											"nodeType": "YulLiteral",
																											"src": "28376:1:14",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "28364:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "28364:3:14"
																									},
																									"nativeSrc": "28364:14:14",
																									"nodeType": "YulFunctionCall",
																									"src": "28364:14:14"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "28380:1:14",
																									"nodeType": "YulLiteral",
																									"src": "28380:1:14",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "28360:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "28360:3:14"
																							},
																							"nativeSrc": "28360:22:14",
																							"nodeType": "YulFunctionCall",
																							"src": "28360:22:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "28347:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "28347:6:14"
																					},
																					"nativeSrc": "28347:36:14",
																					"nodeType": "YulFunctionCall",
																					"src": "28347:36:14"
																				},
																				"nativeSrc": "28347:36:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "28347:36:14"
																			}
																		]
																	},
																	"nativeSrc": "27775:618:14",
																	"nodeType": "YulCase",
																	"src": "27775:618:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "27780:1:14",
																		"nodeType": "YulLiteral",
																		"src": "27780:1:14",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "28410:222:14",
																		"nodeType": "YulBlock",
																		"src": "28410:222:14",
																		"statements": [
																			{
																				"nativeSrc": "28424:14:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "28424:14:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "28437:1:14",
																					"nodeType": "YulLiteral",
																					"src": "28437:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "28428:5:14",
																						"nodeType": "YulTypedName",
																						"src": "28428:5:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "28461:67:14",
																					"nodeType": "YulBlock",
																					"src": "28461:67:14",
																					"statements": [
																						{
																							"nativeSrc": "28479:35:14",
																							"nodeType": "YulAssignment",
																							"src": "28479:35:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "28498:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "28498:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "28503:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "28503:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "28494:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "28494:3:14"
																										},
																										"nativeSrc": "28494:19:14",
																										"nodeType": "YulFunctionCall",
																										"src": "28494:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "28488:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "28488:5:14"
																								},
																								"nativeSrc": "28488:26:14",
																								"nodeType": "YulFunctionCall",
																								"src": "28488:26:14"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "28479:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "28479:5:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "28454:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "28454:6:14"
																				},
																				"nativeSrc": "28451:77:14",
																				"nodeType": "YulIf",
																				"src": "28451:77:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "28548:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "28548:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "28607:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "28607:5:14"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "28614:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "28614:6:14"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "28554:52:14",
																								"nodeType": "YulIdentifier",
																								"src": "28554:52:14"
																							},
																							"nativeSrc": "28554:67:14",
																							"nodeType": "YulFunctionCall",
																							"src": "28554:67:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "28541:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "28541:6:14"
																					},
																					"nativeSrc": "28541:81:14",
																					"nodeType": "YulFunctionCall",
																					"src": "28541:81:14"
																				},
																				"nativeSrc": "28541:81:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "28541:81:14"
																			}
																		]
																	},
																	"nativeSrc": "28402:230:14",
																	"nodeType": "YulCase",
																	"src": "28402:230:14",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "27755:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "27755:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27763:2:14",
																		"nodeType": "YulLiteral",
																		"src": "27763:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "27752:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "27752:2:14"
																},
																"nativeSrc": "27752:14:14",
																"nodeType": "YulFunctionCall",
																"src": "27752:14:14"
															},
															"nativeSrc": "27745:887:14",
															"nodeType": "YulSwitch",
															"src": "27745:887:14"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "27243:1395:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "27324:4:14",
														"nodeType": "YulTypedName",
														"src": "27324:4:14",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "27330:3:14",
														"nodeType": "YulTypedName",
														"src": "27330:3:14",
														"type": ""
													}
												],
												"src": "27243:1395:14"
											},
											{
												"body": {
													"nativeSrc": "28816:357:14",
													"nodeType": "YulBlock",
													"src": "28816:357:14",
													"statements": [
														{
															"nativeSrc": "28826:26:14",
															"nodeType": "YulAssignment",
															"src": "28826:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "28838:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "28838:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28849:2:14",
																		"nodeType": "YulLiteral",
																		"src": "28849:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28834:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "28834:3:14"
																},
																"nativeSrc": "28834:18:14",
																"nodeType": "YulFunctionCall",
																"src": "28834:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28826:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "28826:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "28905:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "28905:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28918:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "28918:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28929:1:14",
																				"nodeType": "YulLiteral",
																				"src": "28929:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28914:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "28914:3:14"
																		},
																		"nativeSrc": "28914:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "28914:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint256_fromStack",
																	"nativeSrc": "28862:42:14",
																	"nodeType": "YulIdentifier",
																	"src": "28862:42:14"
																},
																"nativeSrc": "28862:70:14",
																"nodeType": "YulFunctionCall",
																"src": "28862:70:14"
															},
															"nativeSrc": "28862:70:14",
															"nodeType": "YulExpressionStatement",
															"src": "28862:70:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "28985:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "28985:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28998:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "28998:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29009:2:14",
																				"nodeType": "YulLiteral",
																				"src": "29009:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28994:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "28994:3:14"
																		},
																		"nativeSrc": "28994:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "28994:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint256_fromStack",
																	"nativeSrc": "28942:42:14",
																	"nodeType": "YulIdentifier",
																	"src": "28942:42:14"
																},
																"nativeSrc": "28942:71:14",
																"nodeType": "YulFunctionCall",
																"src": "28942:71:14"
															},
															"nativeSrc": "28942:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "28942:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "29034:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "29034:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29045:2:14",
																				"nodeType": "YulLiteral",
																				"src": "29045:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29030:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "29030:3:14"
																		},
																		"nativeSrc": "29030:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "29030:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "29054:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "29054:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "29060:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "29060:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "29050:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "29050:3:14"
																		},
																		"nativeSrc": "29050:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "29050:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29023:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "29023:6:14"
																},
																"nativeSrc": "29023:48:14",
																"nodeType": "YulFunctionCall",
																"src": "29023:48:14"
															},
															"nativeSrc": "29023:48:14",
															"nodeType": "YulExpressionStatement",
															"src": "29023:48:14"
														},
														{
															"nativeSrc": "29080:86:14",
															"nodeType": "YulAssignment",
															"src": "29080:86:14",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "29152:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "29152:6:14"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "29161:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "29161:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "29088:63:14",
																	"nodeType": "YulIdentifier",
																	"src": "29088:63:14"
																},
																"nativeSrc": "29088:78:14",
																"nodeType": "YulFunctionCall",
																"src": "29088:78:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29080:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "29080:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64_t_uint64_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "28644:529:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "28772:9:14",
														"nodeType": "YulTypedName",
														"src": "28772:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "28784:6:14",
														"nodeType": "YulTypedName",
														"src": "28784:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "28792:6:14",
														"nodeType": "YulTypedName",
														"src": "28792:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "28800:6:14",
														"nodeType": "YulTypedName",
														"src": "28800:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "28811:4:14",
														"nodeType": "YulTypedName",
														"src": "28811:4:14",
														"type": ""
													}
												],
												"src": "28644:529:14"
											},
											{
												"body": {
													"nativeSrc": "29285:61:14",
													"nodeType": "YulBlock",
													"src": "29285:61:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "29307:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "29307:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29315:1:14",
																				"nodeType": "YulLiteral",
																				"src": "29315:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29303:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "29303:3:14"
																		},
																		"nativeSrc": "29303:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "29303:14:14"
																	},
																	{
																		"hexValue": "5a65726f20616464726573732075736572",
																		"kind": "string",
																		"nativeSrc": "29319:19:14",
																		"nodeType": "YulLiteral",
																		"src": "29319:19:14",
																		"type": "",
																		"value": "Zero address user"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29296:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "29296:6:14"
																},
																"nativeSrc": "29296:43:14",
																"nodeType": "YulFunctionCall",
																"src": "29296:43:14"
															},
															"nativeSrc": "29296:43:14",
															"nodeType": "YulExpressionStatement",
															"src": "29296:43:14"
														}
													]
												},
												"name": "store_literal_in_memory_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d",
												"nativeSrc": "29179:167:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "29277:6:14",
														"nodeType": "YulTypedName",
														"src": "29277:6:14",
														"type": ""
													}
												],
												"src": "29179:167:14"
											},
											{
												"body": {
													"nativeSrc": "29498:220:14",
													"nodeType": "YulBlock",
													"src": "29498:220:14",
													"statements": [
														{
															"nativeSrc": "29508:74:14",
															"nodeType": "YulAssignment",
															"src": "29508:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29574:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "29574:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29579:2:14",
																		"nodeType": "YulLiteral",
																		"src": "29579:2:14",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "29515:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "29515:58:14"
																},
																"nativeSrc": "29515:67:14",
																"nodeType": "YulFunctionCall",
																"src": "29515:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "29508:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "29508:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29680:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "29680:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d",
																	"nativeSrc": "29591:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "29591:88:14"
																},
																"nativeSrc": "29591:93:14",
																"nodeType": "YulFunctionCall",
																"src": "29591:93:14"
															},
															"nativeSrc": "29591:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "29591:93:14"
														},
														{
															"nativeSrc": "29693:19:14",
															"nodeType": "YulAssignment",
															"src": "29693:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29704:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "29704:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29709:2:14",
																		"nodeType": "YulLiteral",
																		"src": "29709:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29700:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "29700:3:14"
																},
																"nativeSrc": "29700:12:14",
																"nodeType": "YulFunctionCall",
																"src": "29700:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "29693:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "29693:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "29352:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "29486:3:14",
														"nodeType": "YulTypedName",
														"src": "29486:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "29494:3:14",
														"nodeType": "YulTypedName",
														"src": "29494:3:14",
														"type": ""
													}
												],
												"src": "29352:366:14"
											},
											{
												"body": {
													"nativeSrc": "29895:248:14",
													"nodeType": "YulBlock",
													"src": "29895:248:14",
													"statements": [
														{
															"nativeSrc": "29905:26:14",
															"nodeType": "YulAssignment",
															"src": "29905:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "29917:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "29917:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29928:2:14",
																		"nodeType": "YulLiteral",
																		"src": "29928:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29913:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "29913:3:14"
																},
																"nativeSrc": "29913:18:14",
																"nodeType": "YulFunctionCall",
																"src": "29913:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29905:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "29905:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "29952:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "29952:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29963:1:14",
																				"nodeType": "YulLiteral",
																				"src": "29963:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29948:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "29948:3:14"
																		},
																		"nativeSrc": "29948:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "29948:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "29971:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "29971:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "29977:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "29977:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "29967:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "29967:3:14"
																		},
																		"nativeSrc": "29967:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "29967:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29941:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "29941:6:14"
																},
																"nativeSrc": "29941:47:14",
																"nodeType": "YulFunctionCall",
																"src": "29941:47:14"
															},
															"nativeSrc": "29941:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "29941:47:14"
														},
														{
															"nativeSrc": "29997:139:14",
															"nodeType": "YulAssignment",
															"src": "29997:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "30131:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "30131:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "30005:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "30005:124:14"
																},
																"nativeSrc": "30005:131:14",
																"nodeType": "YulFunctionCall",
																"src": "30005:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29997:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "29997:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "29724:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "29875:9:14",
														"nodeType": "YulTypedName",
														"src": "29875:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "29890:4:14",
														"nodeType": "YulTypedName",
														"src": "29890:4:14",
														"type": ""
													}
												],
												"src": "29724:419:14"
											},
											{
												"body": {
													"nativeSrc": "30255:68:14",
													"nodeType": "YulBlock",
													"src": "30255:68:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "30277:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "30277:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30285:1:14",
																				"nodeType": "YulLiteral",
																				"src": "30285:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30273:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "30273:3:14"
																		},
																		"nativeSrc": "30273:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "30273:14:14"
																	},
																	{
																		"hexValue": "4d69736d617463686564206172726179206c656e67746873",
																		"kind": "string",
																		"nativeSrc": "30289:26:14",
																		"nodeType": "YulLiteral",
																		"src": "30289:26:14",
																		"type": "",
																		"value": "Mismatched array lengths"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "30266:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "30266:6:14"
																},
																"nativeSrc": "30266:50:14",
																"nodeType": "YulFunctionCall",
																"src": "30266:50:14"
															},
															"nativeSrc": "30266:50:14",
															"nodeType": "YulExpressionStatement",
															"src": "30266:50:14"
														}
													]
												},
												"name": "store_literal_in_memory_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085",
												"nativeSrc": "30149:174:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "30247:6:14",
														"nodeType": "YulTypedName",
														"src": "30247:6:14",
														"type": ""
													}
												],
												"src": "30149:174:14"
											},
											{
												"body": {
													"nativeSrc": "30475:220:14",
													"nodeType": "YulBlock",
													"src": "30475:220:14",
													"statements": [
														{
															"nativeSrc": "30485:74:14",
															"nodeType": "YulAssignment",
															"src": "30485:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "30551:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "30551:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30556:2:14",
																		"nodeType": "YulLiteral",
																		"src": "30556:2:14",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "30492:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "30492:58:14"
																},
																"nativeSrc": "30492:67:14",
																"nodeType": "YulFunctionCall",
																"src": "30492:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "30485:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "30485:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "30657:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "30657:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085",
																	"nativeSrc": "30568:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "30568:88:14"
																},
																"nativeSrc": "30568:93:14",
																"nodeType": "YulFunctionCall",
																"src": "30568:93:14"
															},
															"nativeSrc": "30568:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "30568:93:14"
														},
														{
															"nativeSrc": "30670:19:14",
															"nodeType": "YulAssignment",
															"src": "30670:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "30681:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "30681:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30686:2:14",
																		"nodeType": "YulLiteral",
																		"src": "30686:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "30677:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "30677:3:14"
																},
																"nativeSrc": "30677:12:14",
																"nodeType": "YulFunctionCall",
																"src": "30677:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "30670:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "30670:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "30329:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "30463:3:14",
														"nodeType": "YulTypedName",
														"src": "30463:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "30471:3:14",
														"nodeType": "YulTypedName",
														"src": "30471:3:14",
														"type": ""
													}
												],
												"src": "30329:366:14"
											},
											{
												"body": {
													"nativeSrc": "30872:248:14",
													"nodeType": "YulBlock",
													"src": "30872:248:14",
													"statements": [
														{
															"nativeSrc": "30882:26:14",
															"nodeType": "YulAssignment",
															"src": "30882:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "30894:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "30894:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30905:2:14",
																		"nodeType": "YulLiteral",
																		"src": "30905:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "30890:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "30890:3:14"
																},
																"nativeSrc": "30890:18:14",
																"nodeType": "YulFunctionCall",
																"src": "30890:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "30882:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "30882:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30929:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "30929:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30940:1:14",
																				"nodeType": "YulLiteral",
																				"src": "30940:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30925:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "30925:3:14"
																		},
																		"nativeSrc": "30925:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "30925:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "30948:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "30948:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "30954:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "30954:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "30944:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "30944:3:14"
																		},
																		"nativeSrc": "30944:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "30944:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "30918:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "30918:6:14"
																},
																"nativeSrc": "30918:47:14",
																"nodeType": "YulFunctionCall",
																"src": "30918:47:14"
															},
															"nativeSrc": "30918:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "30918:47:14"
														},
														{
															"nativeSrc": "30974:139:14",
															"nodeType": "YulAssignment",
															"src": "30974:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "31108:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "31108:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "30982:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "30982:124:14"
																},
																"nativeSrc": "30982:131:14",
																"nodeType": "YulFunctionCall",
																"src": "30982:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "30974:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "30974:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "30701:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "30852:9:14",
														"nodeType": "YulTypedName",
														"src": "30852:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "30867:4:14",
														"nodeType": "YulTypedName",
														"src": "30867:4:14",
														"type": ""
													}
												],
												"src": "30701:419:14"
											},
											{
												"body": {
													"nativeSrc": "31154:152:14",
													"nodeType": "YulBlock",
													"src": "31154:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "31171:1:14",
																		"nodeType": "YulLiteral",
																		"src": "31171:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31174:77:14",
																		"nodeType": "YulLiteral",
																		"src": "31174:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31164:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "31164:6:14"
																},
																"nativeSrc": "31164:88:14",
																"nodeType": "YulFunctionCall",
																"src": "31164:88:14"
															},
															"nativeSrc": "31164:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "31164:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "31268:1:14",
																		"nodeType": "YulLiteral",
																		"src": "31268:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31271:4:14",
																		"nodeType": "YulLiteral",
																		"src": "31271:4:14",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31261:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "31261:6:14"
																},
																"nativeSrc": "31261:15:14",
																"nodeType": "YulFunctionCall",
																"src": "31261:15:14"
															},
															"nativeSrc": "31261:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "31261:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "31292:1:14",
																		"nodeType": "YulLiteral",
																		"src": "31292:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31295:4:14",
																		"nodeType": "YulLiteral",
																		"src": "31295:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "31285:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "31285:6:14"
																},
																"nativeSrc": "31285:15:14",
																"nodeType": "YulFunctionCall",
																"src": "31285:15:14"
															},
															"nativeSrc": "31285:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "31285:15:14"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "31126:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "31126:180:14"
											},
											{
												"body": {
													"nativeSrc": "31418:124:14",
													"nodeType": "YulBlock",
													"src": "31418:124:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "31440:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "31440:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31448:1:14",
																				"nodeType": "YulLiteral",
																				"src": "31448:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31436:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "31436:3:14"
																		},
																		"nativeSrc": "31436:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "31436:14:14"
																	},
																	{
																		"hexValue": "5769746864726177616c20616d6f756e74206d75737420626520677265617465",
																		"kind": "string",
																		"nativeSrc": "31452:34:14",
																		"nodeType": "YulLiteral",
																		"src": "31452:34:14",
																		"type": "",
																		"value": "Withdrawal amount must be greate"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31429:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "31429:6:14"
																},
																"nativeSrc": "31429:58:14",
																"nodeType": "YulFunctionCall",
																"src": "31429:58:14"
															},
															"nativeSrc": "31429:58:14",
															"nodeType": "YulExpressionStatement",
															"src": "31429:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "31508:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "31508:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31516:2:14",
																				"nodeType": "YulLiteral",
																				"src": "31516:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31504:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "31504:3:14"
																		},
																		"nativeSrc": "31504:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "31504:15:14"
																	},
																	{
																		"hexValue": "72207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "31521:13:14",
																		"nodeType": "YulLiteral",
																		"src": "31521:13:14",
																		"type": "",
																		"value": "r than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31497:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "31497:6:14"
																},
																"nativeSrc": "31497:38:14",
																"nodeType": "YulFunctionCall",
																"src": "31497:38:14"
															},
															"nativeSrc": "31497:38:14",
															"nodeType": "YulExpressionStatement",
															"src": "31497:38:14"
														}
													]
												},
												"name": "store_literal_in_memory_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76",
												"nativeSrc": "31312:230:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "31410:6:14",
														"nodeType": "YulTypedName",
														"src": "31410:6:14",
														"type": ""
													}
												],
												"src": "31312:230:14"
											},
											{
												"body": {
													"nativeSrc": "31694:220:14",
													"nodeType": "YulBlock",
													"src": "31694:220:14",
													"statements": [
														{
															"nativeSrc": "31704:74:14",
															"nodeType": "YulAssignment",
															"src": "31704:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "31770:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "31770:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31775:2:14",
																		"nodeType": "YulLiteral",
																		"src": "31775:2:14",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "31711:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "31711:58:14"
																},
																"nativeSrc": "31711:67:14",
																"nodeType": "YulFunctionCall",
																"src": "31711:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "31704:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "31704:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "31876:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "31876:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76",
																	"nativeSrc": "31787:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "31787:88:14"
																},
																"nativeSrc": "31787:93:14",
																"nodeType": "YulFunctionCall",
																"src": "31787:93:14"
															},
															"nativeSrc": "31787:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "31787:93:14"
														},
														{
															"nativeSrc": "31889:19:14",
															"nodeType": "YulAssignment",
															"src": "31889:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "31900:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "31900:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31905:2:14",
																		"nodeType": "YulLiteral",
																		"src": "31905:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "31896:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "31896:3:14"
																},
																"nativeSrc": "31896:12:14",
																"nodeType": "YulFunctionCall",
																"src": "31896:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "31889:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "31889:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "31548:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "31682:3:14",
														"nodeType": "YulTypedName",
														"src": "31682:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "31690:3:14",
														"nodeType": "YulTypedName",
														"src": "31690:3:14",
														"type": ""
													}
												],
												"src": "31548:366:14"
											},
											{
												"body": {
													"nativeSrc": "32091:248:14",
													"nodeType": "YulBlock",
													"src": "32091:248:14",
													"statements": [
														{
															"nativeSrc": "32101:26:14",
															"nodeType": "YulAssignment",
															"src": "32101:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "32113:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "32113:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "32124:2:14",
																		"nodeType": "YulLiteral",
																		"src": "32124:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "32109:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "32109:3:14"
																},
																"nativeSrc": "32109:18:14",
																"nodeType": "YulFunctionCall",
																"src": "32109:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "32101:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "32101:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "32148:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "32148:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "32159:1:14",
																				"nodeType": "YulLiteral",
																				"src": "32159:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "32144:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "32144:3:14"
																		},
																		"nativeSrc": "32144:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "32144:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "32167:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "32167:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "32173:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "32173:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "32163:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "32163:3:14"
																		},
																		"nativeSrc": "32163:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "32163:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "32137:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "32137:6:14"
																},
																"nativeSrc": "32137:47:14",
																"nodeType": "YulFunctionCall",
																"src": "32137:47:14"
															},
															"nativeSrc": "32137:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "32137:47:14"
														},
														{
															"nativeSrc": "32193:139:14",
															"nodeType": "YulAssignment",
															"src": "32193:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "32327:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "32327:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "32201:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "32201:124:14"
																},
																"nativeSrc": "32201:131:14",
																"nodeType": "YulFunctionCall",
																"src": "32201:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "32193:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "32193:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "31920:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "32071:9:14",
														"nodeType": "YulTypedName",
														"src": "32071:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "32086:4:14",
														"nodeType": "YulTypedName",
														"src": "32086:4:14",
														"type": ""
													}
												],
												"src": "31920:419:14"
											},
											{
												"body": {
													"nativeSrc": "32451:62:14",
													"nodeType": "YulBlock",
													"src": "32451:62:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "32473:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "32473:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "32481:1:14",
																				"nodeType": "YulLiteral",
																				"src": "32481:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "32469:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "32469:3:14"
																		},
																		"nativeSrc": "32469:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "32469:14:14"
																	},
																	{
																		"hexValue": "496e73756666696369656e742066756e6473",
																		"kind": "string",
																		"nativeSrc": "32485:20:14",
																		"nodeType": "YulLiteral",
																		"src": "32485:20:14",
																		"type": "",
																		"value": "Insufficient funds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "32462:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "32462:6:14"
																},
																"nativeSrc": "32462:44:14",
																"nodeType": "YulFunctionCall",
																"src": "32462:44:14"
															},
															"nativeSrc": "32462:44:14",
															"nodeType": "YulExpressionStatement",
															"src": "32462:44:14"
														}
													]
												},
												"name": "store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
												"nativeSrc": "32345:168:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "32443:6:14",
														"nodeType": "YulTypedName",
														"src": "32443:6:14",
														"type": ""
													}
												],
												"src": "32345:168:14"
											},
											{
												"body": {
													"nativeSrc": "32665:220:14",
													"nodeType": "YulBlock",
													"src": "32665:220:14",
													"statements": [
														{
															"nativeSrc": "32675:74:14",
															"nodeType": "YulAssignment",
															"src": "32675:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "32741:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "32741:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "32746:2:14",
																		"nodeType": "YulLiteral",
																		"src": "32746:2:14",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "32682:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "32682:58:14"
																},
																"nativeSrc": "32682:67:14",
																"nodeType": "YulFunctionCall",
																"src": "32682:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "32675:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "32675:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "32847:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "32847:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
																	"nativeSrc": "32758:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "32758:88:14"
																},
																"nativeSrc": "32758:93:14",
																"nodeType": "YulFunctionCall",
																"src": "32758:93:14"
															},
															"nativeSrc": "32758:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "32758:93:14"
														},
														{
															"nativeSrc": "32860:19:14",
															"nodeType": "YulAssignment",
															"src": "32860:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "32871:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "32871:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "32876:2:14",
																		"nodeType": "YulLiteral",
																		"src": "32876:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "32867:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "32867:3:14"
																},
																"nativeSrc": "32867:12:14",
																"nodeType": "YulFunctionCall",
																"src": "32867:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "32860:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "32860:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "32519:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "32653:3:14",
														"nodeType": "YulTypedName",
														"src": "32653:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "32661:3:14",
														"nodeType": "YulTypedName",
														"src": "32661:3:14",
														"type": ""
													}
												],
												"src": "32519:366:14"
											},
											{
												"body": {
													"nativeSrc": "33062:248:14",
													"nodeType": "YulBlock",
													"src": "33062:248:14",
													"statements": [
														{
															"nativeSrc": "33072:26:14",
															"nodeType": "YulAssignment",
															"src": "33072:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "33084:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "33084:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "33095:2:14",
																		"nodeType": "YulLiteral",
																		"src": "33095:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "33080:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "33080:3:14"
																},
																"nativeSrc": "33080:18:14",
																"nodeType": "YulFunctionCall",
																"src": "33080:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "33072:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "33072:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "33119:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "33119:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "33130:1:14",
																				"nodeType": "YulLiteral",
																				"src": "33130:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "33115:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "33115:3:14"
																		},
																		"nativeSrc": "33115:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "33115:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "33138:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "33138:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "33144:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "33144:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "33134:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "33134:3:14"
																		},
																		"nativeSrc": "33134:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "33134:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "33108:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "33108:6:14"
																},
																"nativeSrc": "33108:47:14",
																"nodeType": "YulFunctionCall",
																"src": "33108:47:14"
															},
															"nativeSrc": "33108:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "33108:47:14"
														},
														{
															"nativeSrc": "33164:139:14",
															"nodeType": "YulAssignment",
															"src": "33164:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "33298:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "33298:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "33172:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "33172:124:14"
																},
																"nativeSrc": "33172:131:14",
																"nodeType": "YulFunctionCall",
																"src": "33172:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "33164:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "33164:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "32891:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "33042:9:14",
														"nodeType": "YulTypedName",
														"src": "33042:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "33057:4:14",
														"nodeType": "YulTypedName",
														"src": "33057:4:14",
														"type": ""
													}
												],
												"src": "32891:419:14"
											},
											{
												"body": {
													"nativeSrc": "33422:75:14",
													"nodeType": "YulBlock",
													"src": "33422:75:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "33444:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "33444:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "33452:1:14",
																				"nodeType": "YulLiteral",
																				"src": "33452:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "33440:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "33440:3:14"
																		},
																		"nativeSrc": "33440:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "33440:14:14"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "33456:33:14",
																		"nodeType": "YulLiteral",
																		"src": "33456:33:14",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "33433:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "33433:6:14"
																},
																"nativeSrc": "33433:57:14",
																"nodeType": "YulFunctionCall",
																"src": "33433:57:14"
															},
															"nativeSrc": "33433:57:14",
															"nodeType": "YulExpressionStatement",
															"src": "33433:57:14"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "33316:181:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "33414:6:14",
														"nodeType": "YulTypedName",
														"src": "33414:6:14",
														"type": ""
													}
												],
												"src": "33316:181:14"
											},
											{
												"body": {
													"nativeSrc": "33649:220:14",
													"nodeType": "YulBlock",
													"src": "33649:220:14",
													"statements": [
														{
															"nativeSrc": "33659:74:14",
															"nodeType": "YulAssignment",
															"src": "33659:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "33725:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "33725:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "33730:2:14",
																		"nodeType": "YulLiteral",
																		"src": "33730:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "33666:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "33666:58:14"
																},
																"nativeSrc": "33666:67:14",
																"nodeType": "YulFunctionCall",
																"src": "33666:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "33659:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "33659:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "33831:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "33831:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "33742:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "33742:88:14"
																},
																"nativeSrc": "33742:93:14",
																"nodeType": "YulFunctionCall",
																"src": "33742:93:14"
															},
															"nativeSrc": "33742:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "33742:93:14"
														},
														{
															"nativeSrc": "33844:19:14",
															"nodeType": "YulAssignment",
															"src": "33844:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "33855:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "33855:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "33860:2:14",
																		"nodeType": "YulLiteral",
																		"src": "33860:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "33851:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "33851:3:14"
																},
																"nativeSrc": "33851:12:14",
																"nodeType": "YulFunctionCall",
																"src": "33851:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "33844:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "33844:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "33503:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "33637:3:14",
														"nodeType": "YulTypedName",
														"src": "33637:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "33645:3:14",
														"nodeType": "YulTypedName",
														"src": "33645:3:14",
														"type": ""
													}
												],
												"src": "33503:366:14"
											},
											{
												"body": {
													"nativeSrc": "34046:248:14",
													"nodeType": "YulBlock",
													"src": "34046:248:14",
													"statements": [
														{
															"nativeSrc": "34056:26:14",
															"nodeType": "YulAssignment",
															"src": "34056:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "34068:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "34068:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "34079:2:14",
																		"nodeType": "YulLiteral",
																		"src": "34079:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "34064:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "34064:3:14"
																},
																"nativeSrc": "34064:18:14",
																"nodeType": "YulFunctionCall",
																"src": "34064:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "34056:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "34056:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "34103:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "34103:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "34114:1:14",
																				"nodeType": "YulLiteral",
																				"src": "34114:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "34099:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "34099:3:14"
																		},
																		"nativeSrc": "34099:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "34099:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "34122:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "34122:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "34128:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "34128:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "34118:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "34118:3:14"
																		},
																		"nativeSrc": "34118:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "34118:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "34092:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "34092:6:14"
																},
																"nativeSrc": "34092:47:14",
																"nodeType": "YulFunctionCall",
																"src": "34092:47:14"
															},
															"nativeSrc": "34092:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "34092:47:14"
														},
														{
															"nativeSrc": "34148:139:14",
															"nodeType": "YulAssignment",
															"src": "34148:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "34282:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "34282:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "34156:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "34156:124:14"
																},
																"nativeSrc": "34156:131:14",
																"nodeType": "YulFunctionCall",
																"src": "34156:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "34148:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "34148:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "33875:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "34026:9:14",
														"nodeType": "YulTypedName",
														"src": "34026:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "34041:4:14",
														"nodeType": "YulTypedName",
														"src": "34041:4:14",
														"type": ""
													}
												],
												"src": "33875:419:14"
											},
											{
												"body": {
													"nativeSrc": "34426:206:14",
													"nodeType": "YulBlock",
													"src": "34426:206:14",
													"statements": [
														{
															"nativeSrc": "34436:26:14",
															"nodeType": "YulAssignment",
															"src": "34436:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "34448:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "34448:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "34459:2:14",
																		"nodeType": "YulLiteral",
																		"src": "34459:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "34444:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "34444:3:14"
																},
																"nativeSrc": "34444:18:14",
																"nodeType": "YulFunctionCall",
																"src": "34444:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "34436:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "34436:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "34516:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "34516:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "34529:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "34529:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "34540:1:14",
																				"nodeType": "YulLiteral",
																				"src": "34540:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "34525:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "34525:3:14"
																		},
																		"nativeSrc": "34525:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "34525:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "34472:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "34472:43:14"
																},
																"nativeSrc": "34472:71:14",
																"nodeType": "YulFunctionCall",
																"src": "34472:71:14"
															},
															"nativeSrc": "34472:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "34472:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "34597:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "34597:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "34610:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "34610:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "34621:2:14",
																				"nodeType": "YulLiteral",
																				"src": "34621:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "34606:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "34606:3:14"
																		},
																		"nativeSrc": "34606:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "34606:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "34553:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "34553:43:14"
																},
																"nativeSrc": "34553:72:14",
																"nodeType": "YulFunctionCall",
																"src": "34553:72:14"
															},
															"nativeSrc": "34553:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "34553:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "34300:332:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "34390:9:14",
														"nodeType": "YulTypedName",
														"src": "34390:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "34402:6:14",
														"nodeType": "YulTypedName",
														"src": "34402:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "34410:6:14",
														"nodeType": "YulTypedName",
														"src": "34410:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "34421:4:14",
														"nodeType": "YulTypedName",
														"src": "34421:4:14",
														"type": ""
													}
												],
												"src": "34300:332:14"
											},
											{
												"body": {
													"nativeSrc": "34792:288:14",
													"nodeType": "YulBlock",
													"src": "34792:288:14",
													"statements": [
														{
															"nativeSrc": "34802:26:14",
															"nodeType": "YulAssignment",
															"src": "34802:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "34814:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "34814:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "34825:2:14",
																		"nodeType": "YulLiteral",
																		"src": "34825:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "34810:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "34810:3:14"
																},
																"nativeSrc": "34810:18:14",
																"nodeType": "YulFunctionCall",
																"src": "34810:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "34802:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "34802:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "34882:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "34882:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "34895:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "34895:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "34906:1:14",
																				"nodeType": "YulLiteral",
																				"src": "34906:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "34891:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "34891:3:14"
																		},
																		"nativeSrc": "34891:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "34891:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "34838:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "34838:43:14"
																},
																"nativeSrc": "34838:71:14",
																"nodeType": "YulFunctionCall",
																"src": "34838:71:14"
															},
															"nativeSrc": "34838:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "34838:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "34963:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "34963:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "34976:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "34976:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "34987:2:14",
																				"nodeType": "YulLiteral",
																				"src": "34987:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "34972:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "34972:3:14"
																		},
																		"nativeSrc": "34972:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "34972:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "34919:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "34919:43:14"
																},
																"nativeSrc": "34919:72:14",
																"nodeType": "YulFunctionCall",
																"src": "34919:72:14"
															},
															"nativeSrc": "34919:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "34919:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "35045:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "35045:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "35058:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "35058:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "35069:2:14",
																				"nodeType": "YulLiteral",
																				"src": "35069:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "35054:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "35054:3:14"
																		},
																		"nativeSrc": "35054:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "35054:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "35001:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "35001:43:14"
																},
																"nativeSrc": "35001:72:14",
																"nodeType": "YulFunctionCall",
																"src": "35001:72:14"
															},
															"nativeSrc": "35001:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "35001:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "34638:442:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "34748:9:14",
														"nodeType": "YulTypedName",
														"src": "34748:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "34760:6:14",
														"nodeType": "YulTypedName",
														"src": "34760:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "34768:6:14",
														"nodeType": "YulTypedName",
														"src": "34768:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "34776:6:14",
														"nodeType": "YulTypedName",
														"src": "34776:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "34787:4:14",
														"nodeType": "YulTypedName",
														"src": "34787:4:14",
														"type": ""
													}
												],
												"src": "34638:442:14"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_27d7ea81cbaf0a0b02eea7b1644019cc31271c4da24dc2abdb33127b3a05742f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sweetspot: use deposit()\")\n\n    }\n\n    function abi_encode_t_stringliteral_27d7ea81cbaf0a0b02eea7b1644019cc31271c4da24dc2abdb33127b3a05742f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_27d7ea81cbaf0a0b02eea7b1644019cc31271c4da24dc2abdb33127b3a05742f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_27d7ea81cbaf0a0b02eea7b1644019cc31271c4da24dc2abdb33127b3a05742f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_27d7ea81cbaf0a0b02eea7b1644019cc31271c4da24dc2abdb33127b3a05742f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IScorer_$1472_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IScorer_$1472_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IScorer_$1472_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IScorer_$1472__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IScorer_$1472_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_uint64_t_uint64_t_string_memory_ptr__to_t_uint64_t_uint64_t_string_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint64t_uint64t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3, value4 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function convert_t_uint64_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint64(value)))\n    }\n\n    function abi_encode_t_uint64_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint64_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint64_t_uint64__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint64_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf(memPtr) {\n\n        mstore(add(memPtr, 0), \"No claimable amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient funds in jar\")\n\n    }\n\n    function abi_encode_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ether transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375(memPtr) {\n\n        mstore(add(memPtr, 0), \"Incorrect Ether amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71(memPtr) {\n\n        mstore(add(memPtr, 0), \"Deposit amount must be greater t\")\n\n        mstore(add(memPtr, 32), \"han zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226(memPtr) {\n\n        mstore(add(memPtr, 0), \"Caller is not an admin\")\n\n    }\n\n    function abi_encode_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Start time must be before end ti\")\n\n        mstore(add(memPtr, 32), \"me\")\n\n    }\n\n    function abi_encode_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_uint64_t_uint64_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint64_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function store_literal_in_memory_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Zero address user\")\n\n    }\n\n    function abi_encode_t_stringliteral_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085(memPtr) {\n\n        mstore(add(memPtr, 0), \"Mismatched array lengths\")\n\n    }\n\n    function abi_encode_t_stringliteral_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76(memPtr) {\n\n        mstore(add(memPtr, 0), \"Withdrawal amount must be greate\")\n\n        mstore(add(memPtr, 32), \"r than zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient funds\")\n\n    }\n\n    function abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100ec5760003560e01c80638da5cb5b1161008a578063b807a3c411610059578063b807a3c4146103c0578063e3e7c1f9146103e9578063f2fde38b14610412578063f3fef3a31461043b576101af565b80638da5cb5b146102f2578063a9012c891461031d578063a9590e8a14610346578063aee9c87214610383576101af565b8063485cc955116100c6578063485cc9551461025a578063715018a61461028357806385c758f71461029a5780638a19c8bc146102c5576101af565b80631e83409a146101ea57806331f7d9641461021357806347e7ef241461023e576101af565b366101af5734603560008073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546101409190611d34565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62346040516101a59190611d77565b60405180910390a3005b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e190611def565b60405180910390fd5b3480156101f657600080fd5b50610211600480360381019061020c9190611e81565b610464565b005b34801561021f57600080fd5b506102286108d8565b6040516102359190611ebd565b60405180910390f35b61025860048036038101906102539190611f04565b6108dd565b005b34801561026657600080fd5b50610281600480360381019061027c9190611f44565b610a98565b005b34801561028f57600080fd5b50610298610c71565b005b3480156102a657600080fd5b506102af610c85565b6040516102bc9190611fe3565b60405180910390f35b3480156102d157600080fd5b506102da610cab565b6040516102e9939291906120a0565b60405180910390f35b3480156102fe57600080fd5b50610307610d73565b6040516103149190611ebd565b60405180910390f35b34801561032957600080fd5b50610344600480360381019061033f919061223f565b610dab565b005b34801561035257600080fd5b5061036d60048036038101906103689190611f44565b610fc4565b60405161037a9190611d77565b60405180910390f35b34801561038f57600080fd5b506103aa60048036038101906103a59190611e81565b610fe9565b6040516103b79190611d77565b60405180910390f35b3480156103cc57600080fd5b506103e760048036038101906103e291906122ae565b611001565b005b3480156103f557600080fd5b50610410600480360381019061040b91906123b7565b611236565b005b34801561041e57600080fd5b5061043960048036038101906104349190611e81565b6114e2565b005b34801561044757600080fd5b50610462600480360381019061045d9190611f04565b611568565b005b61046c61182b565b603360000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff164210806104bf5750603360000160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1642115b156105375742603360000160009054906101000a900467ffffffffffffffff16603360000160089054906101000a900467ffffffffffffffff166040517ffa7410d400000000000000000000000000000000000000000000000000000000815260040161052e9392919061247d565b60405180910390fd5b6000603660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600081116105fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f290612500565b60405180910390fd5b80603560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561067d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106749061256c565b60405180910390fd5b6000603660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080603560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461074e919061258c565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361083b5760003373ffffffffffffffffffffffffffffffffffffffff16826040516107af906125f1565b60006040518083038185875af1925050503d80600081146107ec576040519150601f19603f3d011682016040523d82523d6000602084013e6107f1565b606091505b5050905080610835576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082c90612652565b60405180910390fd5b50610867565b61086633828473ffffffffffffffffffffffffffffffffffffffff1661187a9092919063ffffffff16565b5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167ff7a40077ff7a04c7e61f6f26fb13774259ddf1b6bce9ecf26a8276cdd3992683836040516108c49190611d77565b60405180910390a3506108d56118f9565b50565b600081565b6108e561182b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109605780341461095b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610952906126be565b60405180910390fd5b6109d1565b600081116109a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099a90612750565b60405180910390fd5b6109d03330838573ffffffffffffffffffffffffffffffffffffffff16611903909392919063ffffffff16565b5b80603560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a209190611d34565b925050819055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f6283604051610a849190611d77565b60405180910390a3610a946118f9565b5050565b6000610aa2611985565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff16148015610af05750825b9050600060018367ffffffffffffffff16148015610b25575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610b33575080155b15610b6a576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610bba5760018560000160086101000a81548160ff0219169083151502179055505b610bc3866119ad565b610bcb6119c1565b86603260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508315610c685760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610c5f91906127ab565b60405180910390a15b50505050505050565b610c796119d3565b610c836000611a5a565b565b603260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60338060000160009054906101000a900467ffffffffffffffff16908060000160089054906101000a900467ffffffffffffffff1690806001018054610cf0906127f5565b80601f0160208091040260200160405190810160405280929190818152602001828054610d1c906127f5565b8015610d695780601f10610d3e57610100808354040283529160200191610d69565b820191906000526020600020905b815481529060010190602001808311610d4c57829003601f168201915b5050505050905083565b600080610d7e611b31565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b603260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166324d7806c336040518263ffffffff1660e01b8152600401610e069190611ebd565b602060405180830381865afa158015610e23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e47919061285e565b610e86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7d906128d7565b60405180910390fd5b8167ffffffffffffffff168367ffffffffffffffff1610610edc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed390612969565b60405180910390fd5b60405180606001604052808467ffffffffffffffff1681526020018367ffffffffffffffff16815260200182815250603360008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506040820151816001019081610f809190612b2b565b509050507f09e6db48f22357e6dce2bbff89db8ff25f0012a08186d6ea72e2343fdc112e13838383604051610fb793929190612bfd565b60405180910390a1505050565b6036602052816000526040600020602052806000526040600020600091509150505481565b60356020528060005260406000206000915090505481565b603260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166324d7806c336040518263ffffffff1660e01b815260040161105c9190611ebd565b602060405180830381865afa158015611079573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109d919061285e565b6110dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d3906128d7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361114b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114290612c87565b60405180910390fd5b80603660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f3d0601f3b0e52fd772f1fa71d91651b34b6a11144bea30d74e0f820019a04dc2836040516112299190611d77565b60405180910390a3505050565b603260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166324d7806c336040518263ffffffff1660e01b81526004016112919190611ebd565b602060405180830381865afa1580156112ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d2919061285e565b611311576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611308906128d7565b60405180910390fd5b818190508484905014611359576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161135090612cf3565b60405180910390fd5b60005b848490508110156114da5782828281811061137a57611379612d13565b5b905060200201356036600087878581811061139857611397612d13565b5b90506020020160208101906113ad9190611e81565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508573ffffffffffffffffffffffffffffffffffffffff1685858381811061145257611451612d13565b5b90506020020160208101906114679190611e81565b73ffffffffffffffffffffffffffffffffffffffff167f3d0601f3b0e52fd772f1fa71d91651b34b6a11144bea30d74e0f820019a04dc28585858181106114b1576114b0612d13565b5b905060200201356040516114c59190611d77565b60405180910390a3808060010191505061135c565b505050505050565b6114ea6119d3565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361155c5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016115539190611ebd565b60405180910390fd5b61156581611a5a565b50565b6115706119d3565b61157861182b565b600081116115bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115b290612db4565b60405180910390fd5b80603560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561163d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161163490612e20565b60405180910390fd5b80603560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461168c919061258c565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036117805760006116d1610d73565b73ffffffffffffffffffffffffffffffffffffffff16826040516116f4906125f1565b60006040518083038185875af1925050503d8060008114611731576040519150601f19603f3d011682016040523d82523d6000602084013e611736565b606091505b505090508061177a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161177190612652565b60405180910390fd5b506117b3565b6117b261178b610d73565b828473ffffffffffffffffffffffffffffffffffffffff1661187a9092919063ffffffff16565b5b8173ffffffffffffffffffffffffffffffffffffffff166117d2610d73565b73ffffffffffffffffffffffffffffffffffffffff167f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb836040516118179190611d77565b60405180910390a36118276118f9565b5050565b600260005403611870576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161186790612e8c565b60405180910390fd5b6002600081905550565b6118f4838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016118ad929190612eac565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611b59565b505050565b6001600081905550565b61197f848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161193893929190612ed5565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611b59565b50505050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b6119b5611bfb565b6119be81611c3b565b50565b6119c9611bfb565b6119d1611cc1565b565b6119db611cd3565b73ffffffffffffffffffffffffffffffffffffffff166119f9610d73565b73ffffffffffffffffffffffffffffffffffffffff1614611a5857611a1c611cd3565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611a4f9190611ebd565b60405180910390fd5b565b6000611a64611b31565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b600080602060008451602086016000885af180611b7c576040513d6000823e3d81fd5b3d925060005191505060008214611b97576001811415611bb3565b60008473ffffffffffffffffffffffffffffffffffffffff163b145b15611bf557836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401611bec9190611ebd565b60405180910390fd5b50505050565b611c03611cdb565b611c39576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611c43611bfb565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611cb55760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611cac9190611ebd565b60405180910390fd5b611cbe81611a5a565b50565b611cc9611bfb565b6001600081905550565b600033905090565b6000611ce5611985565b60000160089054906101000a900460ff16905090565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611d3f82611cfb565b9150611d4a83611cfb565b9250828201905080821115611d6257611d61611d05565b5b92915050565b611d7181611cfb565b82525050565b6000602082019050611d8c6000830184611d68565b92915050565b600082825260208201905092915050565b7f537765657473706f743a20757365206465706f73697428290000000000000000600082015250565b6000611dd9601883611d92565b9150611de482611da3565b602082019050919050565b60006020820190508181036000830152611e0881611dcc565b9050919050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611e4e82611e23565b9050919050565b611e5e81611e43565b8114611e6957600080fd5b50565b600081359050611e7b81611e55565b92915050565b600060208284031215611e9757611e96611e19565b5b6000611ea584828501611e6c565b91505092915050565b611eb781611e43565b82525050565b6000602082019050611ed26000830184611eae565b92915050565b611ee181611cfb565b8114611eec57600080fd5b50565b600081359050611efe81611ed8565b92915050565b60008060408385031215611f1b57611f1a611e19565b5b6000611f2985828601611e6c565b9250506020611f3a85828601611eef565b9150509250929050565b60008060408385031215611f5b57611f5a611e19565b5b6000611f6985828601611e6c565b9250506020611f7a85828601611e6c565b9150509250929050565b6000819050919050565b6000611fa9611fa4611f9f84611e23565b611f84565b611e23565b9050919050565b6000611fbb82611f8e565b9050919050565b6000611fcd82611fb0565b9050919050565b611fdd81611fc2565b82525050565b6000602082019050611ff86000830184611fd4565b92915050565b600067ffffffffffffffff82169050919050565b61201b81611ffe565b82525050565b600081519050919050565b60005b8381101561204a57808201518184015260208101905061202f565b60008484015250505050565b6000601f19601f8301169050919050565b600061207282612021565b61207c8185611d92565b935061208c81856020860161202c565b61209581612056565b840191505092915050565b60006060820190506120b56000830186612012565b6120c26020830185612012565b81810360408301526120d48184612067565b9050949350505050565b6120e781611ffe565b81146120f257600080fd5b50565b600081359050612104816120de565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61214c82612056565b810181811067ffffffffffffffff8211171561216b5761216a612114565b5b80604052505050565b600061217e611e0f565b905061218a8282612143565b919050565b600067ffffffffffffffff8211156121aa576121a9612114565b5b6121b382612056565b9050602081019050919050565b82818337600083830152505050565b60006121e26121dd8461218f565b612174565b9050828152602081018484840111156121fe576121fd61210f565b5b6122098482856121c0565b509392505050565b600082601f8301126122265761222561210a565b5b81356122368482602086016121cf565b91505092915050565b60008060006060848603121561225857612257611e19565b5b6000612266868287016120f5565b9350506020612277868287016120f5565b925050604084013567ffffffffffffffff81111561229857612297611e1e565b5b6122a486828701612211565b9150509250925092565b6000806000606084860312156122c7576122c6611e19565b5b60006122d586828701611e6c565b93505060206122e686828701611e6c565b92505060406122f786828701611eef565b9150509250925092565b600080fd5b600080fd5b60008083601f8401126123215761232061210a565b5b8235905067ffffffffffffffff81111561233e5761233d612301565b5b60208301915083602082028301111561235a57612359612306565b5b9250929050565b60008083601f8401126123775761237661210a565b5b8235905067ffffffffffffffff81111561239457612393612301565b5b6020830191508360208202830111156123b0576123af612306565b5b9250929050565b6000806000806000606086880312156123d3576123d2611e19565b5b60006123e188828901611e6c565b955050602086013567ffffffffffffffff81111561240257612401611e1e565b5b61240e8882890161230b565b9450945050604086013567ffffffffffffffff81111561243157612430611e1e565b5b61243d88828901612361565b92509250509295509295909350565b600061246761246261245d84611ffe565b611f84565b611cfb565b9050919050565b6124778161244c565b82525050565b60006060820190506124926000830186611d68565b61249f602083018561246e565b6124ac604083018461246e565b949350505050565b7f4e6f20636c61696d61626c6520616d6f756e7400000000000000000000000000600082015250565b60006124ea601383611d92565b91506124f5826124b4565b602082019050919050565b60006020820190508181036000830152612519816124dd565b9050919050565b7f496e73756666696369656e742066756e647320696e206a617200000000000000600082015250565b6000612556601983611d92565b915061256182612520565b602082019050919050565b6000602082019050818103600083015261258581612549565b9050919050565b600061259782611cfb565b91506125a283611cfb565b92508282039050818111156125ba576125b9611d05565b5b92915050565b600081905092915050565b50565b60006125db6000836125c0565b91506125e6826125cb565b600082019050919050565b60006125fc826125ce565b9150819050919050565b7f4574686572207472616e73666572206661696c65640000000000000000000000600082015250565b600061263c601583611d92565b915061264782612606565b602082019050919050565b6000602082019050818103600083015261266b8161262f565b9050919050565b7f496e636f727265637420457468657220616d6f756e7400000000000000000000600082015250565b60006126a8601683611d92565b91506126b382612672565b602082019050919050565b600060208201905081810360008301526126d78161269b565b9050919050565b7f4465706f73697420616d6f756e74206d7573742062652067726561746572207460008201527f68616e207a65726f000000000000000000000000000000000000000000000000602082015250565b600061273a602883611d92565b9150612745826126de565b604082019050919050565b600060208201905081810360008301526127698161272d565b9050919050565b6000819050919050565b600061279561279061278b84612770565b611f84565b611ffe565b9050919050565b6127a58161277a565b82525050565b60006020820190506127c0600083018461279c565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061280d57607f821691505b6020821081036128205761281f6127c6565b5b50919050565b60008115159050919050565b61283b81612826565b811461284657600080fd5b50565b60008151905061285881612832565b92915050565b60006020828403121561287457612873611e19565b5b600061288284828501612849565b91505092915050565b7f43616c6c6572206973206e6f7420616e2061646d696e00000000000000000000600082015250565b60006128c1601683611d92565b91506128cc8261288b565b602082019050919050565b600060208201905081810360008301526128f0816128b4565b9050919050565b7f53746172742074696d65206d757374206265206265666f726520656e6420746960008201527f6d65000000000000000000000000000000000000000000000000000000000000602082015250565b6000612953602283611d92565b915061295e826128f7565b604082019050919050565b6000602082019050818103600083015261298281612946565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026129eb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826129ae565b6129f586836129ae565b95508019841693508086168417925050509392505050565b6000612a28612a23612a1e84611cfb565b611f84565b611cfb565b9050919050565b6000819050919050565b612a4283612a0d565b612a56612a4e82612a2f565b8484546129bb565b825550505050565b600090565b612a6b612a5e565b612a76818484612a39565b505050565b5b81811015612a9a57612a8f600082612a63565b600181019050612a7c565b5050565b601f821115612adf57612ab081612989565b612ab98461299e565b81016020851015612ac8578190505b612adc612ad48561299e565b830182612a7b565b50505b505050565b600082821c905092915050565b6000612b0260001984600802612ae4565b1980831691505092915050565b6000612b1b8383612af1565b9150826002028217905092915050565b612b3482612021565b67ffffffffffffffff811115612b4d57612b4c612114565b5b612b5782546127f5565b612b62828285612a9e565b600060209050601f831160018114612b955760008415612b83578287015190505b612b8d8582612b0f565b865550612bf5565b601f198416612ba386612989565b60005b82811015612bcb57848901518255600182019150602085019450602081019050612ba6565b86831015612be85784890151612be4601f891682612af1565b8355505b6001600288020188555050505b505050505050565b6000606082019050612c12600083018661246e565b612c1f602083018561246e565b8181036040830152612c318184612067565b9050949350505050565b7f5a65726f20616464726573732075736572000000000000000000000000000000600082015250565b6000612c71601183611d92565b9150612c7c82612c3b565b602082019050919050565b60006020820190508181036000830152612ca081612c64565b9050919050565b7f4d69736d617463686564206172726179206c656e677468730000000000000000600082015250565b6000612cdd601883611d92565b9150612ce882612ca7565b602082019050919050565b60006020820190508181036000830152612d0c81612cd0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f5769746864726177616c20616d6f756e74206d7573742062652067726561746560008201527f72207468616e207a65726f000000000000000000000000000000000000000000602082015250565b6000612d9e602b83611d92565b9150612da982612d42565b604082019050919050565b60006020820190508181036000830152612dcd81612d91565b9050919050565b7f496e73756666696369656e742066756e64730000000000000000000000000000600082015250565b6000612e0a601283611d92565b9150612e1582612dd4565b602082019050919050565b60006020820190508181036000830152612e3981612dfd565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000612e76601f83611d92565b9150612e8182612e40565b602082019050919050565b60006020820190508181036000830152612ea581612e69565b9050919050565b6000604082019050612ec16000830185611eae565b612ece6020830184611d68565b9392505050565b6000606082019050612eea6000830186611eae565b612ef76020830185611eae565b612f046040830184611d68565b94935050505056fea264697066735822122091196f9bbb7993e4f8222bb807bd2f78c7e9745de458f7283a21cd11c875d3fd64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEC JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xB807A3C4 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xB807A3C4 EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0xE3E7C1F9 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x43B JUMPI PUSH2 0x1AF JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0xA9012C89 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xA9590E8A EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0xAEE9C872 EQ PUSH2 0x383 JUMPI PUSH2 0x1AF JUMP JUMPDEST DUP1 PUSH4 0x485CC955 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x85C758F7 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x8A19C8BC EQ PUSH2 0x2C5 JUMPI PUSH2 0x1AF JUMP JUMPDEST DUP1 PUSH4 0x1E83409A EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x31F7D964 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x23E JUMPI PUSH2 0x1AF JUMP JUMPDEST CALLDATASIZE PUSH2 0x1AF JUMPI CALLVALUE PUSH1 0x35 PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x1D34 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5548C837AB068CF56A2C2479DF0882A4922FD203EDB7517321831D95078C5F62 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E1 SWAP1 PUSH2 0x1DEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x1E81 JUMP JUMPDEST PUSH2 0x464 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x228 PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x258 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x1F04 JUMP JUMPDEST PUSH2 0x8DD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x281 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x1F44 JUMP JUMPDEST PUSH2 0xA98 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x298 PUSH2 0xC71 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AF PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x1FE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH2 0xCAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0xD73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x344 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x223F JUMP JUMPDEST PUSH2 0xDAB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x1F44 JUMP JUMPDEST PUSH2 0xFC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37A SWAP2 SWAP1 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x1E81 JUMP JUMPDEST PUSH2 0xFE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E2 SWAP2 SWAP1 PUSH2 0x22AE JUMP JUMPDEST PUSH2 0x1001 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x410 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40B SWAP2 SWAP1 PUSH2 0x23B7 JUMP JUMPDEST PUSH2 0x1236 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x439 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x434 SWAP2 SWAP1 PUSH2 0x1E81 JUMP JUMPDEST PUSH2 0x14E2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x447 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x462 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45D SWAP2 SWAP1 PUSH2 0x1F04 JUMP JUMPDEST PUSH2 0x1568 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46C PUSH2 0x182B JUMP JUMPDEST PUSH1 0x33 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND TIMESTAMP LT DUP1 PUSH2 0x4BF JUMPI POP PUSH1 0x33 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND TIMESTAMP GT JUMPDEST ISZERO PUSH2 0x537 JUMPI TIMESTAMP PUSH1 0x33 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x33 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH32 0xFA7410D400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x52E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x247D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x36 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x5FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F2 SWAP1 PUSH2 0x2500 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x67D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x674 SWAP1 PUSH2 0x256C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x36 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x35 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x74E SWAP2 SWAP1 PUSH2 0x258C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x83B JUMPI PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x7AF SWAP1 PUSH2 0x25F1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x7EC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7F1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x835 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82C SWAP1 PUSH2 0x2652 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x867 JUMP JUMPDEST PUSH2 0x866 CALLER DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x187A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF7A40077FF7A04C7E61F6F26FB13774259DDF1B6BCE9ECF26A8276CDD3992683 DUP4 PUSH1 0x40 MLOAD PUSH2 0x8C4 SWAP2 SWAP1 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x8D5 PUSH2 0x18F9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x8E5 PUSH2 0x182B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x960 JUMPI DUP1 CALLVALUE EQ PUSH2 0x95B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x952 SWAP1 PUSH2 0x26BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9D1 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x9A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99A SWAP1 PUSH2 0x2750 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9D0 CALLER ADDRESS DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1903 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA20 SWAP2 SWAP1 PUSH2 0x1D34 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5548C837AB068CF56A2C2479DF0882A4922FD203EDB7517321831D95078C5F62 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA84 SWAP2 SWAP1 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA94 PUSH2 0x18F9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAA2 PUSH2 0x1985 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xAF0 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xB25 JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xB33 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xB6A JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xBBA JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xBC3 DUP7 PUSH2 0x19AD JUMP JUMPDEST PUSH2 0xBCB PUSH2 0x19C1 JUMP JUMPDEST DUP7 PUSH1 0x32 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xC68 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xC5F SWAP2 SWAP1 PUSH2 0x27AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC79 PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0xC83 PUSH1 0x0 PUSH2 0x1A5A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x32 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x33 DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xCF0 SWAP1 PUSH2 0x27F5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD1C SWAP1 PUSH2 0x27F5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD69 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD3E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD69 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD4C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD7E PUSH2 0x1B31 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x32 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x24D7806C CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE06 SWAP2 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE23 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE47 SWAP2 SWAP1 PUSH2 0x285E JUMP JUMPDEST PUSH2 0xE86 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7D SWAP1 PUSH2 0x28D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND LT PUSH2 0xEDC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xED3 SWAP1 PUSH2 0x2969 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x33 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0xF80 SWAP2 SWAP1 PUSH2 0x2B2B JUMP JUMPDEST POP SWAP1 POP POP PUSH32 0x9E6DB48F22357E6DCE2BBFF89DB8FF25F0012A08186D6EA72E2343FDC112E13 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFB7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2BFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x36 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x35 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x32 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x24D7806C CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105C SWAP2 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1079 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x109D SWAP2 SWAP1 PUSH2 0x285E JUMP JUMPDEST PUSH2 0x10DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D3 SWAP1 PUSH2 0x28D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x114B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1142 SWAP1 PUSH2 0x2C87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x36 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3D0601F3B0E52FD772F1FA71D91651B34B6A11144BEA30D74E0F820019A04DC2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1229 SWAP2 SWAP1 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x32 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x24D7806C CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1291 SWAP2 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12D2 SWAP2 SWAP1 PUSH2 0x285E JUMP JUMPDEST PUSH2 0x1311 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1308 SWAP1 PUSH2 0x28D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SWAP1 POP DUP5 DUP5 SWAP1 POP EQ PUSH2 0x1359 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1350 SWAP1 PUSH2 0x2CF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP5 DUP5 SWAP1 POP DUP2 LT ISZERO PUSH2 0x14DA JUMPI DUP3 DUP3 DUP3 DUP2 DUP2 LT PUSH2 0x137A JUMPI PUSH2 0x1379 PUSH2 0x2D13 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x36 PUSH1 0x0 DUP8 DUP8 DUP6 DUP2 DUP2 LT PUSH2 0x1398 JUMPI PUSH2 0x1397 PUSH2 0x2D13 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x13AD SWAP2 SWAP1 PUSH2 0x1E81 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x1452 JUMPI PUSH2 0x1451 PUSH2 0x2D13 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1467 SWAP2 SWAP1 PUSH2 0x1E81 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3D0601F3B0E52FD772F1FA71D91651B34B6A11144BEA30D74E0F820019A04DC2 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x14B1 JUMPI PUSH2 0x14B0 PUSH2 0x2D13 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH2 0x14C5 SWAP2 SWAP1 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x135C JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x14EA PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x155C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1553 SWAP2 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1565 DUP2 PUSH2 0x1A5A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1570 PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0x1578 PUSH2 0x182B JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x15BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15B2 SWAP1 PUSH2 0x2DB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x163D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1634 SWAP1 PUSH2 0x2E20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x168C SWAP2 SWAP1 PUSH2 0x258C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1780 JUMPI PUSH1 0x0 PUSH2 0x16D1 PUSH2 0xD73 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x16F4 SWAP1 PUSH2 0x25F1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1731 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x177A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1771 SWAP1 PUSH2 0x2652 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x17B3 JUMP JUMPDEST PUSH2 0x17B2 PUSH2 0x178B PUSH2 0xD73 JUMP JUMPDEST DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x187A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17D2 PUSH2 0xD73 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9B1BFA7FA9EE420A16E124F794C35AC9F90472ACC99140EB2F6447C714CAD8EB DUP4 PUSH1 0x40 MLOAD PUSH2 0x1817 SWAP2 SWAP1 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1827 PUSH2 0x18F9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x1870 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1867 SWAP1 PUSH2 0x2E8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x18F4 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x18AD SWAP3 SWAP2 SWAP1 PUSH2 0x2EAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1B59 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x197F DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1938 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2ED5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1B59 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x19B5 PUSH2 0x1BFB JUMP JUMPDEST PUSH2 0x19BE DUP2 PUSH2 0x1C3B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x19C9 PUSH2 0x1BFB JUMP JUMPDEST PUSH2 0x19D1 PUSH2 0x1CC1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x19DB PUSH2 0x1CD3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19F9 PUSH2 0xD73 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A58 JUMPI PUSH2 0x1A1C PUSH2 0x1CD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A4F SWAP2 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A64 PUSH2 0x1B31 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP9 GAS CALL DUP1 PUSH2 0x1B7C JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH1 0x0 MLOAD SWAP2 POP POP PUSH1 0x0 DUP3 EQ PUSH2 0x1B97 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1BB3 JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1BF5 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BEC SWAP2 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1C03 PUSH2 0x1CDB JUMP JUMPDEST PUSH2 0x1C39 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1C43 PUSH2 0x1BFB JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CB5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CAC SWAP2 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1CBE DUP2 PUSH2 0x1A5A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1CC9 PUSH2 0x1BFB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CE5 PUSH2 0x1985 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1D3F DUP3 PUSH2 0x1CFB JUMP JUMPDEST SWAP2 POP PUSH2 0x1D4A DUP4 PUSH2 0x1CFB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D62 JUMPI PUSH2 0x1D61 PUSH2 0x1D05 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D71 DUP2 PUSH2 0x1CFB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D8C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D68 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x537765657473706F743A20757365206465706F73697428290000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DD9 PUSH1 0x18 DUP4 PUSH2 0x1D92 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DE4 DUP3 PUSH2 0x1DA3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E08 DUP2 PUSH2 0x1DCC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E4E DUP3 PUSH2 0x1E23 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E5E DUP2 PUSH2 0x1E43 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E7B DUP2 PUSH2 0x1E55 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E97 JUMPI PUSH2 0x1E96 PUSH2 0x1E19 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EA5 DUP5 DUP3 DUP6 ADD PUSH2 0x1E6C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EB7 DUP2 PUSH2 0x1E43 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ED2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1EAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EE1 DUP2 PUSH2 0x1CFB JUMP JUMPDEST DUP2 EQ PUSH2 0x1EEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EFE DUP2 PUSH2 0x1ED8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F1B JUMPI PUSH2 0x1F1A PUSH2 0x1E19 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F29 DUP6 DUP3 DUP7 ADD PUSH2 0x1E6C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F3A DUP6 DUP3 DUP7 ADD PUSH2 0x1EEF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F5B JUMPI PUSH2 0x1F5A PUSH2 0x1E19 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F69 DUP6 DUP3 DUP7 ADD PUSH2 0x1E6C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F7A DUP6 DUP3 DUP7 ADD PUSH2 0x1E6C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FA9 PUSH2 0x1FA4 PUSH2 0x1F9F DUP5 PUSH2 0x1E23 JUMP JUMPDEST PUSH2 0x1F84 JUMP JUMPDEST PUSH2 0x1E23 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FBB DUP3 PUSH2 0x1F8E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FCD DUP3 PUSH2 0x1FB0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FDD DUP2 PUSH2 0x1FC2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FF8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1FD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x201B DUP2 PUSH2 0x1FFE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x204A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x202F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2072 DUP3 PUSH2 0x2021 JUMP JUMPDEST PUSH2 0x207C DUP2 DUP6 PUSH2 0x1D92 JUMP JUMPDEST SWAP4 POP PUSH2 0x208C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x202C JUMP JUMPDEST PUSH2 0x2095 DUP2 PUSH2 0x2056 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x20B5 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2012 JUMP JUMPDEST PUSH2 0x20C2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2012 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x20D4 DUP2 DUP5 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x20E7 DUP2 PUSH2 0x1FFE JUMP JUMPDEST DUP2 EQ PUSH2 0x20F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2104 DUP2 PUSH2 0x20DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x214C DUP3 PUSH2 0x2056 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x216B JUMPI PUSH2 0x216A PUSH2 0x2114 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x217E PUSH2 0x1E0F JUMP JUMPDEST SWAP1 POP PUSH2 0x218A DUP3 DUP3 PUSH2 0x2143 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x21AA JUMPI PUSH2 0x21A9 PUSH2 0x2114 JUMP JUMPDEST JUMPDEST PUSH2 0x21B3 DUP3 PUSH2 0x2056 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21E2 PUSH2 0x21DD DUP5 PUSH2 0x218F JUMP JUMPDEST PUSH2 0x2174 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x21FE JUMPI PUSH2 0x21FD PUSH2 0x210F JUMP JUMPDEST JUMPDEST PUSH2 0x2209 DUP5 DUP3 DUP6 PUSH2 0x21C0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2226 JUMPI PUSH2 0x2225 PUSH2 0x210A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2236 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x21CF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2258 JUMPI PUSH2 0x2257 PUSH2 0x1E19 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2266 DUP7 DUP3 DUP8 ADD PUSH2 0x20F5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2277 DUP7 DUP3 DUP8 ADD PUSH2 0x20F5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2298 JUMPI PUSH2 0x2297 PUSH2 0x1E1E JUMP JUMPDEST JUMPDEST PUSH2 0x22A4 DUP7 DUP3 DUP8 ADD PUSH2 0x2211 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x22C7 JUMPI PUSH2 0x22C6 PUSH2 0x1E19 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22D5 DUP7 DUP3 DUP8 ADD PUSH2 0x1E6C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x22E6 DUP7 DUP3 DUP8 ADD PUSH2 0x1E6C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x22F7 DUP7 DUP3 DUP8 ADD PUSH2 0x1EEF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2321 JUMPI PUSH2 0x2320 PUSH2 0x210A JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x233E JUMPI PUSH2 0x233D PUSH2 0x2301 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x235A JUMPI PUSH2 0x2359 PUSH2 0x2306 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2377 JUMPI PUSH2 0x2376 PUSH2 0x210A JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2394 JUMPI PUSH2 0x2393 PUSH2 0x2301 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x23B0 JUMPI PUSH2 0x23AF PUSH2 0x2306 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x23D3 JUMPI PUSH2 0x23D2 PUSH2 0x1E19 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23E1 DUP9 DUP3 DUP10 ADD PUSH2 0x1E6C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2402 JUMPI PUSH2 0x2401 PUSH2 0x1E1E JUMP JUMPDEST JUMPDEST PUSH2 0x240E DUP9 DUP3 DUP10 ADD PUSH2 0x230B JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2431 JUMPI PUSH2 0x2430 PUSH2 0x1E1E JUMP JUMPDEST JUMPDEST PUSH2 0x243D DUP9 DUP3 DUP10 ADD PUSH2 0x2361 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2467 PUSH2 0x2462 PUSH2 0x245D DUP5 PUSH2 0x1FFE JUMP JUMPDEST PUSH2 0x1F84 JUMP JUMPDEST PUSH2 0x1CFB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2477 DUP2 PUSH2 0x244C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2492 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1D68 JUMP JUMPDEST PUSH2 0x249F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x246E JUMP JUMPDEST PUSH2 0x24AC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x246E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F20636C61696D61626C6520616D6F756E7400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24EA PUSH1 0x13 DUP4 PUSH2 0x1D92 JUMP JUMPDEST SWAP2 POP PUSH2 0x24F5 DUP3 PUSH2 0x24B4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2519 DUP2 PUSH2 0x24DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E647320696E206A617200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2556 PUSH1 0x19 DUP4 PUSH2 0x1D92 JUMP JUMPDEST SWAP2 POP PUSH2 0x2561 DUP3 PUSH2 0x2520 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2585 DUP2 PUSH2 0x2549 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2597 DUP3 PUSH2 0x1CFB JUMP JUMPDEST SWAP2 POP PUSH2 0x25A2 DUP4 PUSH2 0x1CFB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x25BA JUMPI PUSH2 0x25B9 PUSH2 0x1D05 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25DB PUSH1 0x0 DUP4 PUSH2 0x25C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x25E6 DUP3 PUSH2 0x25CB JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25FC DUP3 PUSH2 0x25CE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4574686572207472616E73666572206661696C65640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x263C PUSH1 0x15 DUP4 PUSH2 0x1D92 JUMP JUMPDEST SWAP2 POP PUSH2 0x2647 DUP3 PUSH2 0x2606 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x266B DUP2 PUSH2 0x262F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E636F727265637420457468657220616D6F756E7400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26A8 PUSH1 0x16 DUP4 PUSH2 0x1D92 JUMP JUMPDEST SWAP2 POP PUSH2 0x26B3 DUP3 PUSH2 0x2672 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26D7 DUP2 PUSH2 0x269B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4465706F73697420616D6F756E74206D75737420626520677265617465722074 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x68616E207A65726F000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x273A PUSH1 0x28 DUP4 PUSH2 0x1D92 JUMP JUMPDEST SWAP2 POP PUSH2 0x2745 DUP3 PUSH2 0x26DE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2769 DUP2 PUSH2 0x272D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2795 PUSH2 0x2790 PUSH2 0x278B DUP5 PUSH2 0x2770 JUMP JUMPDEST PUSH2 0x1F84 JUMP JUMPDEST PUSH2 0x1FFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27A5 DUP2 PUSH2 0x277A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27C0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x279C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x280D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2820 JUMPI PUSH2 0x281F PUSH2 0x27C6 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x283B DUP2 PUSH2 0x2826 JUMP JUMPDEST DUP2 EQ PUSH2 0x2846 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2858 DUP2 PUSH2 0x2832 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2874 JUMPI PUSH2 0x2873 PUSH2 0x1E19 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2882 DUP5 DUP3 DUP6 ADD PUSH2 0x2849 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F7420616E2061646D696E00000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28C1 PUSH1 0x16 DUP4 PUSH2 0x1D92 JUMP JUMPDEST SWAP2 POP PUSH2 0x28CC DUP3 PUSH2 0x288B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28F0 DUP2 PUSH2 0x28B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53746172742074696D65206D757374206265206265666F726520656E64207469 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D65000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2953 PUSH1 0x22 DUP4 PUSH2 0x1D92 JUMP JUMPDEST SWAP2 POP PUSH2 0x295E DUP3 PUSH2 0x28F7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2982 DUP2 PUSH2 0x2946 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x29EB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x29AE JUMP JUMPDEST PUSH2 0x29F5 DUP7 DUP4 PUSH2 0x29AE JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A28 PUSH2 0x2A23 PUSH2 0x2A1E DUP5 PUSH2 0x1CFB JUMP JUMPDEST PUSH2 0x1F84 JUMP JUMPDEST PUSH2 0x1CFB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A42 DUP4 PUSH2 0x2A0D JUMP JUMPDEST PUSH2 0x2A56 PUSH2 0x2A4E DUP3 PUSH2 0x2A2F JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x29BB JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x2A6B PUSH2 0x2A5E JUMP JUMPDEST PUSH2 0x2A76 DUP2 DUP5 DUP5 PUSH2 0x2A39 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2A9A JUMPI PUSH2 0x2A8F PUSH1 0x0 DUP3 PUSH2 0x2A63 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2A7C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2ADF JUMPI PUSH2 0x2AB0 DUP2 PUSH2 0x2989 JUMP JUMPDEST PUSH2 0x2AB9 DUP5 PUSH2 0x299E JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2AC8 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2ADC PUSH2 0x2AD4 DUP6 PUSH2 0x299E JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2A7B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B02 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2AE4 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B1B DUP4 DUP4 PUSH2 0x2AF1 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2B34 DUP3 PUSH2 0x2021 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B4D JUMPI PUSH2 0x2B4C PUSH2 0x2114 JUMP JUMPDEST JUMPDEST PUSH2 0x2B57 DUP3 SLOAD PUSH2 0x27F5 JUMP JUMPDEST PUSH2 0x2B62 DUP3 DUP3 DUP6 PUSH2 0x2A9E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2B95 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2B83 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2B8D DUP6 DUP3 PUSH2 0x2B0F JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2BF5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2BA3 DUP7 PUSH2 0x2989 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2BCB JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2BA6 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2BE8 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2BE4 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2AF1 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2C12 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x246E JUMP JUMPDEST PUSH2 0x2C1F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x246E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2C31 DUP2 DUP5 PUSH2 0x2067 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5A65726F20616464726573732075736572000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C71 PUSH1 0x11 DUP4 PUSH2 0x1D92 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C7C DUP3 PUSH2 0x2C3B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CA0 DUP2 PUSH2 0x2C64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D69736D617463686564206172726179206C656E677468730000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CDD PUSH1 0x18 DUP4 PUSH2 0x1D92 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CE8 DUP3 PUSH2 0x2CA7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D0C DUP2 PUSH2 0x2CD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x5769746864726177616C20616D6F756E74206D75737420626520677265617465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72207468616E207A65726F000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D9E PUSH1 0x2B DUP4 PUSH2 0x1D92 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DA9 DUP3 PUSH2 0x2D42 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DCD DUP2 PUSH2 0x2D91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E64730000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E0A PUSH1 0x12 DUP4 PUSH2 0x1D92 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E15 DUP3 PUSH2 0x2DD4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E39 DUP2 PUSH2 0x2DFD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E76 PUSH1 0x1F DUP4 PUSH2 0x1D92 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E81 DUP3 PUSH2 0x2E40 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2EA5 DUP2 PUSH2 0x2E69 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2EC1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1EAE JUMP JUMPDEST PUSH2 0x2ECE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D68 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2EEA PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1EAE JUMP JUMPDEST PUSH2 0x2EF7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1EAE JUMP JUMPDEST PUSH2 0x2F04 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D68 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 NOT PUSH16 0x9BBB7993E4F8222BB807BD2F78C7E974 TSTORE 0xE4 PC 0xF7 0x28 GASPRICE 0x21 0xCD GT 0xC8 PUSH22 0xD3FD64736F6C634300081C0033000000000000000000 ",
							"sourceMap": "454:6250:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6470:9;6439:13;:27;613:1;6439:27;;;;;;;;;;;;;;;;:40;;;;;;;:::i;:::-;;;;;;;;613:1;6495:44;;6503:10;6495:44;;;6529:9;6495:44;;;;;;:::i;:::-;;;;;;;;454:6250;;6659:34;;;;;;;;;;:::i;:::-;;;;;;;;2971:932;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;566:49;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2412:474;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1977:217;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3155:101:0;;;;;;;;;;;;;:::i;:::-;;622:21:13;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;883:25;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;2441:144:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5261:278:13;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1097:69;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;999:48;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4135:261;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4495:517;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3405:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5744:578:13;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2971:932;2526:21:2;:19;:21::i;:::-;3066:12:13::1;:18;;;;;;;;;;;;3048:36;;:15;:36;:74;;;;3106:12;:16;;;;;;;;;;;;3088:34;;:15;:34;3048:74;3044:183;;;3161:15;3178:12;:18;;;;;;;;;;;;3198:12;:16;;;;;;;;;;;;3146:69;;;;;;;;;;;;;:::i;:::-;;;;;;;;3044:183;3239:25;3267:14;:26;3282:10;3267:26;;;;;;;;;;;;;;;:33;3294:5;3267:33;;;;;;;;;;;;;;;;3239:61;;3339:1;3319:17;:21;3311:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;3407:17;3383:13;:20;3397:5;3383:20;;;;;;;;;;;;;;;;:41;;3375:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;3503:1;3467:14;:26;3482:10;3467:26;;;;;;;;;;;;;;;:33;3494:5;3467:33;;;;;;;;;;;;;;;:37;;;;3539:17;3515:13;:20;3529:5;3515:20;;;;;;;;;;;;;;;;:41;;;;;;;:::i;:::-;;;;;;;;613:1;3573:21;;:5;:21;;::::0;3569:264:::1;;3612:12;3630:10;:15;;3653:17;3630:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3611:64;;;3698:7;3690:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;3596:147;3569:264;;;3764:57;3791:10;3803:17;3771:5;3764:26;;;;:57;;;;;:::i;:::-;3569:264;3870:5;3850:45;;3858:10;3850:45;;;3877:17;3850:45;;;;;;:::i;:::-;;;;;;;;3023:880;2568:20:2::0;:18;:20::i;:::-;2971:932:13;:::o;566:49::-;613:1;566:49;:::o;2412:474::-;2526:21:2;:19;:21::i;:::-;613:1:13::1;2506:21;;:5;:21;;::::0;2502:284:::1;;2565:6;2552:9;:19;2544:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;2502:284;;;2648:1;2639:6;:10;2631:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;2709:65;2740:10;2760:4;2767:6;2716:5;2709:30;;;;:65;;;;;;:::i;:::-;2502:284;2822:6;2798:13;:20;2812:5;2798:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;2864:5;2844:34;;2852:10;2844:34;;;2871:6;2844:34;;;;;;:::i;:::-;;;;;;;;2568:20:2::0;:18;:20::i;:::-;2412:474:13;;:::o;1977:217::-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;2061:21:13::1;2076:5;2061:14;:21::i;:::-;2126:24;:22;:24::i;:::-;2178:7;2161:6;;:25;;;;;;;;;;;;;;;;;;5070:14:1::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;1977:217:13;;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;622:21:13:-;;;;;;;;;;;;;:::o;883:25::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2441:144:0:-;2487:7;2506:24;2533:20;:18;:20::i;:::-;2506:47;;2570:1;:8;;;;;;;;;;;;2563:15;;;2441:144;:::o;5261:278:13:-;1725:6;;;;;;;;;;;:14;;;1740:10;1725:26;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1717:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;5380:3:::1;5372:11;;:5;:11;;;5364:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;5448:30;;;;;;;;5454:5;5448:30;;;;;;5461:3;5448:30;;;;;;5466:11;5448:30;;::::0;5433:12:::1;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;5494:37;5507:5;5514:3;5519:11;5494:37;;;;;;;;:::i;:::-;;;;;;;;5261:278:::0;;;:::o;1097:69::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;999:48::-;;;;;;;;;;;;;;;;;:::o;4135:261::-;1725:6;;;;;;;;;;;:14;;;1740:10;1725:26;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1717:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;4260:1:::1;4244:18;;:4;:18;;::::0;4236:48:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;4325:6;4295:14;:20;4310:4;4295:20;;;;;;;;;;;;;;;:27;4316:5;4295:27;;;;;;;;;;;;;;;:36;;;;4374:5;4347:41;;4368:4;4347:41;;;4381:6;4347:41;;;;;;:::i;:::-;;;;;;;;4135:261:::0;;;:::o;4495:517::-;1725:6;;;;;;;;;;;:14;;;1740:10;1725:26;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1717:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;4682:7:::1;;:14;;4666:5;;:12;;:30;4658:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;4741:9;4736:269;4760:5;;:12;;4756:1;:16;4736:269;;;4914:7;;4922:1;4914:10;;;;;;;:::i;:::-;;;;;;;;4880:14;:24;4895:5;;4901:1;4895:8;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;4880:24;;;;;;;;;;;;;;;:31;4905:5;4880:31;;;;;;;;;;;;;;;:44;;;;4975:5;4944:49;;4965:5;;4971:1;4965:8;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;4944:49;;;4982:7;;4990:1;4982:10;;;;;;;:::i;:::-;;;;;;;;4944:49;;;;;;:::i;:::-;;;;;;;;4774:3;;;;;;;4736:269;;;;4495:517:::0;;;;;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;3509:1:::1;3489:22;;:8;:22;;::::0;3485:91:::1;;3562:1;3534:31;;;;;;;;;;;:::i;:::-;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;5744:578:13:-;2334:13:0;:11;:13::i;:::-;2526:21:2::1;:19;:21::i;:::-;5854:1:13::2;5845:6;:10;5837:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;5946:6;5922:13;:20;5936:5;5922:20;;;;;;;;;;;;;;;;:30;;5914:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;6012:6;5988:13;:20;6002:5;5988:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;613:1;6035:21;;:5;:21;;::::0;6031:236:::2;;6074:12;6092:7;:5;:7::i;:::-;:12;;6112:6;6092:31;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6073:50;;;6146:7;6138:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;6058:133;6031:236;;;6212:43;6239:7;:5;:7::i;:::-;6248:6;6219:5;6212:26;;;;:43;;;;;:::i;:::-;6031:236;6300:5;6282:32;;6291:7;:5;:7::i;:::-;6282:32;;;6307:6;6282:32;;;;;;:::i;:::-;;;;;;;;2568:20:2::1;:18;:20::i;:::-;5744:578:13::0;;:::o;2601:287:2:-;1851:1;2733:7;;:19;2725:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1851:1;2863:7;:18;;;;2601:287::o;1271:160:8:-;1353:71;1373:5;1395;:14;;;1412:2;1416:5;1380:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1353:19;:71::i;:::-;1271:160;;;:::o;2894:209:2:-;1808:1;3074:7;:22;;;;2894:209::o;1670:188:8:-;1770:81;1790:5;1812;:18;;;1833:4;1839:2;1843:5;1797:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1770:19;:81::i;:::-;1670:188;;;;:::o;8737:170:1:-;8795:30;8870:21;8860:31;;8737:170;:::o;1847:127:0:-;6931:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;:::-;1847:127:::0;:::o;1889:111:2:-;6931:20:1;:18;:20::i;:::-;1959:34:2::1;:32;:34::i;:::-;1889:111::o:0;2658:162:0:-;2728:12;:10;:12::i;:::-;2717:23;;:7;:5;:7::i;:::-;:23;;;2713:101;;2790:12;:10;:12::i;:::-;2763:40;;;;;;;;;;;:::i;:::-;;;;;;;;2713:101;2658:162::o;3774:248::-;3847:24;3874:20;:18;:20::i;:::-;3847:47;;3904:16;3923:1;:8;;;;;;;;;;;;3904:27;;3952:8;3941:1;:8;;;:19;;;;;;;;;;;;;;;;;;4006:8;3975:40;;3996:8;3975:40;;;;;;;;;;;;3837:185;;3774:248;:::o;1192:159::-;1244:24;1313:22;1303:32;;1192:159;:::o;7738:720:8:-;7818:18;7846:19;7984:4;7981:1;7974:4;7968:11;7961:4;7955;7951:15;7948:1;7941:5;7934;7929:60;8041:7;8031:176;;8085:4;8079:11;8130:16;8127:1;8122:3;8107:40;8176:16;8171:3;8164:29;8031:176;8234:16;8220:30;;8284:1;8278:8;8263:23;;7900:396;8324:1;8310:10;:15;:68;;8377:1;8362:11;:16;;8310:68;;;8358:1;8336:5;8328:26;;;:31;8310:68;8306:146;;;8434:5;8401:40;;;;;;;;;;;:::i;:::-;;;;;;;;8306:146;7808:650;;7738:720;;:::o;7084:141:1:-;7151:17;:15;:17::i;:::-;7146:73;;7191:17;;;;;;;;;;;;;;7146:73;7084:141::o;1980:235:0:-;6931:20:1;:18;:20::i;:::-;2100:1:0::1;2076:26;;:12;:26;;::::0;2072:95:::1;;2153:1;2125:31;;;;;;;;;;;:::i;:::-;;;;;;;;2072:95;2176:32;2195:12;2176:18;:32::i;:::-;1980:235:::0;:::o;2006:109:2:-;6931:20:1;:18;:20::i;:::-;1808:1:2::1;2086:7;:22;;;;2006:109::o:0;887:96:3:-;940:7;966:10;959:17;;887:96;:::o;8487:120:1:-;8537:4;8560:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8553:47;;8487:120;:::o;7:77:14:-;44:7;73:5;62:16;;7:77;;;:::o;90:180::-;138:77;135:1;128:88;235:4;232:1;225:15;259:4;256:1;249:15;276:191;316:3;335:20;353:1;335:20;:::i;:::-;330:25;;369:20;387:1;369:20;:::i;:::-;364:25;;412:1;409;405:9;398:16;;433:3;430:1;427:10;424:36;;;440:18;;:::i;:::-;424:36;276:191;;;;:::o;473:118::-;560:24;578:5;560:24;:::i;:::-;555:3;548:37;473:118;;:::o;597:222::-;690:4;728:2;717:9;713:18;705:26;;741:71;809:1;798:9;794:17;785:6;741:71;:::i;:::-;597:222;;;;:::o;825:169::-;909:11;943:6;938:3;931:19;983:4;978:3;974:14;959:29;;825:169;;;;:::o;1000:174::-;1140:26;1136:1;1128:6;1124:14;1117:50;1000:174;:::o;1180:366::-;1322:3;1343:67;1407:2;1402:3;1343:67;:::i;:::-;1336:74;;1419:93;1508:3;1419:93;:::i;:::-;1537:2;1532:3;1528:12;1521:19;;1180:366;;;:::o;1552:419::-;1718:4;1756:2;1745:9;1741:18;1733:26;;1805:9;1799:4;1795:20;1791:1;1780:9;1776:17;1769:47;1833:131;1959:4;1833:131;:::i;:::-;1825:139;;1552:419;;;:::o;1977:75::-;2010:6;2043:2;2037:9;2027:19;;1977:75;:::o;2058:117::-;2167:1;2164;2157:12;2181:117;2290:1;2287;2280:12;2304:126;2341:7;2381:42;2374:5;2370:54;2359:65;;2304:126;;;:::o;2436:96::-;2473:7;2502:24;2520:5;2502:24;:::i;:::-;2491:35;;2436:96;;;:::o;2538:122::-;2611:24;2629:5;2611:24;:::i;:::-;2604:5;2601:35;2591:63;;2650:1;2647;2640:12;2591:63;2538:122;:::o;2666:139::-;2712:5;2750:6;2737:20;2728:29;;2766:33;2793:5;2766:33;:::i;:::-;2666:139;;;;:::o;2811:329::-;2870:6;2919:2;2907:9;2898:7;2894:23;2890:32;2887:119;;;2925:79;;:::i;:::-;2887:119;3045:1;3070:53;3115:7;3106:6;3095:9;3091:22;3070:53;:::i;:::-;3060:63;;3016:117;2811:329;;;;:::o;3146:118::-;3233:24;3251:5;3233:24;:::i;:::-;3228:3;3221:37;3146:118;;:::o;3270:222::-;3363:4;3401:2;3390:9;3386:18;3378:26;;3414:71;3482:1;3471:9;3467:17;3458:6;3414:71;:::i;:::-;3270:222;;;;:::o;3498:122::-;3571:24;3589:5;3571:24;:::i;:::-;3564:5;3561:35;3551:63;;3610:1;3607;3600:12;3551:63;3498:122;:::o;3626:139::-;3672:5;3710:6;3697:20;3688:29;;3726:33;3753:5;3726:33;:::i;:::-;3626:139;;;;:::o;3771:474::-;3839:6;3847;3896:2;3884:9;3875:7;3871:23;3867:32;3864:119;;;3902:79;;:::i;:::-;3864:119;4022:1;4047:53;4092:7;4083:6;4072:9;4068:22;4047:53;:::i;:::-;4037:63;;3993:117;4149:2;4175:53;4220:7;4211:6;4200:9;4196:22;4175:53;:::i;:::-;4165:63;;4120:118;3771:474;;;;;:::o;4251:::-;4319:6;4327;4376:2;4364:9;4355:7;4351:23;4347:32;4344:119;;;4382:79;;:::i;:::-;4344:119;4502:1;4527:53;4572:7;4563:6;4552:9;4548:22;4527:53;:::i;:::-;4517:63;;4473:117;4629:2;4655:53;4700:7;4691:6;4680:9;4676:22;4655:53;:::i;:::-;4645:63;;4600:118;4251:474;;;;;:::o;4731:60::-;4759:3;4780:5;4773:12;;4731:60;;;:::o;4797:142::-;4847:9;4880:53;4898:34;4907:24;4925:5;4907:24;:::i;:::-;4898:34;:::i;:::-;4880:53;:::i;:::-;4867:66;;4797:142;;;:::o;4945:126::-;4995:9;5028:37;5059:5;5028:37;:::i;:::-;5015:50;;4945:126;;;:::o;5077:142::-;5143:9;5176:37;5207:5;5176:37;:::i;:::-;5163:50;;5077:142;;;:::o;5225:163::-;5328:53;5375:5;5328:53;:::i;:::-;5323:3;5316:66;5225:163;;:::o;5394:254::-;5503:4;5541:2;5530:9;5526:18;5518:26;;5554:87;5638:1;5627:9;5623:17;5614:6;5554:87;:::i;:::-;5394:254;;;;:::o;5654:101::-;5690:7;5730:18;5723:5;5719:30;5708:41;;5654:101;;;:::o;5761:115::-;5846:23;5863:5;5846:23;:::i;:::-;5841:3;5834:36;5761:115;;:::o;5882:99::-;5934:6;5968:5;5962:12;5952:22;;5882:99;;;:::o;5987:248::-;6069:1;6079:113;6093:6;6090:1;6087:13;6079:113;;;6178:1;6173:3;6169:11;6163:18;6159:1;6154:3;6150:11;6143:39;6115:2;6112:1;6108:10;6103:15;;6079:113;;;6226:1;6217:6;6212:3;6208:16;6201:27;6049:186;5987:248;;;:::o;6241:102::-;6282:6;6333:2;6329:7;6324:2;6317:5;6313:14;6309:28;6299:38;;6241:102;;;:::o;6349:377::-;6437:3;6465:39;6498:5;6465:39;:::i;:::-;6520:71;6584:6;6579:3;6520:71;:::i;:::-;6513:78;;6600:65;6658:6;6653:3;6646:4;6639:5;6635:16;6600:65;:::i;:::-;6690:29;6712:6;6690:29;:::i;:::-;6685:3;6681:39;6674:46;;6441:285;6349:377;;;;:::o;6732:525::-;6897:4;6935:2;6924:9;6920:18;6912:26;;6948:69;7014:1;7003:9;6999:17;6990:6;6948:69;:::i;:::-;7027:70;7093:2;7082:9;7078:18;7069:6;7027:70;:::i;:::-;7144:9;7138:4;7134:20;7129:2;7118:9;7114:18;7107:48;7172:78;7245:4;7236:6;7172:78;:::i;:::-;7164:86;;6732:525;;;;;;:::o;7263:120::-;7335:23;7352:5;7335:23;:::i;:::-;7328:5;7325:34;7315:62;;7373:1;7370;7363:12;7315:62;7263:120;:::o;7389:137::-;7434:5;7472:6;7459:20;7450:29;;7488:32;7514:5;7488:32;:::i;:::-;7389:137;;;;:::o;7532:117::-;7641:1;7638;7631:12;7655:117;7764:1;7761;7754:12;7778:180;7826:77;7823:1;7816:88;7923:4;7920:1;7913:15;7947:4;7944:1;7937:15;7964:281;8047:27;8069:4;8047:27;:::i;:::-;8039:6;8035:40;8177:6;8165:10;8162:22;8141:18;8129:10;8126:34;8123:62;8120:88;;;8188:18;;:::i;:::-;8120:88;8228:10;8224:2;8217:22;8007:238;7964:281;;:::o;8251:129::-;8285:6;8312:20;;:::i;:::-;8302:30;;8341:33;8369:4;8361:6;8341:33;:::i;:::-;8251:129;;;:::o;8386:308::-;8448:4;8538:18;8530:6;8527:30;8524:56;;;8560:18;;:::i;:::-;8524:56;8598:29;8620:6;8598:29;:::i;:::-;8590:37;;8682:4;8676;8672:15;8664:23;;8386:308;;;:::o;8700:148::-;8798:6;8793:3;8788;8775:30;8839:1;8830:6;8825:3;8821:16;8814:27;8700:148;;;:::o;8854:425::-;8932:5;8957:66;8973:49;9015:6;8973:49;:::i;:::-;8957:66;:::i;:::-;8948:75;;9046:6;9039:5;9032:21;9084:4;9077:5;9073:16;9122:3;9113:6;9108:3;9104:16;9101:25;9098:112;;;9129:79;;:::i;:::-;9098:112;9219:54;9266:6;9261:3;9256;9219:54;:::i;:::-;8938:341;8854:425;;;;;:::o;9299:340::-;9355:5;9404:3;9397:4;9389:6;9385:17;9381:27;9371:122;;9412:79;;:::i;:::-;9371:122;9529:6;9516:20;9554:79;9629:3;9621:6;9614:4;9606:6;9602:17;9554:79;:::i;:::-;9545:88;;9361:278;9299:340;;;;:::o;9645:795::-;9730:6;9738;9746;9795:2;9783:9;9774:7;9770:23;9766:32;9763:119;;;9801:79;;:::i;:::-;9763:119;9921:1;9946:52;9990:7;9981:6;9970:9;9966:22;9946:52;:::i;:::-;9936:62;;9892:116;10047:2;10073:52;10117:7;10108:6;10097:9;10093:22;10073:52;:::i;:::-;10063:62;;10018:117;10202:2;10191:9;10187:18;10174:32;10233:18;10225:6;10222:30;10219:117;;;10255:79;;:::i;:::-;10219:117;10360:63;10415:7;10406:6;10395:9;10391:22;10360:63;:::i;:::-;10350:73;;10145:288;9645:795;;;;;:::o;10446:619::-;10523:6;10531;10539;10588:2;10576:9;10567:7;10563:23;10559:32;10556:119;;;10594:79;;:::i;:::-;10556:119;10714:1;10739:53;10784:7;10775:6;10764:9;10760:22;10739:53;:::i;:::-;10729:63;;10685:117;10841:2;10867:53;10912:7;10903:6;10892:9;10888:22;10867:53;:::i;:::-;10857:63;;10812:118;10969:2;10995:53;11040:7;11031:6;11020:9;11016:22;10995:53;:::i;:::-;10985:63;;10940:118;10446:619;;;;;:::o;11071:117::-;11180:1;11177;11170:12;11194:117;11303:1;11300;11293:12;11334:568;11407:8;11417:6;11467:3;11460:4;11452:6;11448:17;11444:27;11434:122;;11475:79;;:::i;:::-;11434:122;11588:6;11575:20;11565:30;;11618:18;11610:6;11607:30;11604:117;;;11640:79;;:::i;:::-;11604:117;11754:4;11746:6;11742:17;11730:29;;11808:3;11800:4;11792:6;11788:17;11778:8;11774:32;11771:41;11768:128;;;11815:79;;:::i;:::-;11768:128;11334:568;;;;;:::o;11925:::-;11998:8;12008:6;12058:3;12051:4;12043:6;12039:17;12035:27;12025:122;;12066:79;;:::i;:::-;12025:122;12179:6;12166:20;12156:30;;12209:18;12201:6;12198:30;12195:117;;;12231:79;;:::i;:::-;12195:117;12345:4;12337:6;12333:17;12321:29;;12399:3;12391:4;12383:6;12379:17;12369:8;12365:32;12362:41;12359:128;;;12406:79;;:::i;:::-;12359:128;11925:568;;;;;:::o;12499:1079::-;12630:6;12638;12646;12654;12662;12711:2;12699:9;12690:7;12686:23;12682:32;12679:119;;;12717:79;;:::i;:::-;12679:119;12837:1;12862:53;12907:7;12898:6;12887:9;12883:22;12862:53;:::i;:::-;12852:63;;12808:117;12992:2;12981:9;12977:18;12964:32;13023:18;13015:6;13012:30;13009:117;;;13045:79;;:::i;:::-;13009:117;13158:80;13230:7;13221:6;13210:9;13206:22;13158:80;:::i;:::-;13140:98;;;;12935:313;13315:2;13304:9;13300:18;13287:32;13346:18;13338:6;13335:30;13332:117;;;13368:79;;:::i;:::-;13332:117;13481:80;13553:7;13544:6;13533:9;13529:22;13481:80;:::i;:::-;13463:98;;;;13258:313;12499:1079;;;;;;;;:::o;13584:140::-;13633:9;13666:52;13684:33;13693:23;13710:5;13693:23;:::i;:::-;13684:33;:::i;:::-;13666:52;:::i;:::-;13653:65;;13584:140;;;:::o;13730:129::-;13816:36;13846:5;13816:36;:::i;:::-;13811:3;13804:49;13730:129;;:::o;13865:438::-;14012:4;14050:2;14039:9;14035:18;14027:26;;14063:71;14131:1;14120:9;14116:17;14107:6;14063:71;:::i;:::-;14144;14211:2;14200:9;14196:18;14187:6;14144:71;:::i;:::-;14225;14292:2;14281:9;14277:18;14268:6;14225:71;:::i;:::-;13865:438;;;;;;:::o;14309:169::-;14449:21;14445:1;14437:6;14433:14;14426:45;14309:169;:::o;14484:366::-;14626:3;14647:67;14711:2;14706:3;14647:67;:::i;:::-;14640:74;;14723:93;14812:3;14723:93;:::i;:::-;14841:2;14836:3;14832:12;14825:19;;14484:366;;;:::o;14856:419::-;15022:4;15060:2;15049:9;15045:18;15037:26;;15109:9;15103:4;15099:20;15095:1;15084:9;15080:17;15073:47;15137:131;15263:4;15137:131;:::i;:::-;15129:139;;14856:419;;;:::o;15281:175::-;15421:27;15417:1;15409:6;15405:14;15398:51;15281:175;:::o;15462:366::-;15604:3;15625:67;15689:2;15684:3;15625:67;:::i;:::-;15618:74;;15701:93;15790:3;15701:93;:::i;:::-;15819:2;15814:3;15810:12;15803:19;;15462:366;;;:::o;15834:419::-;16000:4;16038:2;16027:9;16023:18;16015:26;;16087:9;16081:4;16077:20;16073:1;16062:9;16058:17;16051:47;16115:131;16241:4;16115:131;:::i;:::-;16107:139;;15834:419;;;:::o;16259:194::-;16299:4;16319:20;16337:1;16319:20;:::i;:::-;16314:25;;16353:20;16371:1;16353:20;:::i;:::-;16348:25;;16397:1;16394;16390:9;16382:17;;16421:1;16415:4;16412:11;16409:37;;;16426:18;;:::i;:::-;16409:37;16259:194;;;;:::o;16459:147::-;16560:11;16597:3;16582:18;;16459:147;;;;:::o;16612:114::-;;:::o;16732:398::-;16891:3;16912:83;16993:1;16988:3;16912:83;:::i;:::-;16905:90;;17004:93;17093:3;17004:93;:::i;:::-;17122:1;17117:3;17113:11;17106:18;;16732:398;;;:::o;17136:379::-;17320:3;17342:147;17485:3;17342:147;:::i;:::-;17335:154;;17506:3;17499:10;;17136:379;;;:::o;17521:171::-;17661:23;17657:1;17649:6;17645:14;17638:47;17521:171;:::o;17698:366::-;17840:3;17861:67;17925:2;17920:3;17861:67;:::i;:::-;17854:74;;17937:93;18026:3;17937:93;:::i;:::-;18055:2;18050:3;18046:12;18039:19;;17698:366;;;:::o;18070:419::-;18236:4;18274:2;18263:9;18259:18;18251:26;;18323:9;18317:4;18313:20;18309:1;18298:9;18294:17;18287:47;18351:131;18477:4;18351:131;:::i;:::-;18343:139;;18070:419;;;:::o;18495:172::-;18635:24;18631:1;18623:6;18619:14;18612:48;18495:172;:::o;18673:366::-;18815:3;18836:67;18900:2;18895:3;18836:67;:::i;:::-;18829:74;;18912:93;19001:3;18912:93;:::i;:::-;19030:2;19025:3;19021:12;19014:19;;18673:366;;;:::o;19045:419::-;19211:4;19249:2;19238:9;19234:18;19226:26;;19298:9;19292:4;19288:20;19284:1;19273:9;19269:17;19262:47;19326:131;19452:4;19326:131;:::i;:::-;19318:139;;19045:419;;;:::o;19470:227::-;19610:34;19606:1;19598:6;19594:14;19587:58;19679:10;19674:2;19666:6;19662:15;19655:35;19470:227;:::o;19703:366::-;19845:3;19866:67;19930:2;19925:3;19866:67;:::i;:::-;19859:74;;19942:93;20031:3;19942:93;:::i;:::-;20060:2;20055:3;20051:12;20044:19;;19703:366;;;:::o;20075:419::-;20241:4;20279:2;20268:9;20264:18;20256:26;;20328:9;20322:4;20318:20;20314:1;20303:9;20299:17;20292:47;20356:131;20482:4;20356:131;:::i;:::-;20348:139;;20075:419;;;:::o;20500:85::-;20545:7;20574:5;20563:16;;20500:85;;;:::o;20591:156::-;20648:9;20681:60;20698:42;20707:32;20733:5;20707:32;:::i;:::-;20698:42;:::i;:::-;20681:60;:::i;:::-;20668:73;;20591:156;;;:::o;20753:145::-;20847:44;20885:5;20847:44;:::i;:::-;20842:3;20835:57;20753:145;;:::o;20904:236::-;21004:4;21042:2;21031:9;21027:18;21019:26;;21055:78;21130:1;21119:9;21115:17;21106:6;21055:78;:::i;:::-;20904:236;;;;:::o;21146:180::-;21194:77;21191:1;21184:88;21291:4;21288:1;21281:15;21315:4;21312:1;21305:15;21332:320;21376:6;21413:1;21407:4;21403:12;21393:22;;21460:1;21454:4;21450:12;21481:18;21471:81;;21537:4;21529:6;21525:17;21515:27;;21471:81;21599:2;21591:6;21588:14;21568:18;21565:38;21562:84;;21618:18;;:::i;:::-;21562:84;21383:269;21332:320;;;:::o;21658:90::-;21692:7;21735:5;21728:13;21721:21;21710:32;;21658:90;;;:::o;21754:116::-;21824:21;21839:5;21824:21;:::i;:::-;21817:5;21814:32;21804:60;;21860:1;21857;21850:12;21804:60;21754:116;:::o;21876:137::-;21930:5;21961:6;21955:13;21946:22;;21977:30;22001:5;21977:30;:::i;:::-;21876:137;;;;:::o;22019:345::-;22086:6;22135:2;22123:9;22114:7;22110:23;22106:32;22103:119;;;22141:79;;:::i;:::-;22103:119;22261:1;22286:61;22339:7;22330:6;22319:9;22315:22;22286:61;:::i;:::-;22276:71;;22232:125;22019:345;;;;:::o;22370:172::-;22510:24;22506:1;22498:6;22494:14;22487:48;22370:172;:::o;22548:366::-;22690:3;22711:67;22775:2;22770:3;22711:67;:::i;:::-;22704:74;;22787:93;22876:3;22787:93;:::i;:::-;22905:2;22900:3;22896:12;22889:19;;22548:366;;;:::o;22920:419::-;23086:4;23124:2;23113:9;23109:18;23101:26;;23173:9;23167:4;23163:20;23159:1;23148:9;23144:17;23137:47;23201:131;23327:4;23201:131;:::i;:::-;23193:139;;22920:419;;;:::o;23345:221::-;23485:34;23481:1;23473:6;23469:14;23462:58;23554:4;23549:2;23541:6;23537:15;23530:29;23345:221;:::o;23572:366::-;23714:3;23735:67;23799:2;23794:3;23735:67;:::i;:::-;23728:74;;23811:93;23900:3;23811:93;:::i;:::-;23929:2;23924:3;23920:12;23913:19;;23572:366;;;:::o;23944:419::-;24110:4;24148:2;24137:9;24133:18;24125:26;;24197:9;24191:4;24187:20;24183:1;24172:9;24168:17;24161:47;24225:131;24351:4;24225:131;:::i;:::-;24217:139;;23944:419;;;:::o;24369:141::-;24418:4;24441:3;24433:11;;24464:3;24461:1;24454:14;24498:4;24495:1;24485:18;24477:26;;24369:141;;;:::o;24516:93::-;24553:6;24600:2;24595;24588:5;24584:14;24580:23;24570:33;;24516:93;;;:::o;24615:107::-;24659:8;24709:5;24703:4;24699:16;24678:37;;24615:107;;;;:::o;24728:393::-;24797:6;24847:1;24835:10;24831:18;24870:97;24900:66;24889:9;24870:97;:::i;:::-;24988:39;25018:8;25007:9;24988:39;:::i;:::-;24976:51;;25060:4;25056:9;25049:5;25045:21;25036:30;;25109:4;25099:8;25095:19;25088:5;25085:30;25075:40;;24804:317;;24728:393;;;;;:::o;25127:142::-;25177:9;25210:53;25228:34;25237:24;25255:5;25237:24;:::i;:::-;25228:34;:::i;:::-;25210:53;:::i;:::-;25197:66;;25127:142;;;:::o;25275:75::-;25318:3;25339:5;25332:12;;25275:75;;;:::o;25356:269::-;25466:39;25497:7;25466:39;:::i;:::-;25527:91;25576:41;25600:16;25576:41;:::i;:::-;25568:6;25561:4;25555:11;25527:91;:::i;:::-;25521:4;25514:105;25432:193;25356:269;;;:::o;25631:73::-;25676:3;25631:73;:::o;25710:189::-;25787:32;;:::i;:::-;25828:65;25886:6;25878;25872:4;25828:65;:::i;:::-;25763:136;25710:189;;:::o;25905:186::-;25965:120;25982:3;25975:5;25972:14;25965:120;;;26036:39;26073:1;26066:5;26036:39;:::i;:::-;26009:1;26002:5;25998:13;25989:22;;25965:120;;;25905:186;;:::o;26097:543::-;26198:2;26193:3;26190:11;26187:446;;;26232:38;26264:5;26232:38;:::i;:::-;26316:29;26334:10;26316:29;:::i;:::-;26306:8;26302:44;26499:2;26487:10;26484:18;26481:49;;;26520:8;26505:23;;26481:49;26543:80;26599:22;26617:3;26599:22;:::i;:::-;26589:8;26585:37;26572:11;26543:80;:::i;:::-;26202:431;;26187:446;26097:543;;;:::o;26646:117::-;26700:8;26750:5;26744:4;26740:16;26719:37;;26646:117;;;;:::o;26769:169::-;26813:6;26846:51;26894:1;26890:6;26882:5;26879:1;26875:13;26846:51;:::i;:::-;26842:56;26927:4;26921;26917:15;26907:25;;26820:118;26769:169;;;;:::o;26943:295::-;27019:4;27165:29;27190:3;27184:4;27165:29;:::i;:::-;27157:37;;27227:3;27224:1;27220:11;27214:4;27211:21;27203:29;;26943:295;;;;:::o;27243:1395::-;27360:37;27393:3;27360:37;:::i;:::-;27462:18;27454:6;27451:30;27448:56;;;27484:18;;:::i;:::-;27448:56;27528:38;27560:4;27554:11;27528:38;:::i;:::-;27613:67;27673:6;27665;27659:4;27613:67;:::i;:::-;27707:1;27731:4;27718:17;;27763:2;27755:6;27752:14;27780:1;27775:618;;;;28437:1;28454:6;28451:77;;;28503:9;28498:3;28494:19;28488:26;28479:35;;28451:77;28554:67;28614:6;28607:5;28554:67;:::i;:::-;28548:4;28541:81;28410:222;27745:887;;27775:618;27827:4;27823:9;27815:6;27811:22;27861:37;27893:4;27861:37;:::i;:::-;27920:1;27934:208;27948:7;27945:1;27942:14;27934:208;;;28027:9;28022:3;28018:19;28012:26;28004:6;27997:42;28078:1;28070:6;28066:14;28056:24;;28125:2;28114:9;28110:18;28097:31;;27971:4;27968:1;27964:12;27959:17;;27934:208;;;28170:6;28161:7;28158:19;28155:179;;;28228:9;28223:3;28219:19;28213:26;28271:48;28313:4;28305:6;28301:17;28290:9;28271:48;:::i;:::-;28263:6;28256:64;28178:156;28155:179;28380:1;28376;28368:6;28364:14;28360:22;28354:4;28347:36;27782:611;;;27745:887;;27335:1303;;;27243:1395;;:::o;28644:529::-;28811:4;28849:2;28838:9;28834:18;28826:26;;28862:70;28929:1;28918:9;28914:17;28905:6;28862:70;:::i;:::-;28942:71;29009:2;28998:9;28994:18;28985:6;28942:71;:::i;:::-;29060:9;29054:4;29050:20;29045:2;29034:9;29030:18;29023:48;29088:78;29161:4;29152:6;29088:78;:::i;:::-;29080:86;;28644:529;;;;;;:::o;29179:167::-;29319:19;29315:1;29307:6;29303:14;29296:43;29179:167;:::o;29352:366::-;29494:3;29515:67;29579:2;29574:3;29515:67;:::i;:::-;29508:74;;29591:93;29680:3;29591:93;:::i;:::-;29709:2;29704:3;29700:12;29693:19;;29352:366;;;:::o;29724:419::-;29890:4;29928:2;29917:9;29913:18;29905:26;;29977:9;29971:4;29967:20;29963:1;29952:9;29948:17;29941:47;30005:131;30131:4;30005:131;:::i;:::-;29997:139;;29724:419;;;:::o;30149:174::-;30289:26;30285:1;30277:6;30273:14;30266:50;30149:174;:::o;30329:366::-;30471:3;30492:67;30556:2;30551:3;30492:67;:::i;:::-;30485:74;;30568:93;30657:3;30568:93;:::i;:::-;30686:2;30681:3;30677:12;30670:19;;30329:366;;;:::o;30701:419::-;30867:4;30905:2;30894:9;30890:18;30882:26;;30954:9;30948:4;30944:20;30940:1;30929:9;30925:17;30918:47;30982:131;31108:4;30982:131;:::i;:::-;30974:139;;30701:419;;;:::o;31126:180::-;31174:77;31171:1;31164:88;31271:4;31268:1;31261:15;31295:4;31292:1;31285:15;31312:230;31452:34;31448:1;31440:6;31436:14;31429:58;31521:13;31516:2;31508:6;31504:15;31497:38;31312:230;:::o;31548:366::-;31690:3;31711:67;31775:2;31770:3;31711:67;:::i;:::-;31704:74;;31787:93;31876:3;31787:93;:::i;:::-;31905:2;31900:3;31896:12;31889:19;;31548:366;;;:::o;31920:419::-;32086:4;32124:2;32113:9;32109:18;32101:26;;32173:9;32167:4;32163:20;32159:1;32148:9;32144:17;32137:47;32201:131;32327:4;32201:131;:::i;:::-;32193:139;;31920:419;;;:::o;32345:168::-;32485:20;32481:1;32473:6;32469:14;32462:44;32345:168;:::o;32519:366::-;32661:3;32682:67;32746:2;32741:3;32682:67;:::i;:::-;32675:74;;32758:93;32847:3;32758:93;:::i;:::-;32876:2;32871:3;32867:12;32860:19;;32519:366;;;:::o;32891:419::-;33057:4;33095:2;33084:9;33080:18;33072:26;;33144:9;33138:4;33134:20;33130:1;33119:9;33115:17;33108:47;33172:131;33298:4;33172:131;:::i;:::-;33164:139;;32891:419;;;:::o;33316:181::-;33456:33;33452:1;33444:6;33440:14;33433:57;33316:181;:::o;33503:366::-;33645:3;33666:67;33730:2;33725:3;33666:67;:::i;:::-;33659:74;;33742:93;33831:3;33742:93;:::i;:::-;33860:2;33855:3;33851:12;33844:19;;33503:366;;;:::o;33875:419::-;34041:4;34079:2;34068:9;34064:18;34056:26;;34128:9;34122:4;34118:20;34114:1;34103:9;34099:17;34092:47;34156:131;34282:4;34156:131;:::i;:::-;34148:139;;33875:419;;;:::o;34300:332::-;34421:4;34459:2;34448:9;34444:18;34436:26;;34472:71;34540:1;34529:9;34525:17;34516:6;34472:71;:::i;:::-;34553:72;34621:2;34610:9;34606:18;34597:6;34553:72;:::i;:::-;34300:332;;;;;:::o;34638:442::-;34787:4;34825:2;34814:9;34810:18;34802:26;;34838:71;34906:1;34895:9;34891:17;34882:6;34838:71;:::i;:::-;34919:72;34987:2;34976:9;34972:18;34963:6;34919:72;:::i;:::-;35001;35069:2;35058:9;35054:18;35045:6;35001:72;:::i;:::-;34638:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2419600",
								"executionCost": "2605",
								"totalCost": "2422205"
							},
							"external": {
								"": "474",
								"NATIVE_TOKEN()": "424",
								"allowedAmounts(address,address)": "infinite",
								"bulkSetAllowedAmount(address,address[],uint256[])": "infinite",
								"claim(address)": "infinite",
								"currentRound()": "infinite",
								"deposit(address,uint256)": "infinite",
								"initialize(address,address)": "infinite",
								"owner()": "2599",
								"renounceOwnership()": "infinite",
								"scorer()": "infinite",
								"setAllowedAmount(address,address,uint256)": "infinite",
								"setRound(uint64,uint64,string)": "infinite",
								"totalBalances(address)": "2903",
								"transferOwnership(address)": "infinite",
								"withdraw(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 454,
									"end": 6704,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 454,
									"end": 6704,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 454,
									"end": 6704,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 454,
									"end": 6704,
									"name": "CALLVALUE",
									"source": 13
								},
								{
									"begin": 454,
									"end": 6704,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 454,
									"end": 6704,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 454,
									"end": 6704,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 454,
									"end": 6704,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 454,
									"end": 6704,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 454,
									"end": 6704,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 454,
									"end": 6704,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 454,
									"end": 6704,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 454,
									"end": 6704,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 454,
									"end": 6704,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 454,
									"end": 6704,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 454,
									"end": 6704,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 454,
									"end": 6704,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 454,
									"end": 6704,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 454,
									"end": 6704,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 454,
									"end": 6704,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 454,
									"end": 6704,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122091196f9bbb7993e4f8222bb807bd2f78c7e9745de458f7283a21cd11c875d3fd64736f6c634300081c0033",
									".code": [
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH",
											"source": 13,
											"value": "8DA5CB5B"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH",
											"source": 13,
											"value": "B807A3C4"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH",
											"source": 13,
											"value": "B807A3C4"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH",
											"source": 13,
											"value": "E3E7C1F9"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH",
											"source": 13,
											"value": "F2FDE38B"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH",
											"source": 13,
											"value": "F3FEF3A3"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "tag",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH",
											"source": 13,
											"value": "8DA5CB5B"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH",
											"source": 13,
											"value": "A9012C89"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH",
											"source": 13,
											"value": "A9590E8A"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH",
											"source": 13,
											"value": "AEE9C872"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "tag",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH",
											"source": 13,
											"value": "485CC955"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH",
											"source": 13,
											"value": "485CC955"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH",
											"source": 13,
											"value": "715018A6"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH",
											"source": 13,
											"value": "85C758F7"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH",
											"source": 13,
											"value": "8A19C8BC"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "tag",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH",
											"source": 13,
											"value": "1E83409A"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH",
											"source": 13,
											"value": "31F7D964"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH",
											"source": 13,
											"value": "47E7EF24"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "tag",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6470,
											"end": 6479,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6452,
											"name": "PUSH",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 6439,
											"end": 6466,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 613,
											"end": 614,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6466,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6439,
											"end": 6466,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6466,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6439,
											"end": 6466,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6466,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6466,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6466,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6439,
											"end": 6466,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6466,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6466,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6466,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6466,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6439,
											"end": 6466,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6466,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6439,
											"end": 6466,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6466,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6439,
											"end": 6479,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6479,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6479,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6479,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 6439,
											"end": 6479,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6479,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6479,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 6439,
											"end": 6479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6479,
											"name": "tag",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 6439,
											"end": 6479,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6479,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6479,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6479,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6479,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6479,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6479,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 6439,
											"end": 6479,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 613,
											"end": 614,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6495,
											"end": 6539,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6495,
											"end": 6539,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6503,
											"end": 6513,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 6495,
											"end": 6539,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6495,
											"end": 6539,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6495,
											"end": 6539,
											"name": "PUSH",
											"source": 13,
											"value": "5548C837AB068CF56A2C2479DF0882A4922FD203EDB7517321831D95078C5F62"
										},
										{
											"begin": 6529,
											"end": 6538,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 6495,
											"end": 6539,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6495,
											"end": 6539,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6495,
											"end": 6539,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 6495,
											"end": 6539,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6495,
											"end": 6539,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6495,
											"end": 6539,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 6495,
											"end": 6539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6495,
											"end": 6539,
											"name": "tag",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 6495,
											"end": 6539,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6495,
											"end": 6539,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6495,
											"end": 6539,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6495,
											"end": 6539,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6495,
											"end": 6539,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6495,
											"end": 6539,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6495,
											"end": 6539,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6495,
											"end": 6539,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "tag",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 454,
											"end": 6704,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6659,
											"end": 6693,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6659,
											"end": 6693,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6659,
											"end": 6693,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6659,
											"end": 6693,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6659,
											"end": 6693,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6659,
											"end": 6693,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6659,
											"end": 6693,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6659,
											"end": 6693,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 6659,
											"end": 6693,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6659,
											"end": 6693,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 6659,
											"end": 6693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6659,
											"end": 6693,
											"name": "tag",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 6659,
											"end": 6693,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6659,
											"end": 6693,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6659,
											"end": 6693,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6659,
											"end": 6693,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6659,
											"end": 6693,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6659,
											"end": 6693,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6659,
											"end": 6693,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6659,
											"end": 6693,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "tag",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "tag",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 2971,
											"end": 3903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "tag",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 2971,
											"end": 3903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "tag",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "tag",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "tag",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 566,
											"end": 615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 566,
											"end": 615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "tag",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "tag",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 2412,
											"end": 2886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "tag",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 2412,
											"end": 2886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "tag",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "tag",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 1977,
											"end": 2194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 1977,
											"end": 2194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 622,
											"end": 643,
											"name": "tag",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "tag",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 622,
											"end": 643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "tag",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 622,
											"end": 643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "tag",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "tag",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "tag",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 883,
											"end": 908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 883,
											"end": 908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "tag",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "tag",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 5261,
											"end": 5539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "tag",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 5261,
											"end": 5539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "tag",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "tag",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "tag",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 1097,
											"end": 1166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "tag",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 1097,
											"end": 1166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 1097,
											"end": 1166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "tag",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "tag",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "tag",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 999,
											"end": 1047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "tag",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 999,
											"end": 1047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 999,
											"end": 1047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "tag",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "tag",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "tag",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 4135,
											"end": 4396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "tag",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 4135,
											"end": 4396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "tag",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "tag",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "tag",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 4495,
											"end": 5012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "tag",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 4495,
											"end": 5012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "tag",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "tag",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "tag",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 5744,
											"end": 6322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "tag",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 5744,
											"end": 6322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "tag",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "tag",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2526,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2526,
											"end": 2547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3066,
											"end": 3078,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 3066,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3066,
											"end": 3084,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3066,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3066,
											"end": 3084,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3066,
											"end": 3084,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3066,
											"end": 3084,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3066,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3066,
											"end": 3084,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3066,
											"end": 3084,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3066,
											"end": 3084,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3066,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3066,
											"end": 3084,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3048,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3048,
											"end": 3084,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3048,
											"end": 3063,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 3048,
											"end": 3084,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 3048,
											"end": 3122,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3048,
											"end": 3122,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 3048,
											"end": 3122,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3048,
											"end": 3122,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3106,
											"end": 3118,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 3106,
											"end": 3122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3106,
											"end": 3122,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3106,
											"end": 3122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 3106,
											"end": 3122,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3106,
											"end": 3122,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3106,
											"end": 3122,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3106,
											"end": 3122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3106,
											"end": 3122,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3106,
											"end": 3122,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3106,
											"end": 3122,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3106,
											"end": 3122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3106,
											"end": 3122,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3088,
											"end": 3122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3088,
											"end": 3122,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3088,
											"end": 3103,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 3088,
											"end": 3122,
											"modifierDepth": 1,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3048,
											"end": 3122,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 3048,
											"end": 3122,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3044,
											"end": 3227,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3044,
											"end": 3227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 3044,
											"end": 3227,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3161,
											"end": 3176,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 3178,
											"end": 3190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 3178,
											"end": 3196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3178,
											"end": 3196,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3178,
											"end": 3196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3178,
											"end": 3196,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3178,
											"end": 3196,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3178,
											"end": 3196,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3178,
											"end": 3196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3178,
											"end": 3196,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3178,
											"end": 3196,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3178,
											"end": 3196,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3178,
											"end": 3196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3178,
											"end": 3196,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3198,
											"end": 3210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 3198,
											"end": 3214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3198,
											"end": 3214,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3198,
											"end": 3214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 3198,
											"end": 3214,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3198,
											"end": 3214,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3198,
											"end": 3214,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3198,
											"end": 3214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3198,
											"end": 3214,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3198,
											"end": 3214,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3198,
											"end": 3214,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3198,
											"end": 3214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3198,
											"end": 3214,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FA7410D400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 3146,
											"end": 3215,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3044,
											"end": 3227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 3044,
											"end": 3227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3239,
											"end": 3264,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3267,
											"end": 3281,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3282,
											"end": 3292,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3294,
											"end": 3299,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3239,
											"end": 3300,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3239,
											"end": 3300,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3339,
											"end": 3340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3319,
											"end": 3336,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3319,
											"end": 3340,
											"modifierDepth": 1,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 3311,
											"end": 3364,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3407,
											"end": 3424,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 3396,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3397,
											"end": 3402,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 3424,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 3424,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 3375,
											"end": 3454,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3503,
											"end": 3504,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3467,
											"end": 3481,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3482,
											"end": 3492,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3494,
											"end": 3499,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3504,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3504,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3504,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3504,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3539,
											"end": 3556,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3529,
											"end": 3534,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 3515,
											"end": 3556,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 613,
											"end": 614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3573,
											"end": 3594,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3573,
											"end": 3594,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3573,
											"end": 3578,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3573,
											"end": 3594,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3573,
											"end": 3594,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3573,
											"end": 3594,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3569,
											"end": 3833,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 3569,
											"end": 3833,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3612,
											"end": 3624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3630,
											"end": 3640,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3630,
											"end": 3645,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3653,
											"end": 3670,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 3630,
											"end": 3675,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3611,
											"end": 3675,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3611,
											"end": 3675,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3611,
											"end": 3675,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3698,
											"end": 3705,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 3690,
											"end": 3731,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3596,
											"end": 3743,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3569,
											"end": 3833,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 3569,
											"end": 3833,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3569,
											"end": 3833,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 3569,
											"end": 3833,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3764,
											"end": 3821,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 3791,
											"end": 3801,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 3803,
											"end": 3820,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3771,
											"end": 3776,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3764,
											"end": 3790,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3764,
											"end": 3790,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3764,
											"end": 3790,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 3764,
											"end": 3790,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3764,
											"end": 3821,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3764,
											"end": 3821,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3764,
											"end": 3821,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3764,
											"end": 3821,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3764,
											"end": 3821,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3764,
											"end": 3821,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3764,
											"end": 3821,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 3764,
											"end": 3821,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3569,
											"end": 3833,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 3569,
											"end": 3833,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3870,
											"end": 3875,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3858,
											"end": 3868,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "F7A40077FF7A04C7E61F6F26FB13774259DDF1B6BCE9ECF26A8276CDD3992683"
										},
										{
											"begin": 3877,
											"end": 3894,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 3850,
											"end": 3895,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3903,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2568,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2568,
											"end": 2588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "tag",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 613,
											"end": 614,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2526,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2526,
											"end": 2547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 613,
											"end": 614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2527,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2506,
											"end": 2527,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2506,
											"end": 2511,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2506,
											"end": 2527,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2506,
											"end": 2527,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2506,
											"end": 2527,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2502,
											"end": 2786,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 2502,
											"end": 2786,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2565,
											"end": 2571,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2552,
											"end": 2561,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 2552,
											"end": 2571,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "136"
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 2544,
											"end": 2598,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "136"
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2502,
											"end": 2786,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 2502,
											"end": 2786,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2502,
											"end": 2786,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 2502,
											"end": 2786,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2648,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2639,
											"end": 2645,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2639,
											"end": 2649,
											"modifierDepth": 1,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 2631,
											"end": 2694,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2709,
											"end": 2774,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 2740,
											"end": 2750,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 2760,
											"end": 2764,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 2767,
											"end": 2773,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2716,
											"end": 2721,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2709,
											"end": 2739,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2709,
											"end": 2739,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2709,
											"end": 2739,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 2709,
											"end": 2739,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2709,
											"end": 2774,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2709,
											"end": 2774,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2709,
											"end": 2774,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2709,
											"end": 2774,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2709,
											"end": 2774,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2709,
											"end": 2774,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2709,
											"end": 2774,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2709,
											"end": 2774,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 2709,
											"end": 2774,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2502,
											"end": 2786,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 2502,
											"end": 2786,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2822,
											"end": 2828,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2812,
											"end": 2817,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 2798,
											"end": 2828,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2864,
											"end": 2869,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2852,
											"end": 2862,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "5548C837AB068CF56A2C2479DF0882A4922FD203EDB7517321831D95078C5F62"
										},
										{
											"begin": 2871,
											"end": 2877,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 2844,
											"end": 2878,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2568,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2568,
											"end": 2588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4742,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4952,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 4997,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5031,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5013,
											"end": 5014,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2061,
											"end": 2082,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 2076,
											"end": 2081,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2061,
											"end": 2075,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 2061,
											"end": 2082,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2061,
											"end": 2082,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 2061,
											"end": 2082,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2126,
											"end": 2150,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 2126,
											"end": 2148,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 2126,
											"end": 2150,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2126,
											"end": 2150,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 2126,
											"end": 2150,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2178,
											"end": 2185,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 2161,
											"end": 2167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5070,
											"end": 5084,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5118,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5101,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5154,
											"end": 5155,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 5142,
											"end": 5156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 622,
											"end": 643,
											"name": "tag",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "tag",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 883,
											"end": 908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "tag",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 883,
											"end": 908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "tag",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "tag",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "tag",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "tag",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2533,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2533,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "tag",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1739,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1725,
											"end": 1739,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1739,
											"name": "PUSH",
											"source": 13,
											"value": "24D7806C"
										},
										{
											"begin": 1740,
											"end": 1750,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "tag",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "181"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "tag",
											"source": 13,
											"value": "181"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 1725,
											"end": 1751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "tag",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 1717,
											"end": 1778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "tag",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "tag",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5380,
											"end": 5383,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5372,
											"end": 5383,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5372,
											"end": 5383,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5372,
											"end": 5377,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5372,
											"end": 5383,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5372,
											"end": 5383,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5372,
											"end": 5383,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 5364,
											"end": 5422,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 5364,
											"end": 5422,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5364,
											"end": 5422,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5364,
											"end": 5422,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5364,
											"end": 5422,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5364,
											"end": 5422,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5364,
											"end": 5422,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5364,
											"end": 5422,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5364,
											"end": 5422,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5364,
											"end": 5422,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 5364,
											"end": 5422,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5364,
											"end": 5422,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 5364,
											"end": 5422,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5364,
											"end": 5422,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 5364,
											"end": 5422,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5364,
											"end": 5422,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5364,
											"end": 5422,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5364,
											"end": 5422,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5364,
											"end": 5422,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5364,
											"end": 5422,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5364,
											"end": 5422,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5364,
											"end": 5422,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5364,
											"end": 5422,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 5364,
											"end": 5422,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5448,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5448,
											"end": 5478,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5448,
											"end": 5478,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5448,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5448,
											"end": 5478,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5448,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5448,
											"end": 5478,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5448,
											"end": 5478,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5454,
											"end": 5459,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5448,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5448,
											"end": 5478,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5448,
											"end": 5478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5448,
											"end": 5478,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5448,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5448,
											"end": 5478,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5461,
											"end": 5464,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5448,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5448,
											"end": 5478,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5448,
											"end": 5478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5448,
											"end": 5478,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5448,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5448,
											"end": 5478,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5466,
											"end": 5477,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5448,
											"end": 5478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5448,
											"end": 5478,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5448,
											"end": 5478,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 5433,
											"end": 5478,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5478,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5494,
											"end": 5531,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "9E6DB48F22357E6DCE2BBFF89DB8FF25F0012A08186D6EA72E2343FDC112E13"
										},
										{
											"begin": 5507,
											"end": 5512,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5514,
											"end": 5517,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5519,
											"end": 5530,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5494,
											"end": 5531,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5494,
											"end": 5531,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5494,
											"end": 5531,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 5494,
											"end": 5531,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5494,
											"end": 5531,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5494,
											"end": 5531,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5494,
											"end": 5531,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5494,
											"end": 5531,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 5494,
											"end": 5531,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5494,
											"end": 5531,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 5494,
											"end": 5531,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5494,
											"end": 5531,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5494,
											"end": 5531,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5494,
											"end": 5531,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5494,
											"end": 5531,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5494,
											"end": 5531,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5494,
											"end": 5531,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5494,
											"end": 5531,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "tag",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "tag",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "tag",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1739,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1725,
											"end": 1739,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1739,
											"name": "PUSH",
											"source": 13,
											"value": "24D7806C"
										},
										{
											"begin": 1740,
											"end": 1750,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "tag",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "tag",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 1725,
											"end": 1751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "tag",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 1717,
											"end": 1778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "tag",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "tag",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4260,
											"end": 4261,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4244,
											"end": 4262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4244,
											"end": 4262,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4244,
											"end": 4248,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4244,
											"end": 4262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4244,
											"end": 4262,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4244,
											"end": 4262,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 4236,
											"end": 4284,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4325,
											"end": 4331,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4309,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4310,
											"end": 4314,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4316,
											"end": 4321,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4331,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4331,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4331,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4331,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4374,
											"end": 4379,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4368,
											"end": 4372,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3D0601F3B0E52FD772F1FA71D91651B34B6A11144BEA30D74E0F820019A04DC2"
										},
										{
											"begin": 4381,
											"end": 4387,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 4347,
											"end": 4388,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "tag",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1739,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1725,
											"end": 1739,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1739,
											"name": "PUSH",
											"source": 13,
											"value": "24D7806C"
										},
										{
											"begin": 1740,
											"end": 1750,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "tag",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "tag",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "211"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 1725,
											"end": 1751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "tag",
											"source": 13,
											"value": "211"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 1717,
											"end": 1778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "tag",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "tag",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4682,
											"end": 4689,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4682,
											"end": 4689,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4682,
											"end": 4696,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4682,
											"end": 4696,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4666,
											"end": 4671,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4666,
											"end": 4671,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4666,
											"end": 4678,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4666,
											"end": 4678,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4666,
											"end": 4696,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 4658,
											"end": 4725,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 4658,
											"end": 4725,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4658,
											"end": 4725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4658,
											"end": 4725,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4658,
											"end": 4725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4658,
											"end": 4725,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4658,
											"end": 4725,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4658,
											"end": 4725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4658,
											"end": 4725,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4658,
											"end": 4725,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 4658,
											"end": 4725,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4658,
											"end": 4725,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 4658,
											"end": 4725,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4658,
											"end": 4725,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 4658,
											"end": 4725,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4658,
											"end": 4725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4658,
											"end": 4725,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4658,
											"end": 4725,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4658,
											"end": 4725,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4658,
											"end": 4725,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4658,
											"end": 4725,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4658,
											"end": 4725,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4658,
											"end": 4725,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 4658,
											"end": 4725,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4741,
											"end": 4750,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4736,
											"end": 5005,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 4736,
											"end": 5005,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4760,
											"end": 4765,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4760,
											"end": 4765,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4760,
											"end": 4772,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4760,
											"end": 4772,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4756,
											"end": 4757,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4756,
											"end": 4772,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4736,
											"end": 5005,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4736,
											"end": 5005,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 4736,
											"end": 5005,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 4921,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 4921,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4922,
											"end": 4923,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 4924,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 4924,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 4924,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 4924,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 4914,
											"end": 4924,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 4924,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 4914,
											"end": 4924,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 4914,
											"end": 4924,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 4924,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 4914,
											"end": 4924,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 4924,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 4914,
											"end": 4924,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 4924,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 4924,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 4924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4914,
											"end": 4924,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 4924,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 4924,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 4880,
											"end": 4904,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4895,
											"end": 4900,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4895,
											"end": 4900,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4901,
											"end": 4902,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 4895,
											"end": 4903,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 4895,
											"end": 4903,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 4895,
											"end": 4903,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4904,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4880,
											"end": 4904,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4904,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4880,
											"end": 4904,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4904,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4904,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4904,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4880,
											"end": 4904,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4904,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4904,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4904,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4904,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4880,
											"end": 4904,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4904,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4880,
											"end": 4904,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4905,
											"end": 4910,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4880,
											"end": 4911,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4880,
											"end": 4911,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4911,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4911,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4880,
											"end": 4911,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4911,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4911,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4911,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4880,
											"end": 4911,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4880,
											"end": 4911,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4924,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4924,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4924,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 4880,
											"end": 4924,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4975,
											"end": 4980,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4944,
											"end": 4993,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 4970,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 4970,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4971,
											"end": 4972,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 4965,
											"end": 4973,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 4965,
											"end": 4973,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 4965,
											"end": 4973,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4944,
											"end": 4993,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3D0601F3B0E52FD772F1FA71D91651B34B6A11144BEA30D74E0F820019A04DC2"
										},
										{
											"begin": 4982,
											"end": 4989,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4982,
											"end": 4989,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4990,
											"end": 4991,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4982,
											"end": 4992,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4982,
											"end": 4992,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4982,
											"end": 4992,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4982,
											"end": 4992,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 4982,
											"end": 4992,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4982,
											"end": 4992,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 4982,
											"end": 4992,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 4982,
											"end": 4992,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4982,
											"end": 4992,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 4982,
											"end": 4992,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4982,
											"end": 4992,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 4982,
											"end": 4992,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4982,
											"end": 4992,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4982,
											"end": 4992,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4982,
											"end": 4992,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4982,
											"end": 4992,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 4982,
											"end": 4992,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4982,
											"end": 4992,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4944,
											"end": 4993,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4993,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 4944,
											"end": 4993,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4993,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4993,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 4944,
											"end": 4993,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4993,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 4944,
											"end": 4993,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4944,
											"end": 4993,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4993,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4993,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4993,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4993,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4993,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 4774,
											"end": 4777,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4774,
											"end": 4777,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4774,
											"end": 4777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 4774,
											"end": 4777,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4774,
											"end": 4777,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4774,
											"end": 4777,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4774,
											"end": 4777,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4736,
											"end": 5005,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 4736,
											"end": 5005,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4736,
											"end": 5005,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 4736,
											"end": 5005,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4736,
											"end": 5005,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "tag",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2547,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 2526,
											"end": 2545,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2526,
											"end": 2547,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2526,
											"end": 2547,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 2526,
											"end": 2547,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 5855,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5845,
											"end": 5851,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5845,
											"end": 5855,
											"modifierDepth": 2,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5837,
											"end": 5903,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 5837,
											"end": 5903,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5837,
											"end": 5903,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5837,
											"end": 5903,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5837,
											"end": 5903,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5837,
											"end": 5903,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5837,
											"end": 5903,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5837,
											"end": 5903,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5837,
											"end": 5903,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5837,
											"end": 5903,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 5837,
											"end": 5903,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5837,
											"end": 5903,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 5837,
											"end": 5903,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5837,
											"end": 5903,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 5837,
											"end": 5903,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5837,
											"end": 5903,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5837,
											"end": 5903,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5837,
											"end": 5903,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5837,
											"end": 5903,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5837,
											"end": 5903,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5837,
											"end": 5903,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5837,
											"end": 5903,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5837,
											"end": 5903,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 5837,
											"end": 5903,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5946,
											"end": 5952,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5922,
											"end": 5935,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 5922,
											"end": 5942,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5936,
											"end": 5941,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5922,
											"end": 5942,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5922,
											"end": 5942,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5922,
											"end": 5942,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5922,
											"end": 5942,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5922,
											"end": 5942,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5922,
											"end": 5942,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5922,
											"end": 5942,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5922,
											"end": 5942,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5922,
											"end": 5942,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5922,
											"end": 5942,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5922,
											"end": 5942,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5922,
											"end": 5942,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5922,
											"end": 5942,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5922,
											"end": 5942,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5922,
											"end": 5942,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 5922,
											"end": 5942,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5922,
											"end": 5952,
											"modifierDepth": 2,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 5922,
											"end": 5952,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5914,
											"end": 5975,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 5914,
											"end": 5975,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5914,
											"end": 5975,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5914,
											"end": 5975,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5914,
											"end": 5975,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5914,
											"end": 5975,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5914,
											"end": 5975,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5914,
											"end": 5975,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5914,
											"end": 5975,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5914,
											"end": 5975,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 5914,
											"end": 5975,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5914,
											"end": 5975,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 5914,
											"end": 5975,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5914,
											"end": 5975,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 5914,
											"end": 5975,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5914,
											"end": 5975,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5914,
											"end": 5975,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5914,
											"end": 5975,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5914,
											"end": 5975,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5914,
											"end": 5975,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5914,
											"end": 5975,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5914,
											"end": 5975,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5914,
											"end": 5975,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 5914,
											"end": 5975,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6012,
											"end": 6018,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6001,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 5988,
											"end": 6008,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6002,
											"end": 6007,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6008,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5988,
											"end": 6008,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6008,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5988,
											"end": 6008,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6008,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6008,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6008,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5988,
											"end": 6008,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6008,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6008,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6008,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6008,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5988,
											"end": 6008,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6008,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5988,
											"end": 6008,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6008,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5988,
											"end": 6018,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6018,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6018,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6018,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 5988,
											"end": 6018,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6018,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6018,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 5988,
											"end": 6018,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6018,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 5988,
											"end": 6018,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6018,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6018,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6018,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6018,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6018,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6018,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 5988,
											"end": 6018,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 613,
											"end": 614,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6035,
											"end": 6056,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6035,
											"end": 6056,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6035,
											"end": 6040,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6035,
											"end": 6056,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6035,
											"end": 6056,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6035,
											"end": 6056,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6031,
											"end": 6267,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 6031,
											"end": 6267,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6074,
											"end": 6086,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6092,
											"end": 6099,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 6092,
											"end": 6097,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 6092,
											"end": 6099,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6099,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 6092,
											"end": 6099,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6104,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6092,
											"end": 6104,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6112,
											"end": 6118,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 6092,
											"end": 6123,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6123,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6073,
											"end": 6123,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6073,
											"end": 6123,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6073,
											"end": 6123,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6146,
											"end": 6153,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6138,
											"end": 6179,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 6138,
											"end": 6179,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6138,
											"end": 6179,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6138,
											"end": 6179,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6138,
											"end": 6179,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6138,
											"end": 6179,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6138,
											"end": 6179,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6138,
											"end": 6179,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6138,
											"end": 6179,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6138,
											"end": 6179,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 6138,
											"end": 6179,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6138,
											"end": 6179,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 6138,
											"end": 6179,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6138,
											"end": 6179,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 6138,
											"end": 6179,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6138,
											"end": 6179,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6138,
											"end": 6179,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6138,
											"end": 6179,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6138,
											"end": 6179,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6138,
											"end": 6179,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6138,
											"end": 6179,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6138,
											"end": 6179,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6138,
											"end": 6179,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 6138,
											"end": 6179,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6058,
											"end": 6191,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6031,
											"end": 6267,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 6031,
											"end": 6267,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6031,
											"end": 6267,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 6031,
											"end": 6267,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6212,
											"end": 6255,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 6239,
											"end": 6246,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 6239,
											"end": 6244,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 6239,
											"end": 6246,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6239,
											"end": 6246,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 6239,
											"end": 6246,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6248,
											"end": 6254,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6219,
											"end": 6224,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6212,
											"end": 6238,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6212,
											"end": 6238,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6212,
											"end": 6238,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 6212,
											"end": 6238,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6212,
											"end": 6255,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6212,
											"end": 6255,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6212,
											"end": 6255,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6212,
											"end": 6255,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6212,
											"end": 6255,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6212,
											"end": 6255,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6212,
											"end": 6255,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 6212,
											"end": 6255,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6031,
											"end": 6267,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 6031,
											"end": 6267,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6300,
											"end": 6305,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6282,
											"end": 6314,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6282,
											"end": 6314,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6291,
											"end": 6298,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 6291,
											"end": 6296,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 6291,
											"end": 6298,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6291,
											"end": 6298,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 6291,
											"end": 6298,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6282,
											"end": 6314,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6282,
											"end": 6314,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6282,
											"end": 6314,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "9B1BFA7FA9EE420A16E124F794C35AC9F90472ACC99140EB2F6447C714CAD8EB"
										},
										{
											"begin": 6307,
											"end": 6313,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6282,
											"end": 6314,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6282,
											"end": 6314,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6282,
											"end": 6314,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 6282,
											"end": 6314,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6282,
											"end": 6314,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6282,
											"end": 6314,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 6282,
											"end": 6314,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6282,
											"end": 6314,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 6282,
											"end": 6314,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6282,
											"end": 6314,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6282,
											"end": 6314,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6282,
											"end": 6314,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6282,
											"end": 6314,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6282,
											"end": 6314,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6282,
											"end": 6314,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6282,
											"end": 6314,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 2568,
											"end": 2588,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 2568,
											"end": 2586,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2568,
											"end": 2588,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2568,
											"end": 2588,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 2568,
											"end": 2588,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6322,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 6322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2601,
											"end": 2888,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2601,
											"end": 2888,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1852,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2733,
											"end": 2740,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2733,
											"end": 2740,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2733,
											"end": 2752,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 2725,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1852,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2863,
											"end": 2870,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2881,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2863,
											"end": 2881,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2863,
											"end": 2881,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2863,
											"end": 2881,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2601,
											"end": 2888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 1373,
											"end": 1378,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1395,
											"end": 1400,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 1412,
											"end": 1414,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1416,
											"end": 1421,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 1380,
											"end": 1423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 1353,
											"end": 1424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1271,
											"end": 1431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2894,
											"end": 3103,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2894,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1809,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3074,
											"end": 3081,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3074,
											"end": 3096,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3074,
											"end": 3096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3074,
											"end": 3096,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3074,
											"end": 3096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2894,
											"end": 3103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 1790,
											"end": 1795,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1812,
											"end": 1817,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 1833,
											"end": 1837,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1839,
											"end": 1841,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 1797,
											"end": 1850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 1770,
											"end": 1851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1851,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 1770,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1670,
											"end": 1858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8795,
											"end": 8825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 1954,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 1929,
											"end": 1967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1889,
											"end": 2000,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 1889,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1993,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 1959,
											"end": 1991,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 1959,
											"end": 1993,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1959,
											"end": 1993,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 1959,
											"end": 1993,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1889,
											"end": 2000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 2728,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 2728,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 2717,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2717,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 2790,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 2790,
											"end": 2802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 3874,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3952,
											"end": 3960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4014,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3996,
											"end": 4004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7818,
											"end": 7836,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7846,
											"end": 7865,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7984,
											"end": 7988,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7981,
											"end": 7982,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7974,
											"end": 7978,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7968,
											"end": 7979,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7961,
											"end": 7965,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7955,
											"end": 7959,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7951,
											"end": 7966,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7948,
											"end": 7949,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7941,
											"end": 7946,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 7934,
											"end": 7939,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7989,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 8041,
											"end": 8048,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8085,
											"end": 8089,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8090,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8130,
											"end": 8146,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 8127,
											"end": 8128,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8122,
											"end": 8125,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8107,
											"end": 8147,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 8176,
											"end": 8192,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 8171,
											"end": 8174,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8164,
											"end": 8193,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8234,
											"end": 8250,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 8220,
											"end": 8250,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8220,
											"end": 8250,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8284,
											"end": 8285,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8278,
											"end": 8286,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8263,
											"end": 8286,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8263,
											"end": 8286,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7900,
											"end": 8296,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8324,
											"end": 8325,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8310,
											"end": 8320,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8310,
											"end": 8325,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8377,
											"end": 8378,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8362,
											"end": 8373,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8358,
											"end": 8359,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8336,
											"end": 8341,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 8328,
											"end": 8359,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8434,
											"end": 8439,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 8,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8401,
											"end": 8441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7808,
											"end": 8458,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7808,
											"end": 8458,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7738,
											"end": 8458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 7151,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 7151,
											"end": 7168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "D7E6BCF800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7084,
											"end": 7225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 2195,
											"end": 2207,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2176,
											"end": 2208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2115,
											"name": "tag",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 2006,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2086,
											"end": 2093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2086,
											"end": 2108,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2108,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2108,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2108,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 887,
											"end": 983,
											"name": "tag",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 940,
											"end": 947,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 959,
											"end": 976,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 959,
											"end": 976,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 887,
											"end": 983,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 887,
											"end": 983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8537,
											"end": 8541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 8560,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 8560,
											"end": 8586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 90,
											"end": 270,
											"name": "tag",
											"source": 14,
											"value": "324"
										},
										{
											"begin": 90,
											"end": 270,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 138,
											"end": 215,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 216,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 235,
											"end": 239,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 232,
											"end": 233,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 225,
											"end": 240,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 259,
											"end": 263,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 256,
											"end": 257,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 264,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 276,
											"end": 467,
											"name": "tag",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 276,
											"end": 467,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 316,
											"end": 319,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "419"
										},
										{
											"begin": 353,
											"end": 354,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 335,
											"end": 355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 335,
											"end": 355,
											"name": "tag",
											"source": 14,
											"value": "419"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 330,
											"end": 355,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 330,
											"end": 355,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 369,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "420"
										},
										{
											"begin": 387,
											"end": 388,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 369,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 369,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 369,
											"end": 389,
											"name": "tag",
											"source": 14,
											"value": "420"
										},
										{
											"begin": 369,
											"end": 389,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 364,
											"end": 389,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 364,
											"end": 389,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 412,
											"end": 413,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 409,
											"end": 410,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 405,
											"end": 414,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 398,
											"end": 414,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 398,
											"end": 414,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 433,
											"end": 436,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 430,
											"end": 431,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 427,
											"end": 437,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 424,
											"end": 460,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 424,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "421"
										},
										{
											"begin": 424,
											"end": 460,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 440,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 440,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "324"
										},
										{
											"begin": 440,
											"end": 458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 440,
											"end": 458,
											"name": "tag",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 440,
											"end": 458,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 424,
											"end": 460,
											"name": "tag",
											"source": 14,
											"value": "421"
										},
										{
											"begin": 424,
											"end": 460,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 276,
											"end": 467,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 276,
											"end": 467,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 276,
											"end": 467,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 276,
											"end": 467,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 276,
											"end": 467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 473,
											"end": 591,
											"name": "tag",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 473,
											"end": 591,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 560,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "424"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 560,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 560,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 560,
											"end": 584,
											"name": "tag",
											"source": 14,
											"value": "424"
										},
										{
											"begin": 560,
											"end": 584,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 555,
											"end": 558,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 548,
											"end": 585,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 473,
											"end": 591,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 473,
											"end": 591,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 473,
											"end": 591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 597,
											"end": 819,
											"name": "tag",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 597,
											"end": 819,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 690,
											"end": 694,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 728,
											"end": 730,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 717,
											"end": 726,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 713,
											"end": 731,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 705,
											"end": 731,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 705,
											"end": 731,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 741,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "426"
										},
										{
											"begin": 809,
											"end": 810,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 807,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 794,
											"end": 811,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 785,
											"end": 791,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 741,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 741,
											"end": 812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 741,
											"end": 812,
											"name": "tag",
											"source": 14,
											"value": "426"
										},
										{
											"begin": 741,
											"end": 812,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 597,
											"end": 819,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 597,
											"end": 819,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 597,
											"end": 819,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 597,
											"end": 819,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 597,
											"end": 819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 825,
											"end": 994,
											"name": "tag",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 825,
											"end": 994,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 909,
											"end": 920,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 943,
											"end": 949,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 938,
											"end": 941,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 931,
											"end": 950,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 983,
											"end": 987,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 978,
											"end": 981,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 974,
											"end": 988,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 959,
											"end": 988,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 959,
											"end": 988,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 825,
											"end": 994,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 825,
											"end": 994,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 825,
											"end": 994,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 825,
											"end": 994,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 825,
											"end": 994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1000,
											"end": 1174,
											"name": "tag",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 1000,
											"end": 1174,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1140,
											"end": 1166,
											"name": "PUSH",
											"source": 14,
											"value": "537765657473706F743A20757365206465706F73697428290000000000000000"
										},
										{
											"begin": 1136,
											"end": 1137,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1128,
											"end": 1134,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1124,
											"end": 1138,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1117,
											"end": 1167,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1000,
											"end": 1174,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1000,
											"end": 1174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1180,
											"end": 1546,
											"name": "tag",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 1180,
											"end": 1546,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1322,
											"end": 1325,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1343,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 1407,
											"end": 1409,
											"name": "PUSH",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 1402,
											"end": 1405,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1343,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 1343,
											"end": 1410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1343,
											"end": 1410,
											"name": "tag",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 1343,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1336,
											"end": 1410,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1336,
											"end": 1410,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1419,
											"end": 1512,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 1508,
											"end": 1511,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1419,
											"end": 1512,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 1419,
											"end": 1512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1419,
											"end": 1512,
											"name": "tag",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 1419,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1537,
											"end": 1539,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1532,
											"end": 1535,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1528,
											"end": 1540,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1521,
											"end": 1540,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1521,
											"end": 1540,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1180,
											"end": 1546,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1180,
											"end": 1546,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1180,
											"end": 1546,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1180,
											"end": 1546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1552,
											"end": 1971,
											"name": "tag",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 1552,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1718,
											"end": 1722,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1756,
											"end": 1758,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1741,
											"end": 1759,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1805,
											"end": 1814,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1799,
											"end": 1803,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1795,
											"end": 1815,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1791,
											"end": 1792,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1780,
											"end": 1789,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1776,
											"end": 1793,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1816,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1833,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "433"
										},
										{
											"begin": 1959,
											"end": 1963,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1833,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 1833,
											"end": 1964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1833,
											"end": 1964,
											"name": "tag",
											"source": 14,
											"value": "433"
										},
										{
											"begin": 1833,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1825,
											"end": 1964,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1825,
											"end": 1964,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1552,
											"end": 1971,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1552,
											"end": 1971,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1552,
											"end": 1971,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1552,
											"end": 1971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1977,
											"end": 2052,
											"name": "tag",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 1977,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2010,
											"end": 2016,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2043,
											"end": 2045,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2037,
											"end": 2046,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2046,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2046,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1977,
											"end": 2052,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1977,
											"end": 2052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2058,
											"end": 2175,
											"name": "tag",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 2058,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2167,
											"end": 2168,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2164,
											"end": 2165,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2157,
											"end": 2169,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2181,
											"end": 2298,
											"name": "tag",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 2181,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2290,
											"end": 2291,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2287,
											"end": 2288,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2280,
											"end": 2292,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2304,
											"end": 2430,
											"name": "tag",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 2304,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2341,
											"end": 2348,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2381,
											"end": 2423,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2374,
											"end": 2379,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2370,
											"end": 2424,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2359,
											"end": 2424,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2359,
											"end": 2424,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2304,
											"end": 2430,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2304,
											"end": 2430,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2304,
											"end": 2430,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2304,
											"end": 2430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2436,
											"end": 2532,
											"name": "tag",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 2436,
											"end": 2532,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2473,
											"end": 2480,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2502,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "439"
										},
										{
											"begin": 2520,
											"end": 2525,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2502,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 2502,
											"end": 2526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2502,
											"end": 2526,
											"name": "tag",
											"source": 14,
											"value": "439"
										},
										{
											"begin": 2502,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2491,
											"end": 2526,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2491,
											"end": 2526,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2436,
											"end": 2532,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2436,
											"end": 2532,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2436,
											"end": 2532,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2436,
											"end": 2532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2538,
											"end": 2660,
											"name": "tag",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 2538,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "441"
										},
										{
											"begin": 2629,
											"end": 2634,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 2611,
											"end": 2635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "tag",
											"source": 14,
											"value": "441"
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2604,
											"end": 2609,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2601,
											"end": 2636,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2591,
											"end": 2654,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "442"
										},
										{
											"begin": 2591,
											"end": 2654,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2650,
											"end": 2651,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2647,
											"end": 2648,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2640,
											"end": 2652,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2591,
											"end": 2654,
											"name": "tag",
											"source": 14,
											"value": "442"
										},
										{
											"begin": 2591,
											"end": 2654,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2538,
											"end": 2660,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2538,
											"end": 2660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2666,
											"end": 2805,
											"name": "tag",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 2666,
											"end": 2805,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2712,
											"end": 2717,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2750,
											"end": 2756,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2737,
											"end": 2757,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2728,
											"end": 2757,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2728,
											"end": 2757,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2766,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 2793,
											"end": 2798,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2766,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 2766,
											"end": 2799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2766,
											"end": 2799,
											"name": "tag",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 2766,
											"end": 2799,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2666,
											"end": 2805,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2666,
											"end": 2805,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2666,
											"end": 2805,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2666,
											"end": 2805,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2666,
											"end": 2805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 3140,
											"name": "tag",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 2811,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2870,
											"end": 2876,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2919,
											"end": 2921,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2907,
											"end": 2916,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2898,
											"end": 2905,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2894,
											"end": 2917,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2890,
											"end": 2922,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2887,
											"end": 3006,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2887,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "446"
										},
										{
											"begin": 2887,
											"end": 3006,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2925,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "447"
										},
										{
											"begin": 2925,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 2925,
											"end": 3004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2925,
											"end": 3004,
											"name": "tag",
											"source": 14,
											"value": "447"
										},
										{
											"begin": 2925,
											"end": 3004,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2887,
											"end": 3006,
											"name": "tag",
											"source": 14,
											"value": "446"
										},
										{
											"begin": 2887,
											"end": 3006,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3045,
											"end": 3046,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3070,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "448"
										},
										{
											"begin": 3115,
											"end": 3122,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3106,
											"end": 3112,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3091,
											"end": 3113,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3070,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 3070,
											"end": 3123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3070,
											"end": 3123,
											"name": "tag",
											"source": 14,
											"value": "448"
										},
										{
											"begin": 3070,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3060,
											"end": 3123,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3060,
											"end": 3123,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3016,
											"end": 3133,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 3140,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 3140,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 3140,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 3140,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 3140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3146,
											"end": 3264,
											"name": "tag",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 3146,
											"end": 3264,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3233,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 3251,
											"end": 3256,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3233,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 3233,
											"end": 3257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3233,
											"end": 3257,
											"name": "tag",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 3233,
											"end": 3257,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3228,
											"end": 3231,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3221,
											"end": 3258,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3146,
											"end": 3264,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3146,
											"end": 3264,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3146,
											"end": 3264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3270,
											"end": 3492,
											"name": "tag",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3270,
											"end": 3492,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3363,
											"end": 3367,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3401,
											"end": 3403,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3386,
											"end": 3404,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3378,
											"end": 3404,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3378,
											"end": 3404,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3414,
											"end": 3485,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 3482,
											"end": 3483,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3480,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3467,
											"end": 3484,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3458,
											"end": 3464,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3414,
											"end": 3485,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 3414,
											"end": 3485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3414,
											"end": 3485,
											"name": "tag",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 3414,
											"end": 3485,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3270,
											"end": 3492,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3270,
											"end": 3492,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3270,
											"end": 3492,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3270,
											"end": 3492,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3270,
											"end": 3492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3498,
											"end": 3620,
											"name": "tag",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 3498,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3571,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "454"
										},
										{
											"begin": 3589,
											"end": 3594,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3571,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 3571,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3571,
											"end": 3595,
											"name": "tag",
											"source": 14,
											"value": "454"
										},
										{
											"begin": 3571,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3564,
											"end": 3569,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3561,
											"end": 3596,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 3551,
											"end": 3614,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "455"
										},
										{
											"begin": 3551,
											"end": 3614,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3610,
											"end": 3611,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3607,
											"end": 3608,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3600,
											"end": 3612,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3551,
											"end": 3614,
											"name": "tag",
											"source": 14,
											"value": "455"
										},
										{
											"begin": 3551,
											"end": 3614,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3498,
											"end": 3620,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3498,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3626,
											"end": 3765,
											"name": "tag",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 3626,
											"end": 3765,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3672,
											"end": 3677,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3710,
											"end": 3716,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3697,
											"end": 3717,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3688,
											"end": 3717,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3688,
											"end": 3717,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3726,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "457"
										},
										{
											"begin": 3753,
											"end": 3758,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3726,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 3726,
											"end": 3759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3726,
											"end": 3759,
											"name": "tag",
											"source": 14,
											"value": "457"
										},
										{
											"begin": 3726,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3626,
											"end": 3765,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3626,
											"end": 3765,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3626,
											"end": 3765,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3626,
											"end": 3765,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3626,
											"end": 3765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3771,
											"end": 4245,
											"name": "tag",
											"source": 14,
											"value": "43"
										},
										{
											"begin": 3771,
											"end": 4245,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3839,
											"end": 3845,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3847,
											"end": 3853,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3896,
											"end": 3898,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3884,
											"end": 3893,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3871,
											"end": 3894,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3867,
											"end": 3899,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3864,
											"end": 3983,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3864,
											"end": 3983,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 3864,
											"end": 3983,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3902,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "460"
										},
										{
											"begin": 3902,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 3902,
											"end": 3981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3902,
											"end": 3981,
											"name": "tag",
											"source": 14,
											"value": "460"
										},
										{
											"begin": 3902,
											"end": 3981,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3864,
											"end": 3983,
											"name": "tag",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 3864,
											"end": 3983,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4022,
											"end": 4023,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4047,
											"end": 4100,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "461"
										},
										{
											"begin": 4092,
											"end": 4099,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4083,
											"end": 4089,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4072,
											"end": 4081,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4068,
											"end": 4090,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4047,
											"end": 4100,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 4047,
											"end": 4100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4047,
											"end": 4100,
											"name": "tag",
											"source": 14,
											"value": "461"
										},
										{
											"begin": 4047,
											"end": 4100,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4037,
											"end": 4100,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4037,
											"end": 4100,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3993,
											"end": 4110,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4149,
											"end": 4151,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4175,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "462"
										},
										{
											"begin": 4220,
											"end": 4227,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4211,
											"end": 4217,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4200,
											"end": 4209,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4196,
											"end": 4218,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4175,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 4175,
											"end": 4228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4175,
											"end": 4228,
											"name": "tag",
											"source": 14,
											"value": "462"
										},
										{
											"begin": 4175,
											"end": 4228,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4165,
											"end": 4228,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4165,
											"end": 4228,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4120,
											"end": 4238,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3771,
											"end": 4245,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3771,
											"end": 4245,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3771,
											"end": 4245,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3771,
											"end": 4245,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3771,
											"end": 4245,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3771,
											"end": 4245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4251,
											"end": 4725,
											"name": "tag",
											"source": 14,
											"value": "48"
										},
										{
											"begin": 4251,
											"end": 4725,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4319,
											"end": 4325,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4327,
											"end": 4333,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4376,
											"end": 4378,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4364,
											"end": 4373,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4355,
											"end": 4362,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4351,
											"end": 4374,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4347,
											"end": 4379,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 4344,
											"end": 4463,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4344,
											"end": 4463,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "464"
										},
										{
											"begin": 4344,
											"end": 4463,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4382,
											"end": 4461,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "465"
										},
										{
											"begin": 4382,
											"end": 4461,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 4382,
											"end": 4461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4382,
											"end": 4461,
											"name": "tag",
											"source": 14,
											"value": "465"
										},
										{
											"begin": 4382,
											"end": 4461,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4344,
											"end": 4463,
											"name": "tag",
											"source": 14,
											"value": "464"
										},
										{
											"begin": 4344,
											"end": 4463,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4502,
											"end": 4503,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4527,
											"end": 4580,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "466"
										},
										{
											"begin": 4572,
											"end": 4579,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4563,
											"end": 4569,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4552,
											"end": 4561,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4548,
											"end": 4570,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4527,
											"end": 4580,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 4527,
											"end": 4580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4527,
											"end": 4580,
											"name": "tag",
											"source": 14,
											"value": "466"
										},
										{
											"begin": 4527,
											"end": 4580,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4517,
											"end": 4580,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4517,
											"end": 4580,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4473,
											"end": 4590,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4629,
											"end": 4631,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4655,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "467"
										},
										{
											"begin": 4700,
											"end": 4707,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4691,
											"end": 4697,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4680,
											"end": 4689,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4676,
											"end": 4698,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4655,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 4655,
											"end": 4708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4655,
											"end": 4708,
											"name": "tag",
											"source": 14,
											"value": "467"
										},
										{
											"begin": 4655,
											"end": 4708,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4645,
											"end": 4708,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4645,
											"end": 4708,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4600,
											"end": 4718,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4251,
											"end": 4725,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4251,
											"end": 4725,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4251,
											"end": 4725,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4251,
											"end": 4725,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4251,
											"end": 4725,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4251,
											"end": 4725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4731,
											"end": 4791,
											"name": "tag",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 4731,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4759,
											"end": 4762,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4780,
											"end": 4785,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4773,
											"end": 4785,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4773,
											"end": 4785,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4731,
											"end": 4791,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4731,
											"end": 4791,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4731,
											"end": 4791,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4731,
											"end": 4791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4797,
											"end": 4939,
											"name": "tag",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 4797,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4847,
											"end": 4856,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4880,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "470"
										},
										{
											"begin": 4898,
											"end": 4932,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "471"
										},
										{
											"begin": 4907,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "472"
										},
										{
											"begin": 4925,
											"end": 4930,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4907,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 4907,
											"end": 4931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4907,
											"end": 4931,
											"name": "tag",
											"source": 14,
											"value": "472"
										},
										{
											"begin": 4907,
											"end": 4931,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4898,
											"end": 4932,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 4898,
											"end": 4932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4898,
											"end": 4932,
											"name": "tag",
											"source": 14,
											"value": "471"
										},
										{
											"begin": 4898,
											"end": 4932,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4880,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 4880,
											"end": 4933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4880,
											"end": 4933,
											"name": "tag",
											"source": 14,
											"value": "470"
										},
										{
											"begin": 4880,
											"end": 4933,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4867,
											"end": 4933,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4867,
											"end": 4933,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4797,
											"end": 4939,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4797,
											"end": 4939,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4797,
											"end": 4939,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4797,
											"end": 4939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4945,
											"end": 5071,
											"name": "tag",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 4945,
											"end": 5071,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4995,
											"end": 5004,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5028,
											"end": 5065,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "474"
										},
										{
											"begin": 5059,
											"end": 5064,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5028,
											"end": 5065,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 5028,
											"end": 5065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5028,
											"end": 5065,
											"name": "tag",
											"source": 14,
											"value": "474"
										},
										{
											"begin": 5028,
											"end": 5065,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5015,
											"end": 5065,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5015,
											"end": 5065,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4945,
											"end": 5071,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4945,
											"end": 5071,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4945,
											"end": 5071,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4945,
											"end": 5071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5077,
											"end": 5219,
											"name": "tag",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 5077,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5143,
											"end": 5152,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5176,
											"end": 5213,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "476"
										},
										{
											"begin": 5207,
											"end": 5212,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5176,
											"end": 5213,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 5176,
											"end": 5213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5176,
											"end": 5213,
											"name": "tag",
											"source": 14,
											"value": "476"
										},
										{
											"begin": 5176,
											"end": 5213,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5163,
											"end": 5213,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5163,
											"end": 5213,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5077,
											"end": 5219,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5077,
											"end": 5219,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5077,
											"end": 5219,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5077,
											"end": 5219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5225,
											"end": 5388,
											"name": "tag",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 5225,
											"end": 5388,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5328,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "478"
										},
										{
											"begin": 5375,
											"end": 5380,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5328,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 5328,
											"end": 5381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5328,
											"end": 5381,
											"name": "tag",
											"source": 14,
											"value": "478"
										},
										{
											"begin": 5328,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5323,
											"end": 5326,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5316,
											"end": 5382,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5225,
											"end": 5388,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5225,
											"end": 5388,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5225,
											"end": 5388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5394,
											"end": 5648,
											"name": "tag",
											"source": 14,
											"value": "57"
										},
										{
											"begin": 5394,
											"end": 5648,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5503,
											"end": 5507,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5541,
											"end": 5543,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5530,
											"end": 5539,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5526,
											"end": 5544,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5518,
											"end": 5544,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5518,
											"end": 5544,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5554,
											"end": 5641,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "480"
										},
										{
											"begin": 5638,
											"end": 5639,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5627,
											"end": 5636,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5623,
											"end": 5640,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5614,
											"end": 5620,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5554,
											"end": 5641,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 5554,
											"end": 5641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5554,
											"end": 5641,
											"name": "tag",
											"source": 14,
											"value": "480"
										},
										{
											"begin": 5554,
											"end": 5641,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5394,
											"end": 5648,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5394,
											"end": 5648,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5394,
											"end": 5648,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5394,
											"end": 5648,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5394,
											"end": 5648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5654,
											"end": 5755,
											"name": "tag",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 5654,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5690,
											"end": 5697,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5730,
											"end": 5748,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5723,
											"end": 5728,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5719,
											"end": 5749,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5708,
											"end": 5749,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5708,
											"end": 5749,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5654,
											"end": 5755,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5654,
											"end": 5755,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5654,
											"end": 5755,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5654,
											"end": 5755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5761,
											"end": 5876,
											"name": "tag",
											"source": 14,
											"value": "345"
										},
										{
											"begin": 5761,
											"end": 5876,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5846,
											"end": 5869,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "483"
										},
										{
											"begin": 5863,
											"end": 5868,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5846,
											"end": 5869,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 5846,
											"end": 5869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5846,
											"end": 5869,
											"name": "tag",
											"source": 14,
											"value": "483"
										},
										{
											"begin": 5846,
											"end": 5869,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5841,
											"end": 5844,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5834,
											"end": 5870,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5761,
											"end": 5876,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5761,
											"end": 5876,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5761,
											"end": 5876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5882,
											"end": 5981,
											"name": "tag",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 5882,
											"end": 5981,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5934,
											"end": 5940,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5968,
											"end": 5973,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5962,
											"end": 5974,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5952,
											"end": 5974,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5952,
											"end": 5974,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5882,
											"end": 5981,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5882,
											"end": 5981,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5882,
											"end": 5981,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5882,
											"end": 5981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5987,
											"end": 6235,
											"name": "tag",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 5987,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6069,
											"end": 6070,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6079,
											"end": 6192,
											"name": "tag",
											"source": 14,
											"value": "486"
										},
										{
											"begin": 6079,
											"end": 6192,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6093,
											"end": 6099,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6090,
											"end": 6091,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6087,
											"end": 6100,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 6079,
											"end": 6192,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6079,
											"end": 6192,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "488"
										},
										{
											"begin": 6079,
											"end": 6192,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6178,
											"end": 6179,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6173,
											"end": 6176,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6169,
											"end": 6180,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6163,
											"end": 6181,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6159,
											"end": 6160,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6154,
											"end": 6157,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6150,
											"end": 6161,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6143,
											"end": 6182,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6115,
											"end": 6117,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6112,
											"end": 6113,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6108,
											"end": 6118,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6103,
											"end": 6118,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6103,
											"end": 6118,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6079,
											"end": 6192,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "486"
										},
										{
											"begin": 6079,
											"end": 6192,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6079,
											"end": 6192,
											"name": "tag",
											"source": 14,
											"value": "488"
										},
										{
											"begin": 6079,
											"end": 6192,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6226,
											"end": 6227,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6217,
											"end": 6223,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6212,
											"end": 6215,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6208,
											"end": 6224,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6201,
											"end": 6228,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6049,
											"end": 6235,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5987,
											"end": 6235,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5987,
											"end": 6235,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5987,
											"end": 6235,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5987,
											"end": 6235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6241,
											"end": 6343,
											"name": "tag",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 6241,
											"end": 6343,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6282,
											"end": 6288,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6333,
											"end": 6335,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 6329,
											"end": 6336,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 6324,
											"end": 6326,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 6317,
											"end": 6322,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6313,
											"end": 6327,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6309,
											"end": 6337,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6299,
											"end": 6337,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6299,
											"end": 6337,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6241,
											"end": 6343,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6241,
											"end": 6343,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6241,
											"end": 6343,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6241,
											"end": 6343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6349,
											"end": 6726,
											"name": "tag",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 6349,
											"end": 6726,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6437,
											"end": 6440,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6465,
											"end": 6504,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "491"
										},
										{
											"begin": 6498,
											"end": 6503,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6465,
											"end": 6504,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 6465,
											"end": 6504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6465,
											"end": 6504,
											"name": "tag",
											"source": 14,
											"value": "491"
										},
										{
											"begin": 6465,
											"end": 6504,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6520,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "492"
										},
										{
											"begin": 6584,
											"end": 6590,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6579,
											"end": 6582,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6520,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 6520,
											"end": 6591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6520,
											"end": 6591,
											"name": "tag",
											"source": 14,
											"value": "492"
										},
										{
											"begin": 6520,
											"end": 6591,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6513,
											"end": 6591,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 6513,
											"end": 6591,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6600,
											"end": 6665,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "493"
										},
										{
											"begin": 6658,
											"end": 6664,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6653,
											"end": 6656,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6646,
											"end": 6650,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6639,
											"end": 6644,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 6635,
											"end": 6651,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6600,
											"end": 6665,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 6600,
											"end": 6665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6600,
											"end": 6665,
											"name": "tag",
											"source": 14,
											"value": "493"
										},
										{
											"begin": 6600,
											"end": 6665,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6690,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "494"
										},
										{
											"begin": 6712,
											"end": 6718,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6690,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 6690,
											"end": 6719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6690,
											"end": 6719,
											"name": "tag",
											"source": 14,
											"value": "494"
										},
										{
											"begin": 6690,
											"end": 6719,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6685,
											"end": 6688,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6681,
											"end": 6720,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6674,
											"end": 6720,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6674,
											"end": 6720,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6441,
											"end": 6726,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6349,
											"end": 6726,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6349,
											"end": 6726,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6349,
											"end": 6726,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6349,
											"end": 6726,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6349,
											"end": 6726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6732,
											"end": 7257,
											"name": "tag",
											"source": 14,
											"value": "62"
										},
										{
											"begin": 6732,
											"end": 7257,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6897,
											"end": 6901,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6935,
											"end": 6937,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 6924,
											"end": 6933,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6920,
											"end": 6938,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6912,
											"end": 6938,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6912,
											"end": 6938,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6948,
											"end": 7017,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "496"
										},
										{
											"begin": 7014,
											"end": 7015,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7003,
											"end": 7012,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6999,
											"end": 7016,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6990,
											"end": 6996,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 6948,
											"end": 7017,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "345"
										},
										{
											"begin": 6948,
											"end": 7017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6948,
											"end": 7017,
											"name": "tag",
											"source": 14,
											"value": "496"
										},
										{
											"begin": 6948,
											"end": 7017,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7027,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 7093,
											"end": 7095,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7082,
											"end": 7091,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7078,
											"end": 7096,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7069,
											"end": 7075,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7027,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "345"
										},
										{
											"begin": 7027,
											"end": 7097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7027,
											"end": 7097,
											"name": "tag",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 7027,
											"end": 7097,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7144,
											"end": 7153,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7138,
											"end": 7142,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7134,
											"end": 7154,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7129,
											"end": 7131,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7118,
											"end": 7127,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7114,
											"end": 7132,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7107,
											"end": 7155,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7172,
											"end": 7250,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "498"
										},
										{
											"begin": 7245,
											"end": 7249,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7236,
											"end": 7242,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7172,
											"end": 7250,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 7172,
											"end": 7250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7172,
											"end": 7250,
											"name": "tag",
											"source": 14,
											"value": "498"
										},
										{
											"begin": 7172,
											"end": 7250,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7164,
											"end": 7250,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7164,
											"end": 7250,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6732,
											"end": 7257,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 6732,
											"end": 7257,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 6732,
											"end": 7257,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6732,
											"end": 7257,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6732,
											"end": 7257,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6732,
											"end": 7257,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6732,
											"end": 7257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7263,
											"end": 7383,
											"name": "tag",
											"source": 14,
											"value": "350"
										},
										{
											"begin": 7263,
											"end": 7383,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7335,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "500"
										},
										{
											"begin": 7352,
											"end": 7357,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7335,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 7335,
											"end": 7358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7335,
											"end": 7358,
											"name": "tag",
											"source": 14,
											"value": "500"
										},
										{
											"begin": 7335,
											"end": 7358,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7328,
											"end": 7333,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7325,
											"end": 7359,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 7315,
											"end": 7377,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "501"
										},
										{
											"begin": 7315,
											"end": 7377,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7373,
											"end": 7374,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7370,
											"end": 7371,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7363,
											"end": 7375,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7315,
											"end": 7377,
											"name": "tag",
											"source": 14,
											"value": "501"
										},
										{
											"begin": 7315,
											"end": 7377,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7263,
											"end": 7383,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7263,
											"end": 7383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7389,
											"end": 7526,
											"name": "tag",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 7389,
											"end": 7526,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7434,
											"end": 7439,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7472,
											"end": 7478,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7459,
											"end": 7479,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 7450,
											"end": 7479,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7450,
											"end": 7479,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7488,
											"end": 7520,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "503"
										},
										{
											"begin": 7514,
											"end": 7519,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7488,
											"end": 7520,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "350"
										},
										{
											"begin": 7488,
											"end": 7520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7488,
											"end": 7520,
											"name": "tag",
											"source": 14,
											"value": "503"
										},
										{
											"begin": 7488,
											"end": 7520,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7389,
											"end": 7526,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7389,
											"end": 7526,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7389,
											"end": 7526,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7389,
											"end": 7526,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7389,
											"end": 7526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7532,
											"end": 7649,
											"name": "tag",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 7532,
											"end": 7649,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7641,
											"end": 7642,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7638,
											"end": 7639,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7655,
											"end": 7772,
											"name": "tag",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 7655,
											"end": 7772,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7764,
											"end": 7765,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7761,
											"end": 7762,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7754,
											"end": 7766,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7778,
											"end": 7958,
											"name": "tag",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 7778,
											"end": 7958,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7826,
											"end": 7903,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7823,
											"end": 7824,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7816,
											"end": 7904,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7923,
											"end": 7927,
											"name": "PUSH",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 7920,
											"end": 7921,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 7913,
											"end": 7928,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7947,
											"end": 7951,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 7944,
											"end": 7945,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7937,
											"end": 7952,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7964,
											"end": 8245,
											"name": "tag",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 7964,
											"end": 8245,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8047,
											"end": 8074,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "508"
										},
										{
											"begin": 8069,
											"end": 8073,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8047,
											"end": 8074,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 8047,
											"end": 8074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8047,
											"end": 8074,
											"name": "tag",
											"source": 14,
											"value": "508"
										},
										{
											"begin": 8047,
											"end": 8074,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8039,
											"end": 8045,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8035,
											"end": 8075,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8177,
											"end": 8183,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8162,
											"end": 8184,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 8141,
											"end": 8159,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8129,
											"end": 8139,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8126,
											"end": 8160,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 8123,
											"end": 8185,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 8120,
											"end": 8208,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8120,
											"end": 8208,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "509"
										},
										{
											"begin": 8120,
											"end": 8208,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8188,
											"end": 8206,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "510"
										},
										{
											"begin": 8188,
											"end": 8206,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 8188,
											"end": 8206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8188,
											"end": 8206,
											"name": "tag",
											"source": 14,
											"value": "510"
										},
										{
											"begin": 8188,
											"end": 8206,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8120,
											"end": 8208,
											"name": "tag",
											"source": 14,
											"value": "509"
										},
										{
											"begin": 8120,
											"end": 8208,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8228,
											"end": 8238,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8224,
											"end": 8226,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8217,
											"end": 8239,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8007,
											"end": 8245,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7964,
											"end": 8245,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7964,
											"end": 8245,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7964,
											"end": 8245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8251,
											"end": 8380,
											"name": "tag",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 8251,
											"end": 8380,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8285,
											"end": 8291,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8312,
											"end": 8332,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "512"
										},
										{
											"begin": 8312,
											"end": 8332,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 8312,
											"end": 8332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8312,
											"end": 8332,
											"name": "tag",
											"source": 14,
											"value": "512"
										},
										{
											"begin": 8312,
											"end": 8332,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8302,
											"end": 8332,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8302,
											"end": 8332,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8341,
											"end": 8374,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "513"
										},
										{
											"begin": 8369,
											"end": 8373,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8361,
											"end": 8367,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8341,
											"end": 8374,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 8341,
											"end": 8374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8341,
											"end": 8374,
											"name": "tag",
											"source": 14,
											"value": "513"
										},
										{
											"begin": 8341,
											"end": 8374,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8251,
											"end": 8380,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8251,
											"end": 8380,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8251,
											"end": 8380,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8251,
											"end": 8380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8386,
											"end": 8694,
											"name": "tag",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 8386,
											"end": 8694,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8448,
											"end": 8452,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8538,
											"end": 8556,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8530,
											"end": 8536,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8527,
											"end": 8557,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 8524,
											"end": 8580,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8524,
											"end": 8580,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "515"
										},
										{
											"begin": 8524,
											"end": 8580,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8560,
											"end": 8578,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "516"
										},
										{
											"begin": 8560,
											"end": 8578,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 8560,
											"end": 8578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8560,
											"end": 8578,
											"name": "tag",
											"source": 14,
											"value": "516"
										},
										{
											"begin": 8560,
											"end": 8578,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8524,
											"end": 8580,
											"name": "tag",
											"source": 14,
											"value": "515"
										},
										{
											"begin": 8524,
											"end": 8580,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8598,
											"end": 8627,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "517"
										},
										{
											"begin": 8620,
											"end": 8626,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8598,
											"end": 8627,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 8598,
											"end": 8627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8598,
											"end": 8627,
											"name": "tag",
											"source": 14,
											"value": "517"
										},
										{
											"begin": 8598,
											"end": 8627,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8590,
											"end": 8627,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8590,
											"end": 8627,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8682,
											"end": 8686,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8676,
											"end": 8680,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8672,
											"end": 8687,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8664,
											"end": 8687,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8664,
											"end": 8687,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8386,
											"end": 8694,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8386,
											"end": 8694,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8386,
											"end": 8694,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8386,
											"end": 8694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8700,
											"end": 8848,
											"name": "tag",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 8700,
											"end": 8848,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8798,
											"end": 8804,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8793,
											"end": 8796,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8788,
											"end": 8791,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8775,
											"end": 8805,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 8839,
											"end": 8840,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8830,
											"end": 8836,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8825,
											"end": 8828,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8821,
											"end": 8837,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8814,
											"end": 8841,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8700,
											"end": 8848,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8700,
											"end": 8848,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8700,
											"end": 8848,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8700,
											"end": 8848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8854,
											"end": 9279,
											"name": "tag",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 8854,
											"end": 9279,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8932,
											"end": 8937,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8957,
											"end": 9023,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "520"
										},
										{
											"begin": 8973,
											"end": 9022,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "521"
										},
										{
											"begin": 9015,
											"end": 9021,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8973,
											"end": 9022,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 8973,
											"end": 9022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8973,
											"end": 9022,
											"name": "tag",
											"source": 14,
											"value": "521"
										},
										{
											"begin": 8973,
											"end": 9022,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8957,
											"end": 9023,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 8957,
											"end": 9023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8957,
											"end": 9023,
											"name": "tag",
											"source": 14,
											"value": "520"
										},
										{
											"begin": 8957,
											"end": 9023,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8948,
											"end": 9023,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8948,
											"end": 9023,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9046,
											"end": 9052,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9039,
											"end": 9044,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9032,
											"end": 9053,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9084,
											"end": 9088,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9077,
											"end": 9082,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9073,
											"end": 9089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9122,
											"end": 9125,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9113,
											"end": 9119,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9108,
											"end": 9111,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9104,
											"end": 9120,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9101,
											"end": 9126,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 9098,
											"end": 9210,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9098,
											"end": 9210,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "522"
										},
										{
											"begin": 9098,
											"end": 9210,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9129,
											"end": 9208,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "523"
										},
										{
											"begin": 9129,
											"end": 9208,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 9129,
											"end": 9208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9129,
											"end": 9208,
											"name": "tag",
											"source": 14,
											"value": "523"
										},
										{
											"begin": 9129,
											"end": 9208,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9098,
											"end": 9210,
											"name": "tag",
											"source": 14,
											"value": "522"
										},
										{
											"begin": 9098,
											"end": 9210,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9219,
											"end": 9273,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "524"
										},
										{
											"begin": 9266,
											"end": 9272,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9261,
											"end": 9264,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9256,
											"end": 9259,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 9219,
											"end": 9273,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 9219,
											"end": 9273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9219,
											"end": 9273,
											"name": "tag",
											"source": 14,
											"value": "524"
										},
										{
											"begin": 9219,
											"end": 9273,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8938,
											"end": 9279,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8854,
											"end": 9279,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 8854,
											"end": 9279,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8854,
											"end": 9279,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8854,
											"end": 9279,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8854,
											"end": 9279,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8854,
											"end": 9279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9299,
											"end": 9639,
											"name": "tag",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 9299,
											"end": 9639,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9355,
											"end": 9360,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9404,
											"end": 9407,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9397,
											"end": 9401,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 9389,
											"end": 9395,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9385,
											"end": 9402,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9381,
											"end": 9408,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 9371,
											"end": 9493,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "526"
										},
										{
											"begin": 9371,
											"end": 9493,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9412,
											"end": 9491,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "527"
										},
										{
											"begin": 9412,
											"end": 9491,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 9412,
											"end": 9491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9412,
											"end": 9491,
											"name": "tag",
											"source": 14,
											"value": "527"
										},
										{
											"begin": 9412,
											"end": 9491,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9371,
											"end": 9493,
											"name": "tag",
											"source": 14,
											"value": "526"
										},
										{
											"begin": 9371,
											"end": 9493,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9529,
											"end": 9535,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9516,
											"end": 9536,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 9554,
											"end": 9633,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "528"
										},
										{
											"begin": 9629,
											"end": 9632,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9621,
											"end": 9627,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9614,
											"end": 9618,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9606,
											"end": 9612,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 9602,
											"end": 9619,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9554,
											"end": 9633,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 9554,
											"end": 9633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9554,
											"end": 9633,
											"name": "tag",
											"source": 14,
											"value": "528"
										},
										{
											"begin": 9554,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9545,
											"end": 9633,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9545,
											"end": 9633,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9361,
											"end": 9639,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9299,
											"end": 9639,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9299,
											"end": 9639,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9299,
											"end": 9639,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9299,
											"end": 9639,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9299,
											"end": 9639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9645,
											"end": 10440,
											"name": "tag",
											"source": 14,
											"value": "70"
										},
										{
											"begin": 9645,
											"end": 10440,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9730,
											"end": 9736,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9738,
											"end": 9744,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9746,
											"end": 9752,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9795,
											"end": 9797,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 9783,
											"end": 9792,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9774,
											"end": 9781,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 9770,
											"end": 9793,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 9766,
											"end": 9798,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 9763,
											"end": 9882,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9763,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "530"
										},
										{
											"begin": 9763,
											"end": 9882,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "531"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 9801,
											"end": 9880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "tag",
											"source": 14,
											"value": "531"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9763,
											"end": 9882,
											"name": "tag",
											"source": 14,
											"value": "530"
										},
										{
											"begin": 9763,
											"end": 9882,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9921,
											"end": 9922,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9946,
											"end": 9998,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "532"
										},
										{
											"begin": 9990,
											"end": 9997,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 9981,
											"end": 9987,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9970,
											"end": 9979,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 9966,
											"end": 9988,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9946,
											"end": 9998,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 9946,
											"end": 9998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9946,
											"end": 9998,
											"name": "tag",
											"source": 14,
											"value": "532"
										},
										{
											"begin": 9946,
											"end": 9998,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9936,
											"end": 9998,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 9936,
											"end": 9998,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9892,
											"end": 10008,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10047,
											"end": 10049,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10073,
											"end": 10125,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "533"
										},
										{
											"begin": 10117,
											"end": 10124,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10108,
											"end": 10114,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10097,
											"end": 10106,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 10093,
											"end": 10115,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10073,
											"end": 10125,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 10073,
											"end": 10125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10073,
											"end": 10125,
											"name": "tag",
											"source": 14,
											"value": "533"
										},
										{
											"begin": 10073,
											"end": 10125,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10063,
											"end": 10125,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10063,
											"end": 10125,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10018,
											"end": 10135,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10202,
											"end": 10204,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10191,
											"end": 10200,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10187,
											"end": 10205,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10174,
											"end": 10206,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 10233,
											"end": 10251,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10225,
											"end": 10231,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10222,
											"end": 10252,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 10219,
											"end": 10336,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10219,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "534"
										},
										{
											"begin": 10219,
											"end": 10336,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10255,
											"end": 10334,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "535"
										},
										{
											"begin": 10255,
											"end": 10334,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 10255,
											"end": 10334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10255,
											"end": 10334,
											"name": "tag",
											"source": 14,
											"value": "535"
										},
										{
											"begin": 10255,
											"end": 10334,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10219,
											"end": 10336,
											"name": "tag",
											"source": 14,
											"value": "534"
										},
										{
											"begin": 10219,
											"end": 10336,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10360,
											"end": 10423,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 10415,
											"end": 10422,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10406,
											"end": 10412,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10395,
											"end": 10404,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 10391,
											"end": 10413,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10360,
											"end": 10423,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 10360,
											"end": 10423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10360,
											"end": 10423,
											"name": "tag",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 10360,
											"end": 10423,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10350,
											"end": 10423,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10350,
											"end": 10423,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10145,
											"end": 10433,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9645,
											"end": 10440,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9645,
											"end": 10440,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9645,
											"end": 10440,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9645,
											"end": 10440,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9645,
											"end": 10440,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9645,
											"end": 10440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10446,
											"end": 11065,
											"name": "tag",
											"source": 14,
											"value": "85"
										},
										{
											"begin": 10446,
											"end": 11065,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10523,
											"end": 10529,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10531,
											"end": 10537,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10539,
											"end": 10545,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10588,
											"end": 10590,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 10576,
											"end": 10585,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10567,
											"end": 10574,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10563,
											"end": 10586,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 10559,
											"end": 10591,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 10556,
											"end": 10675,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10556,
											"end": 10675,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "538"
										},
										{
											"begin": 10556,
											"end": 10675,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10594,
											"end": 10673,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "539"
										},
										{
											"begin": 10594,
											"end": 10673,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 10594,
											"end": 10673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10594,
											"end": 10673,
											"name": "tag",
											"source": 14,
											"value": "539"
										},
										{
											"begin": 10594,
											"end": 10673,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10556,
											"end": 10675,
											"name": "tag",
											"source": 14,
											"value": "538"
										},
										{
											"begin": 10556,
											"end": 10675,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10714,
											"end": 10715,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10739,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "540"
										},
										{
											"begin": 10784,
											"end": 10791,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10775,
											"end": 10781,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10764,
											"end": 10773,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 10760,
											"end": 10782,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10739,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 10739,
											"end": 10792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10739,
											"end": 10792,
											"name": "tag",
											"source": 14,
											"value": "540"
										},
										{
											"begin": 10739,
											"end": 10792,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10729,
											"end": 10792,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 10729,
											"end": 10792,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10685,
											"end": 10802,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10841,
											"end": 10843,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10867,
											"end": 10920,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "541"
										},
										{
											"begin": 10912,
											"end": 10919,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10903,
											"end": 10909,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10892,
											"end": 10901,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 10888,
											"end": 10910,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10867,
											"end": 10920,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 10867,
											"end": 10920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10867,
											"end": 10920,
											"name": "tag",
											"source": 14,
											"value": "541"
										},
										{
											"begin": 10867,
											"end": 10920,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10857,
											"end": 10920,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10857,
											"end": 10920,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10812,
											"end": 10930,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10969,
											"end": 10971,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10995,
											"end": 11048,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "542"
										},
										{
											"begin": 11040,
											"end": 11047,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 11031,
											"end": 11037,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11020,
											"end": 11029,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 11016,
											"end": 11038,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10995,
											"end": 11048,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 10995,
											"end": 11048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10995,
											"end": 11048,
											"name": "tag",
											"source": 14,
											"value": "542"
										},
										{
											"begin": 10995,
											"end": 11048,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10985,
											"end": 11048,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10985,
											"end": 11048,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10940,
											"end": 11058,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10446,
											"end": 11065,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10446,
											"end": 11065,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10446,
											"end": 11065,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10446,
											"end": 11065,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10446,
											"end": 11065,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10446,
											"end": 11065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11071,
											"end": 11188,
											"name": "tag",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 11071,
											"end": 11188,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11180,
											"end": 11181,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11177,
											"end": 11178,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11170,
											"end": 11182,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 11194,
											"end": 11311,
											"name": "tag",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 11194,
											"end": 11311,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11303,
											"end": 11304,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11300,
											"end": 11301,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11293,
											"end": 11305,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 11334,
											"end": 11902,
											"name": "tag",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 11334,
											"end": 11902,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11407,
											"end": 11415,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11417,
											"end": 11423,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11467,
											"end": 11470,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11460,
											"end": 11464,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 11452,
											"end": 11458,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11448,
											"end": 11465,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11444,
											"end": 11471,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 11434,
											"end": 11556,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "546"
										},
										{
											"begin": 11434,
											"end": 11556,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11475,
											"end": 11554,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "547"
										},
										{
											"begin": 11475,
											"end": 11554,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 11475,
											"end": 11554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11475,
											"end": 11554,
											"name": "tag",
											"source": 14,
											"value": "547"
										},
										{
											"begin": 11475,
											"end": 11554,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11434,
											"end": 11556,
											"name": "tag",
											"source": 14,
											"value": "546"
										},
										{
											"begin": 11434,
											"end": 11556,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11588,
											"end": 11594,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11575,
											"end": 11595,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 11565,
											"end": 11595,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11565,
											"end": 11595,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11618,
											"end": 11636,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11610,
											"end": 11616,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11607,
											"end": 11637,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 11604,
											"end": 11721,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11604,
											"end": 11721,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "548"
										},
										{
											"begin": 11604,
											"end": 11721,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11640,
											"end": 11719,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "549"
										},
										{
											"begin": 11640,
											"end": 11719,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 11640,
											"end": 11719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11640,
											"end": 11719,
											"name": "tag",
											"source": 14,
											"value": "549"
										},
										{
											"begin": 11640,
											"end": 11719,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11604,
											"end": 11721,
											"name": "tag",
											"source": 14,
											"value": "548"
										},
										{
											"begin": 11604,
											"end": 11721,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11754,
											"end": 11758,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11746,
											"end": 11752,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11742,
											"end": 11759,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11730,
											"end": 11759,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11730,
											"end": 11759,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11808,
											"end": 11811,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11800,
											"end": 11804,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11792,
											"end": 11798,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11788,
											"end": 11805,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 11778,
											"end": 11786,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11774,
											"end": 11806,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11771,
											"end": 11812,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 11768,
											"end": 11896,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11768,
											"end": 11896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "550"
										},
										{
											"begin": 11768,
											"end": 11896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11815,
											"end": 11894,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "551"
										},
										{
											"begin": 11815,
											"end": 11894,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 11815,
											"end": 11894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11815,
											"end": 11894,
											"name": "tag",
											"source": 14,
											"value": "551"
										},
										{
											"begin": 11815,
											"end": 11894,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11768,
											"end": 11896,
											"name": "tag",
											"source": 14,
											"value": "550"
										},
										{
											"begin": 11768,
											"end": 11896,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11334,
											"end": 11902,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11334,
											"end": 11902,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11334,
											"end": 11902,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11334,
											"end": 11902,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11334,
											"end": 11902,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11334,
											"end": 11902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11925,
											"end": 12493,
											"name": "tag",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 11925,
											"end": 12493,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11998,
											"end": 12006,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12008,
											"end": 12014,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12058,
											"end": 12061,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12051,
											"end": 12055,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 12043,
											"end": 12049,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12035,
											"end": 12062,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 12025,
											"end": 12147,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "553"
										},
										{
											"begin": 12025,
											"end": 12147,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12066,
											"end": 12145,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "554"
										},
										{
											"begin": 12066,
											"end": 12145,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 12066,
											"end": 12145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12066,
											"end": 12145,
											"name": "tag",
											"source": 14,
											"value": "554"
										},
										{
											"begin": 12066,
											"end": 12145,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12025,
											"end": 12147,
											"name": "tag",
											"source": 14,
											"value": "553"
										},
										{
											"begin": 12025,
											"end": 12147,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12179,
											"end": 12185,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12166,
											"end": 12186,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 12156,
											"end": 12186,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12156,
											"end": 12186,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12209,
											"end": 12227,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12201,
											"end": 12207,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12198,
											"end": 12228,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 12195,
											"end": 12312,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12195,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "555"
										},
										{
											"begin": 12195,
											"end": 12312,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12231,
											"end": 12310,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "556"
										},
										{
											"begin": 12231,
											"end": 12310,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 12231,
											"end": 12310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12231,
											"end": 12310,
											"name": "tag",
											"source": 14,
											"value": "556"
										},
										{
											"begin": 12231,
											"end": 12310,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12195,
											"end": 12312,
											"name": "tag",
											"source": 14,
											"value": "555"
										},
										{
											"begin": 12195,
											"end": 12312,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12345,
											"end": 12349,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12337,
											"end": 12343,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12333,
											"end": 12350,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12321,
											"end": 12350,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12321,
											"end": 12350,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12399,
											"end": 12402,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12391,
											"end": 12395,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12383,
											"end": 12389,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 12369,
											"end": 12377,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12365,
											"end": 12397,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12362,
											"end": 12403,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 12359,
											"end": 12487,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12359,
											"end": 12487,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "557"
										},
										{
											"begin": 12359,
											"end": 12487,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12406,
											"end": 12485,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "558"
										},
										{
											"begin": 12406,
											"end": 12485,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 12406,
											"end": 12485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12406,
											"end": 12485,
											"name": "tag",
											"source": 14,
											"value": "558"
										},
										{
											"begin": 12406,
											"end": 12485,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12359,
											"end": 12487,
											"name": "tag",
											"source": 14,
											"value": "557"
										},
										{
											"begin": 12359,
											"end": 12487,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11925,
											"end": 12493,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11925,
											"end": 12493,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11925,
											"end": 12493,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11925,
											"end": 12493,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11925,
											"end": 12493,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11925,
											"end": 12493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12499,
											"end": 13578,
											"name": "tag",
											"source": 14,
											"value": "90"
										},
										{
											"begin": 12499,
											"end": 13578,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12630,
											"end": 12636,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12638,
											"end": 12644,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12646,
											"end": 12652,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12654,
											"end": 12660,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12662,
											"end": 12668,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12711,
											"end": 12713,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 12699,
											"end": 12708,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 12690,
											"end": 12697,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 12686,
											"end": 12709,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 12682,
											"end": 12714,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 12679,
											"end": 12798,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12679,
											"end": 12798,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "560"
										},
										{
											"begin": 12679,
											"end": 12798,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12717,
											"end": 12796,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "561"
										},
										{
											"begin": 12717,
											"end": 12796,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 12717,
											"end": 12796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12717,
											"end": 12796,
											"name": "tag",
											"source": 14,
											"value": "561"
										},
										{
											"begin": 12717,
											"end": 12796,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12679,
											"end": 12798,
											"name": "tag",
											"source": 14,
											"value": "560"
										},
										{
											"begin": 12679,
											"end": 12798,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12837,
											"end": 12838,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12862,
											"end": 12915,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "562"
										},
										{
											"begin": 12907,
											"end": 12914,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 12898,
											"end": 12904,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12887,
											"end": 12896,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 12883,
											"end": 12905,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12862,
											"end": 12915,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 12862,
											"end": 12915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12862,
											"end": 12915,
											"name": "tag",
											"source": 14,
											"value": "562"
										},
										{
											"begin": 12862,
											"end": 12915,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12852,
											"end": 12915,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 12852,
											"end": 12915,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12808,
											"end": 12925,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12992,
											"end": 12994,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12981,
											"end": 12990,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 12977,
											"end": 12995,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12964,
											"end": 12996,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 13023,
											"end": 13041,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13015,
											"end": 13021,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13012,
											"end": 13042,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 13009,
											"end": 13126,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13009,
											"end": 13126,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "563"
										},
										{
											"begin": 13009,
											"end": 13126,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13045,
											"end": 13124,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "564"
										},
										{
											"begin": 13045,
											"end": 13124,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 13045,
											"end": 13124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13045,
											"end": 13124,
											"name": "tag",
											"source": 14,
											"value": "564"
										},
										{
											"begin": 13045,
											"end": 13124,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13009,
											"end": 13126,
											"name": "tag",
											"source": 14,
											"value": "563"
										},
										{
											"begin": 13009,
											"end": 13126,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13158,
											"end": 13238,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "565"
										},
										{
											"begin": 13230,
											"end": 13237,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 13221,
											"end": 13227,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13210,
											"end": 13219,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 13206,
											"end": 13228,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13158,
											"end": 13238,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 13158,
											"end": 13238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13158,
											"end": 13238,
											"name": "tag",
											"source": 14,
											"value": "565"
										},
										{
											"begin": 13158,
											"end": 13238,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13140,
											"end": 13238,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 13140,
											"end": 13238,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13140,
											"end": 13238,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 13140,
											"end": 13238,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12935,
											"end": 13248,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13315,
											"end": 13317,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 13304,
											"end": 13313,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 13300,
											"end": 13318,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13287,
											"end": 13319,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 13346,
											"end": 13364,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13338,
											"end": 13344,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13335,
											"end": 13365,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 13332,
											"end": 13449,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13332,
											"end": 13449,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "566"
										},
										{
											"begin": 13332,
											"end": 13449,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13368,
											"end": 13447,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "567"
										},
										{
											"begin": 13368,
											"end": 13447,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 13368,
											"end": 13447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13368,
											"end": 13447,
											"name": "tag",
											"source": 14,
											"value": "567"
										},
										{
											"begin": 13368,
											"end": 13447,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13332,
											"end": 13449,
											"name": "tag",
											"source": 14,
											"value": "566"
										},
										{
											"begin": 13332,
											"end": 13449,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13481,
											"end": 13561,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "568"
										},
										{
											"begin": 13553,
											"end": 13560,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 13544,
											"end": 13550,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13533,
											"end": 13542,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 13529,
											"end": 13551,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13481,
											"end": 13561,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 13481,
											"end": 13561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13481,
											"end": 13561,
											"name": "tag",
											"source": 14,
											"value": "568"
										},
										{
											"begin": 13481,
											"end": 13561,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13463,
											"end": 13561,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13463,
											"end": 13561,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13463,
											"end": 13561,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13463,
											"end": 13561,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13258,
											"end": 13571,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12499,
											"end": 13578,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12499,
											"end": 13578,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 12499,
											"end": 13578,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12499,
											"end": 13578,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12499,
											"end": 13578,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 12499,
											"end": 13578,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12499,
											"end": 13578,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 12499,
											"end": 13578,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12499,
											"end": 13578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13584,
											"end": 13724,
											"name": "tag",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 13584,
											"end": 13724,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13633,
											"end": 13642,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13666,
											"end": 13718,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "570"
										},
										{
											"begin": 13684,
											"end": 13717,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "571"
										},
										{
											"begin": 13693,
											"end": 13716,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "572"
										},
										{
											"begin": 13710,
											"end": 13715,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13693,
											"end": 13716,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 13693,
											"end": 13716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13693,
											"end": 13716,
											"name": "tag",
											"source": 14,
											"value": "572"
										},
										{
											"begin": 13693,
											"end": 13716,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13684,
											"end": 13717,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 13684,
											"end": 13717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13684,
											"end": 13717,
											"name": "tag",
											"source": 14,
											"value": "571"
										},
										{
											"begin": 13684,
											"end": 13717,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13666,
											"end": 13718,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 13666,
											"end": 13718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13666,
											"end": 13718,
											"name": "tag",
											"source": 14,
											"value": "570"
										},
										{
											"begin": 13666,
											"end": 13718,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13653,
											"end": 13718,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13653,
											"end": 13718,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13584,
											"end": 13724,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13584,
											"end": 13724,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13584,
											"end": 13724,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13584,
											"end": 13724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13730,
											"end": 13859,
											"name": "tag",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 13730,
											"end": 13859,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13816,
											"end": 13852,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "574"
										},
										{
											"begin": 13846,
											"end": 13851,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13816,
											"end": 13852,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 13816,
											"end": 13852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13816,
											"end": 13852,
											"name": "tag",
											"source": 14,
											"value": "574"
										},
										{
											"begin": 13816,
											"end": 13852,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13811,
											"end": 13814,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13804,
											"end": 13853,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13730,
											"end": 13859,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13730,
											"end": 13859,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13730,
											"end": 13859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13865,
											"end": 14303,
											"name": "tag",
											"source": 14,
											"value": "107"
										},
										{
											"begin": 13865,
											"end": 14303,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14012,
											"end": 14016,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14050,
											"end": 14052,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 14039,
											"end": 14048,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14035,
											"end": 14053,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14027,
											"end": 14053,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14027,
											"end": 14053,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14063,
											"end": 14134,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "576"
										},
										{
											"begin": 14131,
											"end": 14132,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14120,
											"end": 14129,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14116,
											"end": 14133,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14107,
											"end": 14113,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 14063,
											"end": 14134,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 14063,
											"end": 14134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14063,
											"end": 14134,
											"name": "tag",
											"source": 14,
											"value": "576"
										},
										{
											"begin": 14063,
											"end": 14134,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14144,
											"end": 14215,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "577"
										},
										{
											"begin": 14211,
											"end": 14213,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14200,
											"end": 14209,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14196,
											"end": 14214,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14187,
											"end": 14193,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 14144,
											"end": 14215,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 14144,
											"end": 14215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14144,
											"end": 14215,
											"name": "tag",
											"source": 14,
											"value": "577"
										},
										{
											"begin": 14144,
											"end": 14215,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14225,
											"end": 14296,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "578"
										},
										{
											"begin": 14292,
											"end": 14294,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 14281,
											"end": 14290,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14277,
											"end": 14295,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14268,
											"end": 14274,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 14225,
											"end": 14296,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 14225,
											"end": 14296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14225,
											"end": 14296,
											"name": "tag",
											"source": 14,
											"value": "578"
										},
										{
											"begin": 14225,
											"end": 14296,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13865,
											"end": 14303,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 13865,
											"end": 14303,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 13865,
											"end": 14303,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13865,
											"end": 14303,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13865,
											"end": 14303,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13865,
											"end": 14303,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13865,
											"end": 14303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14309,
											"end": 14478,
											"name": "tag",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 14309,
											"end": 14478,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14449,
											"end": 14470,
											"name": "PUSH",
											"source": 14,
											"value": "4E6F20636C61696D61626C6520616D6F756E7400000000000000000000000000"
										},
										{
											"begin": 14445,
											"end": 14446,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14437,
											"end": 14443,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14433,
											"end": 14447,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14426,
											"end": 14471,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14309,
											"end": 14478,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14309,
											"end": 14478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14484,
											"end": 14850,
											"name": "tag",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 14484,
											"end": 14850,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14626,
											"end": 14629,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14647,
											"end": 14714,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "581"
										},
										{
											"begin": 14711,
											"end": 14713,
											"name": "PUSH",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 14706,
											"end": 14709,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14647,
											"end": 14714,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 14647,
											"end": 14714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14647,
											"end": 14714,
											"name": "tag",
											"source": 14,
											"value": "581"
										},
										{
											"begin": 14647,
											"end": 14714,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14640,
											"end": 14714,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14640,
											"end": 14714,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14723,
											"end": 14816,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "582"
										},
										{
											"begin": 14812,
											"end": 14815,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14723,
											"end": 14816,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 14723,
											"end": 14816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14723,
											"end": 14816,
											"name": "tag",
											"source": 14,
											"value": "582"
										},
										{
											"begin": 14723,
											"end": 14816,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14841,
											"end": 14843,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14836,
											"end": 14839,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14832,
											"end": 14844,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14825,
											"end": 14844,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14825,
											"end": 14844,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14484,
											"end": 14850,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14484,
											"end": 14850,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14484,
											"end": 14850,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14484,
											"end": 14850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14856,
											"end": 15275,
											"name": "tag",
											"source": 14,
											"value": "110"
										},
										{
											"begin": 14856,
											"end": 15275,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15022,
											"end": 15026,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15060,
											"end": 15062,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15049,
											"end": 15058,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15045,
											"end": 15063,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15037,
											"end": 15063,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15037,
											"end": 15063,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15109,
											"end": 15118,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15103,
											"end": 15107,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15099,
											"end": 15119,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 15095,
											"end": 15096,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15084,
											"end": 15093,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15080,
											"end": 15097,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15073,
											"end": 15120,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15137,
											"end": 15268,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "584"
										},
										{
											"begin": 15263,
											"end": 15267,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15137,
											"end": 15268,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 15137,
											"end": 15268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15137,
											"end": 15268,
											"name": "tag",
											"source": 14,
											"value": "584"
										},
										{
											"begin": 15137,
											"end": 15268,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15129,
											"end": 15268,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15129,
											"end": 15268,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14856,
											"end": 15275,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14856,
											"end": 15275,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14856,
											"end": 15275,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14856,
											"end": 15275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15281,
											"end": 15456,
											"name": "tag",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 15281,
											"end": 15456,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15421,
											"end": 15448,
											"name": "PUSH",
											"source": 14,
											"value": "496E73756666696369656E742066756E647320696E206A617200000000000000"
										},
										{
											"begin": 15417,
											"end": 15418,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15409,
											"end": 15415,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15405,
											"end": 15419,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15398,
											"end": 15449,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15281,
											"end": 15456,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15281,
											"end": 15456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15462,
											"end": 15828,
											"name": "tag",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 15462,
											"end": 15828,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15604,
											"end": 15607,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15625,
											"end": 15692,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "587"
										},
										{
											"begin": 15689,
											"end": 15691,
											"name": "PUSH",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 15684,
											"end": 15687,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15625,
											"end": 15692,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 15625,
											"end": 15692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15625,
											"end": 15692,
											"name": "tag",
											"source": 14,
											"value": "587"
										},
										{
											"begin": 15625,
											"end": 15692,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15618,
											"end": 15692,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15618,
											"end": 15692,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15701,
											"end": 15794,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "588"
										},
										{
											"begin": 15790,
											"end": 15793,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15701,
											"end": 15794,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 15701,
											"end": 15794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15701,
											"end": 15794,
											"name": "tag",
											"source": 14,
											"value": "588"
										},
										{
											"begin": 15701,
											"end": 15794,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15819,
											"end": 15821,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15814,
											"end": 15817,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15810,
											"end": 15822,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15803,
											"end": 15822,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15803,
											"end": 15822,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15462,
											"end": 15828,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15462,
											"end": 15828,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15462,
											"end": 15828,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15462,
											"end": 15828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15834,
											"end": 16253,
											"name": "tag",
											"source": 14,
											"value": "113"
										},
										{
											"begin": 15834,
											"end": 16253,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16000,
											"end": 16004,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16038,
											"end": 16040,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 16027,
											"end": 16036,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16023,
											"end": 16041,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16015,
											"end": 16041,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16015,
											"end": 16041,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16087,
											"end": 16096,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16081,
											"end": 16085,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16077,
											"end": 16097,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 16073,
											"end": 16074,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16062,
											"end": 16071,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16058,
											"end": 16075,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16051,
											"end": 16098,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16115,
											"end": 16246,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "590"
										},
										{
											"begin": 16241,
											"end": 16245,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16115,
											"end": 16246,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 16115,
											"end": 16246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16115,
											"end": 16246,
											"name": "tag",
											"source": 14,
											"value": "590"
										},
										{
											"begin": 16115,
											"end": 16246,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16107,
											"end": 16246,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16107,
											"end": 16246,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15834,
											"end": 16253,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15834,
											"end": 16253,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15834,
											"end": 16253,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15834,
											"end": 16253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16259,
											"end": 16453,
											"name": "tag",
											"source": 14,
											"value": "115"
										},
										{
											"begin": 16259,
											"end": 16453,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16299,
											"end": 16303,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16319,
											"end": 16339,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "592"
										},
										{
											"begin": 16337,
											"end": 16338,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16319,
											"end": 16339,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 16319,
											"end": 16339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16319,
											"end": 16339,
											"name": "tag",
											"source": 14,
											"value": "592"
										},
										{
											"begin": 16319,
											"end": 16339,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16314,
											"end": 16339,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16314,
											"end": 16339,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16353,
											"end": 16373,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "593"
										},
										{
											"begin": 16371,
											"end": 16372,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16353,
											"end": 16373,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 16353,
											"end": 16373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16353,
											"end": 16373,
											"name": "tag",
											"source": 14,
											"value": "593"
										},
										{
											"begin": 16353,
											"end": 16373,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16348,
											"end": 16373,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16348,
											"end": 16373,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16397,
											"end": 16398,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16394,
											"end": 16395,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16390,
											"end": 16399,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 16382,
											"end": 16399,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16382,
											"end": 16399,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16421,
											"end": 16422,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16415,
											"end": 16419,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16412,
											"end": 16423,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 16409,
											"end": 16446,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 16409,
											"end": 16446,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "594"
										},
										{
											"begin": 16409,
											"end": 16446,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 16426,
											"end": 16444,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "595"
										},
										{
											"begin": 16426,
											"end": 16444,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "324"
										},
										{
											"begin": 16426,
											"end": 16444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16426,
											"end": 16444,
											"name": "tag",
											"source": 14,
											"value": "595"
										},
										{
											"begin": 16426,
											"end": 16444,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16409,
											"end": 16446,
											"name": "tag",
											"source": 14,
											"value": "594"
										},
										{
											"begin": 16409,
											"end": 16446,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16259,
											"end": 16453,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16259,
											"end": 16453,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16259,
											"end": 16453,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16259,
											"end": 16453,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16259,
											"end": 16453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16459,
											"end": 16606,
											"name": "tag",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 16459,
											"end": 16606,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16560,
											"end": 16571,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16597,
											"end": 16600,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16582,
											"end": 16600,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16582,
											"end": 16600,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16459,
											"end": 16606,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16459,
											"end": 16606,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16459,
											"end": 16606,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16459,
											"end": 16606,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16459,
											"end": 16606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16612,
											"end": 16726,
											"name": "tag",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 16612,
											"end": 16726,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16612,
											"end": 16726,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16612,
											"end": 16726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16732,
											"end": 17130,
											"name": "tag",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 16732,
											"end": 17130,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16891,
											"end": 16894,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16912,
											"end": 16995,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "599"
										},
										{
											"begin": 16993,
											"end": 16994,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16988,
											"end": 16991,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16912,
											"end": 16995,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 16912,
											"end": 16995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16912,
											"end": 16995,
											"name": "tag",
											"source": 14,
											"value": "599"
										},
										{
											"begin": 16912,
											"end": 16995,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16905,
											"end": 16995,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16905,
											"end": 16995,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17004,
											"end": 17097,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "600"
										},
										{
											"begin": 17093,
											"end": 17096,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17004,
											"end": 17097,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 17004,
											"end": 17097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17004,
											"end": 17097,
											"name": "tag",
											"source": 14,
											"value": "600"
										},
										{
											"begin": 17004,
											"end": 17097,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17122,
											"end": 17123,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17117,
											"end": 17120,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17113,
											"end": 17124,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17106,
											"end": 17124,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17106,
											"end": 17124,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16732,
											"end": 17130,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16732,
											"end": 17130,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16732,
											"end": 17130,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16732,
											"end": 17130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17136,
											"end": 17515,
											"name": "tag",
											"source": 14,
											"value": "118"
										},
										{
											"begin": 17136,
											"end": 17515,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17320,
											"end": 17323,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17342,
											"end": 17489,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "602"
										},
										{
											"begin": 17485,
											"end": 17488,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17342,
											"end": 17489,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 17342,
											"end": 17489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17342,
											"end": 17489,
											"name": "tag",
											"source": 14,
											"value": "602"
										},
										{
											"begin": 17342,
											"end": 17489,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17335,
											"end": 17489,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17335,
											"end": 17489,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17506,
											"end": 17509,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17499,
											"end": 17509,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17499,
											"end": 17509,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17136,
											"end": 17515,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17136,
											"end": 17515,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17136,
											"end": 17515,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17136,
											"end": 17515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17521,
											"end": 17692,
											"name": "tag",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 17521,
											"end": 17692,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17661,
											"end": 17684,
											"name": "PUSH",
											"source": 14,
											"value": "4574686572207472616E73666572206661696C65640000000000000000000000"
										},
										{
											"begin": 17657,
											"end": 17658,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17649,
											"end": 17655,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17645,
											"end": 17659,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17638,
											"end": 17685,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17521,
											"end": 17692,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17521,
											"end": 17692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17698,
											"end": 18064,
											"name": "tag",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 17698,
											"end": 18064,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17840,
											"end": 17843,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17861,
											"end": 17928,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "605"
										},
										{
											"begin": 17925,
											"end": 17927,
											"name": "PUSH",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 17920,
											"end": 17923,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 17861,
											"end": 17928,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 17861,
											"end": 17928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17861,
											"end": 17928,
											"name": "tag",
											"source": 14,
											"value": "605"
										},
										{
											"begin": 17861,
											"end": 17928,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17854,
											"end": 17928,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17854,
											"end": 17928,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17937,
											"end": 18030,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "606"
										},
										{
											"begin": 18026,
											"end": 18029,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17937,
											"end": 18030,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 17937,
											"end": 18030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17937,
											"end": 18030,
											"name": "tag",
											"source": 14,
											"value": "606"
										},
										{
											"begin": 17937,
											"end": 18030,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18055,
											"end": 18057,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 18050,
											"end": 18053,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18046,
											"end": 18058,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18039,
											"end": 18058,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18039,
											"end": 18058,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17698,
											"end": 18064,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17698,
											"end": 18064,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17698,
											"end": 18064,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17698,
											"end": 18064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18070,
											"end": 18489,
											"name": "tag",
											"source": 14,
											"value": "124"
										},
										{
											"begin": 18070,
											"end": 18489,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18236,
											"end": 18240,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18274,
											"end": 18276,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 18263,
											"end": 18272,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18259,
											"end": 18277,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18251,
											"end": 18277,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18251,
											"end": 18277,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18323,
											"end": 18332,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18317,
											"end": 18321,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18313,
											"end": 18333,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 18309,
											"end": 18310,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18298,
											"end": 18307,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18294,
											"end": 18311,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18287,
											"end": 18334,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 18351,
											"end": 18482,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "608"
										},
										{
											"begin": 18477,
											"end": 18481,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18351,
											"end": 18482,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 18351,
											"end": 18482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18351,
											"end": 18482,
											"name": "tag",
											"source": 14,
											"value": "608"
										},
										{
											"begin": 18351,
											"end": 18482,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18343,
											"end": 18482,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18343,
											"end": 18482,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18070,
											"end": 18489,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18070,
											"end": 18489,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18070,
											"end": 18489,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18070,
											"end": 18489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18495,
											"end": 18667,
											"name": "tag",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 18495,
											"end": 18667,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18635,
											"end": 18659,
											"name": "PUSH",
											"source": 14,
											"value": "496E636F727265637420457468657220616D6F756E7400000000000000000000"
										},
										{
											"begin": 18631,
											"end": 18632,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18623,
											"end": 18629,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18619,
											"end": 18633,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18612,
											"end": 18660,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 18495,
											"end": 18667,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18495,
											"end": 18667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18673,
											"end": 19039,
											"name": "tag",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 18673,
											"end": 19039,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18815,
											"end": 18818,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18836,
											"end": 18903,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "611"
										},
										{
											"begin": 18900,
											"end": 18902,
											"name": "PUSH",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 18895,
											"end": 18898,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18836,
											"end": 18903,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 18836,
											"end": 18903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18836,
											"end": 18903,
											"name": "tag",
											"source": 14,
											"value": "611"
										},
										{
											"begin": 18836,
											"end": 18903,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18829,
											"end": 18903,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18829,
											"end": 18903,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18912,
											"end": 19005,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "612"
										},
										{
											"begin": 19001,
											"end": 19004,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18912,
											"end": 19005,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 18912,
											"end": 19005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18912,
											"end": 19005,
											"name": "tag",
											"source": 14,
											"value": "612"
										},
										{
											"begin": 18912,
											"end": 19005,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19030,
											"end": 19032,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 19025,
											"end": 19028,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19021,
											"end": 19033,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19014,
											"end": 19033,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19014,
											"end": 19033,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18673,
											"end": 19039,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18673,
											"end": 19039,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18673,
											"end": 19039,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18673,
											"end": 19039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19045,
											"end": 19464,
											"name": "tag",
											"source": 14,
											"value": "137"
										},
										{
											"begin": 19045,
											"end": 19464,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19211,
											"end": 19215,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19249,
											"end": 19251,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 19238,
											"end": 19247,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19234,
											"end": 19252,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19226,
											"end": 19252,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19226,
											"end": 19252,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19298,
											"end": 19307,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19292,
											"end": 19296,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19288,
											"end": 19308,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 19284,
											"end": 19285,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19273,
											"end": 19282,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19269,
											"end": 19286,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19262,
											"end": 19309,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 19326,
											"end": 19457,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "614"
										},
										{
											"begin": 19452,
											"end": 19456,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19326,
											"end": 19457,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 19326,
											"end": 19457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19326,
											"end": 19457,
											"name": "tag",
											"source": 14,
											"value": "614"
										},
										{
											"begin": 19326,
											"end": 19457,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19318,
											"end": 19457,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19318,
											"end": 19457,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19045,
											"end": 19464,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19045,
											"end": 19464,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19045,
											"end": 19464,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19045,
											"end": 19464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19470,
											"end": 19697,
											"name": "tag",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 19470,
											"end": 19697,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19610,
											"end": 19644,
											"name": "PUSH",
											"source": 14,
											"value": "4465706F73697420616D6F756E74206D75737420626520677265617465722074"
										},
										{
											"begin": 19606,
											"end": 19607,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19598,
											"end": 19604,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19594,
											"end": 19608,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19587,
											"end": 19645,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 19679,
											"end": 19689,
											"name": "PUSH",
											"source": 14,
											"value": "68616E207A65726F000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19674,
											"end": 19676,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 19666,
											"end": 19672,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19662,
											"end": 19677,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19655,
											"end": 19690,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 19470,
											"end": 19697,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19470,
											"end": 19697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19703,
											"end": 20069,
											"name": "tag",
											"source": 14,
											"value": "379"
										},
										{
											"begin": 19703,
											"end": 20069,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19845,
											"end": 19848,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19866,
											"end": 19933,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "617"
										},
										{
											"begin": 19930,
											"end": 19932,
											"name": "PUSH",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 19925,
											"end": 19928,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19866,
											"end": 19933,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 19866,
											"end": 19933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19866,
											"end": 19933,
											"name": "tag",
											"source": 14,
											"value": "617"
										},
										{
											"begin": 19866,
											"end": 19933,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19859,
											"end": 19933,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19859,
											"end": 19933,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19942,
											"end": 20035,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "618"
										},
										{
											"begin": 20031,
											"end": 20034,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19942,
											"end": 20035,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 19942,
											"end": 20035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19942,
											"end": 20035,
											"name": "tag",
											"source": 14,
											"value": "618"
										},
										{
											"begin": 19942,
											"end": 20035,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20060,
											"end": 20062,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 20055,
											"end": 20058,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20051,
											"end": 20063,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20044,
											"end": 20063,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20044,
											"end": 20063,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19703,
											"end": 20069,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19703,
											"end": 20069,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19703,
											"end": 20069,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19703,
											"end": 20069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20075,
											"end": 20494,
											"name": "tag",
											"source": 14,
											"value": "141"
										},
										{
											"begin": 20075,
											"end": 20494,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20241,
											"end": 20245,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20279,
											"end": 20281,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 20268,
											"end": 20277,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20264,
											"end": 20282,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20256,
											"end": 20282,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20256,
											"end": 20282,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20328,
											"end": 20337,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 20322,
											"end": 20326,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 20318,
											"end": 20338,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 20314,
											"end": 20315,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20303,
											"end": 20312,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 20299,
											"end": 20316,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20292,
											"end": 20339,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 20356,
											"end": 20487,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "620"
										},
										{
											"begin": 20482,
											"end": 20486,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 20356,
											"end": 20487,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "379"
										},
										{
											"begin": 20356,
											"end": 20487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20356,
											"end": 20487,
											"name": "tag",
											"source": 14,
											"value": "620"
										},
										{
											"begin": 20356,
											"end": 20487,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20348,
											"end": 20487,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20348,
											"end": 20487,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20075,
											"end": 20494,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20075,
											"end": 20494,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20075,
											"end": 20494,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20075,
											"end": 20494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20500,
											"end": 20585,
											"name": "tag",
											"source": 14,
											"value": "380"
										},
										{
											"begin": 20500,
											"end": 20585,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20545,
											"end": 20552,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20574,
											"end": 20579,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 20563,
											"end": 20579,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20563,
											"end": 20579,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20500,
											"end": 20585,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20500,
											"end": 20585,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20500,
											"end": 20585,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20500,
											"end": 20585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20591,
											"end": 20747,
											"name": "tag",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 20591,
											"end": 20747,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20648,
											"end": 20657,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20681,
											"end": 20741,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "623"
										},
										{
											"begin": 20698,
											"end": 20740,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "624"
										},
										{
											"begin": 20707,
											"end": 20739,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "625"
										},
										{
											"begin": 20733,
											"end": 20738,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 20707,
											"end": 20739,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "380"
										},
										{
											"begin": 20707,
											"end": 20739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20707,
											"end": 20739,
											"name": "tag",
											"source": 14,
											"value": "625"
										},
										{
											"begin": 20707,
											"end": 20739,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20698,
											"end": 20740,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 20698,
											"end": 20740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20698,
											"end": 20740,
											"name": "tag",
											"source": 14,
											"value": "624"
										},
										{
											"begin": 20698,
											"end": 20740,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20681,
											"end": 20741,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 20681,
											"end": 20741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20681,
											"end": 20741,
											"name": "tag",
											"source": 14,
											"value": "623"
										},
										{
											"begin": 20681,
											"end": 20741,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20668,
											"end": 20741,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20668,
											"end": 20741,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20591,
											"end": 20747,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20591,
											"end": 20747,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20591,
											"end": 20747,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20591,
											"end": 20747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20753,
											"end": 20898,
											"name": "tag",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 20753,
											"end": 20898,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20847,
											"end": 20891,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "627"
										},
										{
											"begin": 20885,
											"end": 20890,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 20847,
											"end": 20891,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 20847,
											"end": 20891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20847,
											"end": 20891,
											"name": "tag",
											"source": 14,
											"value": "627"
										},
										{
											"begin": 20847,
											"end": 20891,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20842,
											"end": 20845,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20835,
											"end": 20892,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 20753,
											"end": 20898,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20753,
											"end": 20898,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20753,
											"end": 20898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20904,
											"end": 21140,
											"name": "tag",
											"source": 14,
											"value": "162"
										},
										{
											"begin": 20904,
											"end": 21140,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21004,
											"end": 21008,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21042,
											"end": 21044,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 21031,
											"end": 21040,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21027,
											"end": 21045,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21019,
											"end": 21045,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21019,
											"end": 21045,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21055,
											"end": 21133,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "629"
										},
										{
											"begin": 21130,
											"end": 21131,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21119,
											"end": 21128,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 21115,
											"end": 21132,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21106,
											"end": 21112,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 21055,
											"end": 21133,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 21055,
											"end": 21133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21055,
											"end": 21133,
											"name": "tag",
											"source": 14,
											"value": "629"
										},
										{
											"begin": 21055,
											"end": 21133,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20904,
											"end": 21140,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 20904,
											"end": 21140,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20904,
											"end": 21140,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20904,
											"end": 21140,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20904,
											"end": 21140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21146,
											"end": 21326,
											"name": "tag",
											"source": 14,
											"value": "383"
										},
										{
											"begin": 21146,
											"end": 21326,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21194,
											"end": 21271,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21191,
											"end": 21192,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21184,
											"end": 21272,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 21291,
											"end": 21295,
											"name": "PUSH",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 21288,
											"end": 21289,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 21281,
											"end": 21296,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 21315,
											"end": 21319,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 21312,
											"end": 21313,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21305,
											"end": 21320,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 21332,
											"end": 21652,
											"name": "tag",
											"source": 14,
											"value": "170"
										},
										{
											"begin": 21332,
											"end": 21652,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21376,
											"end": 21382,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21413,
											"end": 21414,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 21407,
											"end": 21411,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21403,
											"end": 21415,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 21393,
											"end": 21415,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21393,
											"end": 21415,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21460,
											"end": 21461,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 21454,
											"end": 21458,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21450,
											"end": 21462,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 21481,
											"end": 21499,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 21471,
											"end": 21552,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "632"
										},
										{
											"begin": 21471,
											"end": 21552,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 21537,
											"end": 21541,
											"name": "PUSH",
											"source": 14,
											"value": "7F"
										},
										{
											"begin": 21529,
											"end": 21535,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21525,
											"end": 21542,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 21515,
											"end": 21542,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21515,
											"end": 21542,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21471,
											"end": 21552,
											"name": "tag",
											"source": 14,
											"value": "632"
										},
										{
											"begin": 21471,
											"end": 21552,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21599,
											"end": 21601,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 21591,
											"end": 21597,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21588,
											"end": 21602,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 21568,
											"end": 21586,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21565,
											"end": 21603,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 21562,
											"end": 21646,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "633"
										},
										{
											"begin": 21562,
											"end": 21646,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 21618,
											"end": 21636,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "634"
										},
										{
											"begin": 21618,
											"end": 21636,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "383"
										},
										{
											"begin": 21618,
											"end": 21636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21618,
											"end": 21636,
											"name": "tag",
											"source": 14,
											"value": "634"
										},
										{
											"begin": 21618,
											"end": 21636,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21562,
											"end": 21646,
											"name": "tag",
											"source": 14,
											"value": "633"
										},
										{
											"begin": 21562,
											"end": 21646,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21383,
											"end": 21652,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21332,
											"end": 21652,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21332,
											"end": 21652,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21332,
											"end": 21652,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21332,
											"end": 21652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21658,
											"end": 21748,
											"name": "tag",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 21658,
											"end": 21748,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21692,
											"end": 21699,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21735,
											"end": 21740,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21728,
											"end": 21741,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 21721,
											"end": 21742,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 21710,
											"end": 21742,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21710,
											"end": 21742,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21658,
											"end": 21748,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21658,
											"end": 21748,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21658,
											"end": 21748,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21658,
											"end": 21748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21754,
											"end": 21870,
											"name": "tag",
											"source": 14,
											"value": "385"
										},
										{
											"begin": 21754,
											"end": 21870,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21824,
											"end": 21845,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "637"
										},
										{
											"begin": 21839,
											"end": 21844,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21824,
											"end": 21845,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 21824,
											"end": 21845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21824,
											"end": 21845,
											"name": "tag",
											"source": 14,
											"value": "637"
										},
										{
											"begin": 21824,
											"end": 21845,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21817,
											"end": 21822,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21814,
											"end": 21846,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 21804,
											"end": 21864,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "638"
										},
										{
											"begin": 21804,
											"end": 21864,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 21860,
											"end": 21861,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21857,
											"end": 21858,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 21850,
											"end": 21862,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 21804,
											"end": 21864,
											"name": "tag",
											"source": 14,
											"value": "638"
										},
										{
											"begin": 21804,
											"end": 21864,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21754,
											"end": 21870,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21754,
											"end": 21870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21876,
											"end": 22013,
											"name": "tag",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 21876,
											"end": 22013,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21930,
											"end": 21935,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21961,
											"end": 21967,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21955,
											"end": 21968,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 21946,
											"end": 21968,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21946,
											"end": 21968,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "640"
										},
										{
											"begin": 22001,
											"end": 22006,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "385"
										},
										{
											"begin": 21977,
											"end": 22007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "tag",
											"source": 14,
											"value": "640"
										},
										{
											"begin": 21977,
											"end": 22007,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21876,
											"end": 22013,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 21876,
											"end": 22013,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21876,
											"end": 22013,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21876,
											"end": 22013,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21876,
											"end": 22013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22019,
											"end": 22364,
											"name": "tag",
											"source": 14,
											"value": "183"
										},
										{
											"begin": 22019,
											"end": 22364,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22086,
											"end": 22092,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22135,
											"end": 22137,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 22123,
											"end": 22132,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22114,
											"end": 22121,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 22110,
											"end": 22133,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 22106,
											"end": 22138,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 22103,
											"end": 22222,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 22103,
											"end": 22222,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "642"
										},
										{
											"begin": 22103,
											"end": 22222,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 22141,
											"end": 22220,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "643"
										},
										{
											"begin": 22141,
											"end": 22220,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 22141,
											"end": 22220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22141,
											"end": 22220,
											"name": "tag",
											"source": 14,
											"value": "643"
										},
										{
											"begin": 22141,
											"end": 22220,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22103,
											"end": 22222,
											"name": "tag",
											"source": 14,
											"value": "642"
										},
										{
											"begin": 22103,
											"end": 22222,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22261,
											"end": 22262,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22286,
											"end": 22347,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "644"
										},
										{
											"begin": 22339,
											"end": 22346,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 22330,
											"end": 22336,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22319,
											"end": 22328,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 22315,
											"end": 22337,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22286,
											"end": 22347,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 22286,
											"end": 22347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22286,
											"end": 22347,
											"name": "tag",
											"source": 14,
											"value": "644"
										},
										{
											"begin": 22286,
											"end": 22347,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22276,
											"end": 22347,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22276,
											"end": 22347,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22232,
											"end": 22357,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22019,
											"end": 22364,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 22019,
											"end": 22364,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22019,
											"end": 22364,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22019,
											"end": 22364,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22019,
											"end": 22364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22370,
											"end": 22542,
											"name": "tag",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 22370,
											"end": 22542,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22510,
											"end": 22534,
											"name": "PUSH",
											"source": 14,
											"value": "43616C6C6572206973206E6F7420616E2061646D696E00000000000000000000"
										},
										{
											"begin": 22506,
											"end": 22507,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22498,
											"end": 22504,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22494,
											"end": 22508,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22487,
											"end": 22535,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 22370,
											"end": 22542,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22370,
											"end": 22542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22548,
											"end": 22914,
											"name": "tag",
											"source": 14,
											"value": "388"
										},
										{
											"begin": 22548,
											"end": 22914,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22690,
											"end": 22693,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22711,
											"end": 22778,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "647"
										},
										{
											"begin": 22775,
											"end": 22777,
											"name": "PUSH",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 22770,
											"end": 22773,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 22711,
											"end": 22778,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 22711,
											"end": 22778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22711,
											"end": 22778,
											"name": "tag",
											"source": 14,
											"value": "647"
										},
										{
											"begin": 22711,
											"end": 22778,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22704,
											"end": 22778,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22704,
											"end": 22778,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22787,
											"end": 22880,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "648"
										},
										{
											"begin": 22876,
											"end": 22879,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22787,
											"end": 22880,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 22787,
											"end": 22880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22787,
											"end": 22880,
											"name": "tag",
											"source": 14,
											"value": "648"
										},
										{
											"begin": 22787,
											"end": 22880,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22905,
											"end": 22907,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 22900,
											"end": 22903,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22896,
											"end": 22908,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22889,
											"end": 22908,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22889,
											"end": 22908,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22548,
											"end": 22914,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22548,
											"end": 22914,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22548,
											"end": 22914,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22548,
											"end": 22914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22920,
											"end": 23339,
											"name": "tag",
											"source": 14,
											"value": "186"
										},
										{
											"begin": 22920,
											"end": 23339,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23086,
											"end": 23090,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23124,
											"end": 23126,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 23113,
											"end": 23122,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23109,
											"end": 23127,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23101,
											"end": 23127,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23101,
											"end": 23127,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23173,
											"end": 23182,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23167,
											"end": 23171,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23163,
											"end": 23183,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 23159,
											"end": 23160,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23148,
											"end": 23157,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 23144,
											"end": 23161,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23137,
											"end": 23184,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 23201,
											"end": 23332,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "650"
										},
										{
											"begin": 23327,
											"end": 23331,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23201,
											"end": 23332,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "388"
										},
										{
											"begin": 23201,
											"end": 23332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23201,
											"end": 23332,
											"name": "tag",
											"source": 14,
											"value": "650"
										},
										{
											"begin": 23201,
											"end": 23332,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23193,
											"end": 23332,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23193,
											"end": 23332,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22920,
											"end": 23339,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22920,
											"end": 23339,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22920,
											"end": 23339,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22920,
											"end": 23339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23345,
											"end": 23566,
											"name": "tag",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 23345,
											"end": 23566,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23485,
											"end": 23519,
											"name": "PUSH",
											"source": 14,
											"value": "53746172742074696D65206D757374206265206265666F726520656E64207469"
										},
										{
											"begin": 23481,
											"end": 23482,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23473,
											"end": 23479,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23469,
											"end": 23483,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23462,
											"end": 23520,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 23554,
											"end": 23558,
											"name": "PUSH",
											"source": 14,
											"value": "6D65000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23549,
											"end": 23551,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 23541,
											"end": 23547,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23537,
											"end": 23552,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23530,
											"end": 23559,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 23345,
											"end": 23566,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23345,
											"end": 23566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23572,
											"end": 23938,
											"name": "tag",
											"source": 14,
											"value": "390"
										},
										{
											"begin": 23572,
											"end": 23938,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23714,
											"end": 23717,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23735,
											"end": 23802,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "653"
										},
										{
											"begin": 23799,
											"end": 23801,
											"name": "PUSH",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 23794,
											"end": 23797,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 23735,
											"end": 23802,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 23735,
											"end": 23802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23735,
											"end": 23802,
											"name": "tag",
											"source": 14,
											"value": "653"
										},
										{
											"begin": 23735,
											"end": 23802,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23728,
											"end": 23802,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23728,
											"end": 23802,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23811,
											"end": 23904,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "654"
										},
										{
											"begin": 23900,
											"end": 23903,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23811,
											"end": 23904,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 23811,
											"end": 23904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23811,
											"end": 23904,
											"name": "tag",
											"source": 14,
											"value": "654"
										},
										{
											"begin": 23811,
											"end": 23904,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23929,
											"end": 23931,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 23924,
											"end": 23927,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23920,
											"end": 23932,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23913,
											"end": 23932,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23913,
											"end": 23932,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23572,
											"end": 23938,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23572,
											"end": 23938,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23572,
											"end": 23938,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23572,
											"end": 23938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23944,
											"end": 24363,
											"name": "tag",
											"source": 14,
											"value": "190"
										},
										{
											"begin": 23944,
											"end": 24363,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24110,
											"end": 24114,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24148,
											"end": 24150,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 24137,
											"end": 24146,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24133,
											"end": 24151,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24125,
											"end": 24151,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24125,
											"end": 24151,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24197,
											"end": 24206,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24191,
											"end": 24195,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24187,
											"end": 24207,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 24183,
											"end": 24184,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24172,
											"end": 24181,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 24168,
											"end": 24185,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24161,
											"end": 24208,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 24225,
											"end": 24356,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "656"
										},
										{
											"begin": 24351,
											"end": 24355,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24225,
											"end": 24356,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "390"
										},
										{
											"begin": 24225,
											"end": 24356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24225,
											"end": 24356,
											"name": "tag",
											"source": 14,
											"value": "656"
										},
										{
											"begin": 24225,
											"end": 24356,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24217,
											"end": 24356,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24217,
											"end": 24356,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23944,
											"end": 24363,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23944,
											"end": 24363,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23944,
											"end": 24363,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23944,
											"end": 24363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24369,
											"end": 24510,
											"name": "tag",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 24369,
											"end": 24510,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24418,
											"end": 24422,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24441,
											"end": 24444,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24433,
											"end": 24444,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24433,
											"end": 24444,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24464,
											"end": 24467,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24461,
											"end": 24462,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24454,
											"end": 24468,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 24498,
											"end": 24502,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 24495,
											"end": 24496,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24485,
											"end": 24503,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 24477,
											"end": 24503,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24477,
											"end": 24503,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24369,
											"end": 24510,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 24369,
											"end": 24510,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24369,
											"end": 24510,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24369,
											"end": 24510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24516,
											"end": 24609,
											"name": "tag",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 24516,
											"end": 24609,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24553,
											"end": 24559,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24600,
											"end": 24602,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 24595,
											"end": 24597,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 24588,
											"end": 24593,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 24584,
											"end": 24598,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24580,
											"end": 24603,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 24570,
											"end": 24603,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24570,
											"end": 24603,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24516,
											"end": 24609,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 24516,
											"end": 24609,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24516,
											"end": 24609,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24516,
											"end": 24609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24615,
											"end": 24722,
											"name": "tag",
											"source": 14,
											"value": "393"
										},
										{
											"begin": 24615,
											"end": 24722,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24659,
											"end": 24667,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24709,
											"end": 24714,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24703,
											"end": 24707,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24699,
											"end": 24715,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 24678,
											"end": 24715,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24678,
											"end": 24715,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24615,
											"end": 24722,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 24615,
											"end": 24722,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 24615,
											"end": 24722,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24615,
											"end": 24722,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24615,
											"end": 24722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24728,
											"end": 25121,
											"name": "tag",
											"source": 14,
											"value": "394"
										},
										{
											"begin": 24728,
											"end": 25121,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24797,
											"end": 24803,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24847,
											"end": 24848,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 24835,
											"end": 24845,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 24831,
											"end": 24849,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 24870,
											"end": 24967,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "661"
										},
										{
											"begin": 24900,
											"end": 24966,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24889,
											"end": 24898,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24870,
											"end": 24967,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "393"
										},
										{
											"begin": 24870,
											"end": 24967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24870,
											"end": 24967,
											"name": "tag",
											"source": 14,
											"value": "661"
										},
										{
											"begin": 24870,
											"end": 24967,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24988,
											"end": 25027,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "662"
										},
										{
											"begin": 25018,
											"end": 25026,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 25007,
											"end": 25016,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 24988,
											"end": 25027,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "393"
										},
										{
											"begin": 24988,
											"end": 25027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24988,
											"end": 25027,
											"name": "tag",
											"source": 14,
											"value": "662"
										},
										{
											"begin": 24988,
											"end": 25027,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24976,
											"end": 25027,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 24976,
											"end": 25027,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25060,
											"end": 25064,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 25056,
											"end": 25065,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 25049,
											"end": 25054,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 25045,
											"end": 25066,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 25036,
											"end": 25066,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 25036,
											"end": 25066,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25109,
											"end": 25113,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 25099,
											"end": 25107,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 25095,
											"end": 25114,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 25088,
											"end": 25093,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 25085,
											"end": 25115,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 25075,
											"end": 25115,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 25075,
											"end": 25115,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24804,
											"end": 25121,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24804,
											"end": 25121,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24728,
											"end": 25121,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 24728,
											"end": 25121,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 24728,
											"end": 25121,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24728,
											"end": 25121,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24728,
											"end": 25121,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24728,
											"end": 25121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25127,
											"end": 25269,
											"name": "tag",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 25127,
											"end": 25269,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25177,
											"end": 25186,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 25210,
											"end": 25263,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "664"
										},
										{
											"begin": 25228,
											"end": 25262,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "665"
										},
										{
											"begin": 25237,
											"end": 25261,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "666"
										},
										{
											"begin": 25255,
											"end": 25260,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 25237,
											"end": 25261,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 25237,
											"end": 25261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25237,
											"end": 25261,
											"name": "tag",
											"source": 14,
											"value": "666"
										},
										{
											"begin": 25237,
											"end": 25261,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25228,
											"end": 25262,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 25228,
											"end": 25262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25228,
											"end": 25262,
											"name": "tag",
											"source": 14,
											"value": "665"
										},
										{
											"begin": 25228,
											"end": 25262,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25210,
											"end": 25263,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 25210,
											"end": 25263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25210,
											"end": 25263,
											"name": "tag",
											"source": 14,
											"value": "664"
										},
										{
											"begin": 25210,
											"end": 25263,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25197,
											"end": 25263,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25197,
											"end": 25263,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25127,
											"end": 25269,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 25127,
											"end": 25269,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25127,
											"end": 25269,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25127,
											"end": 25269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25275,
											"end": 25350,
											"name": "tag",
											"source": 14,
											"value": "396"
										},
										{
											"begin": 25275,
											"end": 25350,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25318,
											"end": 25321,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 25339,
											"end": 25344,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 25332,
											"end": 25344,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25332,
											"end": 25344,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25275,
											"end": 25350,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 25275,
											"end": 25350,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25275,
											"end": 25350,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25275,
											"end": 25350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25356,
											"end": 25625,
											"name": "tag",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 25356,
											"end": 25625,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25466,
											"end": 25505,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "669"
										},
										{
											"begin": 25497,
											"end": 25504,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 25466,
											"end": 25505,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 25466,
											"end": 25505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25466,
											"end": 25505,
											"name": "tag",
											"source": 14,
											"value": "669"
										},
										{
											"begin": 25466,
											"end": 25505,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25527,
											"end": 25618,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "670"
										},
										{
											"begin": 25576,
											"end": 25617,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "671"
										},
										{
											"begin": 25600,
											"end": 25616,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 25576,
											"end": 25617,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "396"
										},
										{
											"begin": 25576,
											"end": 25617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25576,
											"end": 25617,
											"name": "tag",
											"source": 14,
											"value": "671"
										},
										{
											"begin": 25576,
											"end": 25617,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25568,
											"end": 25574,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 25561,
											"end": 25565,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 25555,
											"end": 25566,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 25527,
											"end": 25618,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "394"
										},
										{
											"begin": 25527,
											"end": 25618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25527,
											"end": 25618,
											"name": "tag",
											"source": 14,
											"value": "670"
										},
										{
											"begin": 25527,
											"end": 25618,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25521,
											"end": 25525,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 25514,
											"end": 25619,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 25432,
											"end": 25625,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25356,
											"end": 25625,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25356,
											"end": 25625,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25356,
											"end": 25625,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25356,
											"end": 25625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25631,
											"end": 25704,
											"name": "tag",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 25631,
											"end": 25704,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25676,
											"end": 25679,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 25631,
											"end": 25704,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25631,
											"end": 25704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25710,
											"end": 25899,
											"name": "tag",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 25710,
											"end": 25899,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25787,
											"end": 25819,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "674"
										},
										{
											"begin": 25787,
											"end": 25819,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 25787,
											"end": 25819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25787,
											"end": 25819,
											"name": "tag",
											"source": 14,
											"value": "674"
										},
										{
											"begin": 25787,
											"end": 25819,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25828,
											"end": 25893,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "675"
										},
										{
											"begin": 25886,
											"end": 25892,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 25878,
											"end": 25884,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 25872,
											"end": 25876,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 25828,
											"end": 25893,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 25828,
											"end": 25893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25828,
											"end": 25893,
											"name": "tag",
											"source": 14,
											"value": "675"
										},
										{
											"begin": 25828,
											"end": 25893,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25763,
											"end": 25899,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25710,
											"end": 25899,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25710,
											"end": 25899,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25710,
											"end": 25899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25905,
											"end": 26091,
											"name": "tag",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 25905,
											"end": 26091,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25965,
											"end": 26085,
											"name": "tag",
											"source": 14,
											"value": "677"
										},
										{
											"begin": 25965,
											"end": 26085,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25982,
											"end": 25985,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 25975,
											"end": 25980,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 25972,
											"end": 25986,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 25965,
											"end": 26085,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 25965,
											"end": 26085,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "679"
										},
										{
											"begin": 25965,
											"end": 26085,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 26036,
											"end": 26075,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "680"
										},
										{
											"begin": 26073,
											"end": 26074,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 26066,
											"end": 26071,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26036,
											"end": 26075,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 26036,
											"end": 26075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26036,
											"end": 26075,
											"name": "tag",
											"source": 14,
											"value": "680"
										},
										{
											"begin": 26036,
											"end": 26075,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26009,
											"end": 26010,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 26002,
											"end": 26007,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 25998,
											"end": 26011,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 25989,
											"end": 26011,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25989,
											"end": 26011,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25965,
											"end": 26085,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "677"
										},
										{
											"begin": 25965,
											"end": 26085,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25965,
											"end": 26085,
											"name": "tag",
											"source": 14,
											"value": "679"
										},
										{
											"begin": 25965,
											"end": 26085,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25905,
											"end": 26091,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25905,
											"end": 26091,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25905,
											"end": 26091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26097,
											"end": 26640,
											"name": "tag",
											"source": 14,
											"value": "401"
										},
										{
											"begin": 26097,
											"end": 26640,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26198,
											"end": 26200,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 26193,
											"end": 26196,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26190,
											"end": 26201,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 26187,
											"end": 26633,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 26187,
											"end": 26633,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "682"
										},
										{
											"begin": 26187,
											"end": 26633,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 26232,
											"end": 26270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "683"
										},
										{
											"begin": 26264,
											"end": 26269,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26232,
											"end": 26270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 26232,
											"end": 26270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26232,
											"end": 26270,
											"name": "tag",
											"source": 14,
											"value": "683"
										},
										{
											"begin": 26232,
											"end": 26270,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26316,
											"end": 26345,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "684"
										},
										{
											"begin": 26334,
											"end": 26344,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 26316,
											"end": 26345,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 26316,
											"end": 26345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26316,
											"end": 26345,
											"name": "tag",
											"source": 14,
											"value": "684"
										},
										{
											"begin": 26316,
											"end": 26345,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26306,
											"end": 26314,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26302,
											"end": 26346,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 26499,
											"end": 26501,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 26487,
											"end": 26497,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 26484,
											"end": 26502,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 26481,
											"end": 26530,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 26481,
											"end": 26530,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "685"
										},
										{
											"begin": 26481,
											"end": 26530,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 26520,
											"end": 26528,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26505,
											"end": 26528,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 26505,
											"end": 26528,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26481,
											"end": 26530,
											"name": "tag",
											"source": 14,
											"value": "685"
										},
										{
											"begin": 26481,
											"end": 26530,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26543,
											"end": 26623,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "686"
										},
										{
											"begin": 26599,
											"end": 26621,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "687"
										},
										{
											"begin": 26617,
											"end": 26620,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 26599,
											"end": 26621,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 26599,
											"end": 26621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26599,
											"end": 26621,
											"name": "tag",
											"source": 14,
											"value": "687"
										},
										{
											"begin": 26599,
											"end": 26621,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26589,
											"end": 26597,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 26585,
											"end": 26622,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 26572,
											"end": 26583,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26543,
											"end": 26623,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 26543,
											"end": 26623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26543,
											"end": 26623,
											"name": "tag",
											"source": 14,
											"value": "686"
										},
										{
											"begin": 26543,
											"end": 26623,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26202,
											"end": 26633,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26202,
											"end": 26633,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26187,
											"end": 26633,
											"name": "tag",
											"source": 14,
											"value": "682"
										},
										{
											"begin": 26187,
											"end": 26633,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26097,
											"end": 26640,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26097,
											"end": 26640,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26097,
											"end": 26640,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26097,
											"end": 26640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26646,
											"end": 26763,
											"name": "tag",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 26646,
											"end": 26763,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26700,
											"end": 26708,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 26750,
											"end": 26755,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26744,
											"end": 26748,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26740,
											"end": 26756,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 26719,
											"end": 26756,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 26719,
											"end": 26756,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26646,
											"end": 26763,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 26646,
											"end": 26763,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 26646,
											"end": 26763,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26646,
											"end": 26763,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26646,
											"end": 26763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26769,
											"end": 26938,
											"name": "tag",
											"source": 14,
											"value": "403"
										},
										{
											"begin": 26769,
											"end": 26938,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26813,
											"end": 26819,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 26846,
											"end": 26897,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "690"
										},
										{
											"begin": 26894,
											"end": 26895,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 26890,
											"end": 26896,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 26882,
											"end": 26887,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 26879,
											"end": 26880,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 26875,
											"end": 26888,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 26846,
											"end": 26897,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 26846,
											"end": 26897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26846,
											"end": 26897,
											"name": "tag",
											"source": 14,
											"value": "690"
										},
										{
											"begin": 26846,
											"end": 26897,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26842,
											"end": 26898,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 26927,
											"end": 26931,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 26921,
											"end": 26925,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 26917,
											"end": 26932,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 26907,
											"end": 26932,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 26907,
											"end": 26932,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26820,
											"end": 26938,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26769,
											"end": 26938,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 26769,
											"end": 26938,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 26769,
											"end": 26938,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26769,
											"end": 26938,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26769,
											"end": 26938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26943,
											"end": 27238,
											"name": "tag",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 26943,
											"end": 27238,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27019,
											"end": 27023,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 27165,
											"end": 27194,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "692"
										},
										{
											"begin": 27190,
											"end": 27193,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 27184,
											"end": 27188,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 27165,
											"end": 27194,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "403"
										},
										{
											"begin": 27165,
											"end": 27194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27165,
											"end": 27194,
											"name": "tag",
											"source": 14,
											"value": "692"
										},
										{
											"begin": 27165,
											"end": 27194,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27157,
											"end": 27194,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 27157,
											"end": 27194,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27227,
											"end": 27230,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27224,
											"end": 27225,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 27220,
											"end": 27231,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 27214,
											"end": 27218,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27211,
											"end": 27232,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 27203,
											"end": 27232,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 27203,
											"end": 27232,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26943,
											"end": 27238,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 26943,
											"end": 27238,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 26943,
											"end": 27238,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26943,
											"end": 27238,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26943,
											"end": 27238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27243,
											"end": 28638,
											"name": "tag",
											"source": 14,
											"value": "192"
										},
										{
											"begin": 27243,
											"end": 28638,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27360,
											"end": 27397,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "694"
										},
										{
											"begin": 27393,
											"end": 27396,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27360,
											"end": 27397,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 27360,
											"end": 27397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27360,
											"end": 27397,
											"name": "tag",
											"source": 14,
											"value": "694"
										},
										{
											"begin": 27360,
											"end": 27397,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27462,
											"end": 27480,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27454,
											"end": 27460,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 27451,
											"end": 27481,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 27448,
											"end": 27504,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 27448,
											"end": 27504,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "695"
										},
										{
											"begin": 27448,
											"end": 27504,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 27484,
											"end": 27502,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "696"
										},
										{
											"begin": 27484,
											"end": 27502,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 27484,
											"end": 27502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27484,
											"end": 27502,
											"name": "tag",
											"source": 14,
											"value": "696"
										},
										{
											"begin": 27484,
											"end": 27502,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27448,
											"end": 27504,
											"name": "tag",
											"source": 14,
											"value": "695"
										},
										{
											"begin": 27448,
											"end": 27504,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27528,
											"end": 27566,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "697"
										},
										{
											"begin": 27560,
											"end": 27564,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27554,
											"end": 27565,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 27528,
											"end": 27566,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "170"
										},
										{
											"begin": 27528,
											"end": 27566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27528,
											"end": 27566,
											"name": "tag",
											"source": 14,
											"value": "697"
										},
										{
											"begin": 27528,
											"end": 27566,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27613,
											"end": 27680,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "698"
										},
										{
											"begin": 27673,
											"end": 27679,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27665,
											"end": 27671,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27659,
											"end": 27663,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 27613,
											"end": 27680,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "401"
										},
										{
											"begin": 27613,
											"end": 27680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27613,
											"end": 27680,
											"name": "tag",
											"source": 14,
											"value": "698"
										},
										{
											"begin": 27613,
											"end": 27680,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27707,
											"end": 27708,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 27731,
											"end": 27735,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 27718,
											"end": 27735,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 27718,
											"end": 27735,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27763,
											"end": 27765,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 27755,
											"end": 27761,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 27752,
											"end": 27766,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 27780,
											"end": 27781,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 27775,
											"end": 28393,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 27775,
											"end": 28393,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 27775,
											"end": 28393,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "700"
										},
										{
											"begin": 27775,
											"end": 28393,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 28437,
											"end": 28438,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 28454,
											"end": 28460,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 28451,
											"end": 28528,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 28451,
											"end": 28528,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "701"
										},
										{
											"begin": 28451,
											"end": 28528,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 28503,
											"end": 28512,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 28498,
											"end": 28501,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 28494,
											"end": 28513,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28488,
											"end": 28514,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 28479,
											"end": 28514,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 28479,
											"end": 28514,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28451,
											"end": 28528,
											"name": "tag",
											"source": 14,
											"value": "701"
										},
										{
											"begin": 28451,
											"end": 28528,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28554,
											"end": 28621,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "702"
										},
										{
											"begin": 28614,
											"end": 28620,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 28607,
											"end": 28612,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 28554,
											"end": 28621,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 28554,
											"end": 28621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28554,
											"end": 28621,
											"name": "tag",
											"source": 14,
											"value": "702"
										},
										{
											"begin": 28554,
											"end": 28621,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28548,
											"end": 28552,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 28541,
											"end": 28622,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 28410,
											"end": 28632,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27745,
											"end": 28632,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "699"
										},
										{
											"begin": 27745,
											"end": 28632,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27775,
											"end": 28393,
											"name": "tag",
											"source": 14,
											"value": "700"
										},
										{
											"begin": 27775,
											"end": 28393,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27827,
											"end": 27831,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 27823,
											"end": 27832,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 27815,
											"end": 27821,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 27811,
											"end": 27833,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 27861,
											"end": 27898,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "703"
										},
										{
											"begin": 27893,
											"end": 27897,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 27861,
											"end": 27898,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 27861,
											"end": 27898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27861,
											"end": 27898,
											"name": "tag",
											"source": 14,
											"value": "703"
										},
										{
											"begin": 27861,
											"end": 27898,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27920,
											"end": 27921,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 27934,
											"end": 28142,
											"name": "tag",
											"source": 14,
											"value": "704"
										},
										{
											"begin": 27934,
											"end": 28142,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27948,
											"end": 27955,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27945,
											"end": 27946,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 27942,
											"end": 27956,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 27934,
											"end": 28142,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 27934,
											"end": 28142,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "706"
										},
										{
											"begin": 27934,
											"end": 28142,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 28027,
											"end": 28036,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 28022,
											"end": 28025,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 28018,
											"end": 28037,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28012,
											"end": 28038,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 28004,
											"end": 28010,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27997,
											"end": 28039,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 28078,
											"end": 28079,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 28070,
											"end": 28076,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 28066,
											"end": 28080,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28056,
											"end": 28080,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 28056,
											"end": 28080,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28125,
											"end": 28127,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 28114,
											"end": 28123,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 28110,
											"end": 28128,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28097,
											"end": 28128,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 28097,
											"end": 28128,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27971,
											"end": 27975,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 27968,
											"end": 27969,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 27964,
											"end": 27976,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 27959,
											"end": 27976,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 27959,
											"end": 27976,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27934,
											"end": 28142,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "704"
										},
										{
											"begin": 27934,
											"end": 28142,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27934,
											"end": 28142,
											"name": "tag",
											"source": 14,
											"value": "706"
										},
										{
											"begin": 27934,
											"end": 28142,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28170,
											"end": 28176,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 28161,
											"end": 28168,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 28158,
											"end": 28177,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 28155,
											"end": 28334,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 28155,
											"end": 28334,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "707"
										},
										{
											"begin": 28155,
											"end": 28334,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 28228,
											"end": 28237,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 28223,
											"end": 28226,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 28219,
											"end": 28238,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28213,
											"end": 28239,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 28271,
											"end": 28319,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "708"
										},
										{
											"begin": 28313,
											"end": 28317,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 28305,
											"end": 28311,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 28301,
											"end": 28318,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 28290,
											"end": 28299,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 28271,
											"end": 28319,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "403"
										},
										{
											"begin": 28271,
											"end": 28319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28271,
											"end": 28319,
											"name": "tag",
											"source": 14,
											"value": "708"
										},
										{
											"begin": 28271,
											"end": 28319,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28263,
											"end": 28269,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 28256,
											"end": 28320,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 28178,
											"end": 28334,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28155,
											"end": 28334,
											"name": "tag",
											"source": 14,
											"value": "707"
										},
										{
											"begin": 28155,
											"end": 28334,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28380,
											"end": 28381,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 28376,
											"end": 28377,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 28368,
											"end": 28374,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 28364,
											"end": 28378,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 28360,
											"end": 28382,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28354,
											"end": 28358,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 28347,
											"end": 28383,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 27782,
											"end": 28393,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27782,
											"end": 28393,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27782,
											"end": 28393,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27745,
											"end": 28632,
											"name": "tag",
											"source": 14,
											"value": "699"
										},
										{
											"begin": 27745,
											"end": 28632,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27745,
											"end": 28632,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27335,
											"end": 28638,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27335,
											"end": 28638,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27335,
											"end": 28638,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27243,
											"end": 28638,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27243,
											"end": 28638,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27243,
											"end": 28638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28644,
											"end": 29173,
											"name": "tag",
											"source": 14,
											"value": "194"
										},
										{
											"begin": 28644,
											"end": 29173,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28811,
											"end": 28815,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 28849,
											"end": 28851,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 28838,
											"end": 28847,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 28834,
											"end": 28852,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28826,
											"end": 28852,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 28826,
											"end": 28852,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28862,
											"end": 28932,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "710"
										},
										{
											"begin": 28929,
											"end": 28930,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 28918,
											"end": 28927,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 28914,
											"end": 28931,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28905,
											"end": 28911,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 28862,
											"end": 28932,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 28862,
											"end": 28932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28862,
											"end": 28932,
											"name": "tag",
											"source": 14,
											"value": "710"
										},
										{
											"begin": 28862,
											"end": 28932,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28942,
											"end": 29013,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "711"
										},
										{
											"begin": 29009,
											"end": 29011,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 28998,
											"end": 29007,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 28994,
											"end": 29012,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28985,
											"end": 28991,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 28942,
											"end": 29013,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 28942,
											"end": 29013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28942,
											"end": 29013,
											"name": "tag",
											"source": 14,
											"value": "711"
										},
										{
											"begin": 28942,
											"end": 29013,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29060,
											"end": 29069,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 29054,
											"end": 29058,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 29050,
											"end": 29070,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 29045,
											"end": 29047,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 29034,
											"end": 29043,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 29030,
											"end": 29048,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 29023,
											"end": 29071,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 29088,
											"end": 29166,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "712"
										},
										{
											"begin": 29161,
											"end": 29165,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 29152,
											"end": 29158,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 29088,
											"end": 29166,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 29088,
											"end": 29166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29088,
											"end": 29166,
											"name": "tag",
											"source": 14,
											"value": "712"
										},
										{
											"begin": 29088,
											"end": 29166,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29080,
											"end": 29166,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 29080,
											"end": 29166,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28644,
											"end": 29173,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 28644,
											"end": 29173,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 28644,
											"end": 29173,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28644,
											"end": 29173,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28644,
											"end": 29173,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28644,
											"end": 29173,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28644,
											"end": 29173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29179,
											"end": 29346,
											"name": "tag",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 29179,
											"end": 29346,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29319,
											"end": 29338,
											"name": "PUSH",
											"source": 14,
											"value": "5A65726F20616464726573732075736572000000000000000000000000000000"
										},
										{
											"begin": 29315,
											"end": 29316,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 29307,
											"end": 29313,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 29303,
											"end": 29317,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 29296,
											"end": 29339,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 29179,
											"end": 29346,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29179,
											"end": 29346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29352,
											"end": 29718,
											"name": "tag",
											"source": 14,
											"value": "406"
										},
										{
											"begin": 29352,
											"end": 29718,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29494,
											"end": 29497,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 29515,
											"end": 29582,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "715"
										},
										{
											"begin": 29579,
											"end": 29581,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 29574,
											"end": 29577,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 29515,
											"end": 29582,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 29515,
											"end": 29582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29515,
											"end": 29582,
											"name": "tag",
											"source": 14,
											"value": "715"
										},
										{
											"begin": 29515,
											"end": 29582,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29508,
											"end": 29582,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 29508,
											"end": 29582,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29591,
											"end": 29684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "716"
										},
										{
											"begin": 29680,
											"end": 29683,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 29591,
											"end": 29684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 29591,
											"end": 29684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29591,
											"end": 29684,
											"name": "tag",
											"source": 14,
											"value": "716"
										},
										{
											"begin": 29591,
											"end": 29684,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29709,
											"end": 29711,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 29704,
											"end": 29707,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 29700,
											"end": 29712,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 29693,
											"end": 29712,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 29693,
											"end": 29712,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29352,
											"end": 29718,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 29352,
											"end": 29718,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 29352,
											"end": 29718,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29352,
											"end": 29718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29724,
											"end": 30143,
											"name": "tag",
											"source": 14,
											"value": "205"
										},
										{
											"begin": 29724,
											"end": 30143,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29890,
											"end": 29894,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 29928,
											"end": 29930,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 29917,
											"end": 29926,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 29913,
											"end": 29931,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 29905,
											"end": 29931,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 29905,
											"end": 29931,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29977,
											"end": 29986,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 29971,
											"end": 29975,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 29967,
											"end": 29987,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 29963,
											"end": 29964,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 29952,
											"end": 29961,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 29948,
											"end": 29965,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 29941,
											"end": 29988,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 30005,
											"end": 30136,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "718"
										},
										{
											"begin": 30131,
											"end": 30135,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 30005,
											"end": 30136,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "406"
										},
										{
											"begin": 30005,
											"end": 30136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30005,
											"end": 30136,
											"name": "tag",
											"source": 14,
											"value": "718"
										},
										{
											"begin": 30005,
											"end": 30136,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29997,
											"end": 30136,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 29997,
											"end": 30136,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29724,
											"end": 30143,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 29724,
											"end": 30143,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 29724,
											"end": 30143,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29724,
											"end": 30143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30149,
											"end": 30323,
											"name": "tag",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 30149,
											"end": 30323,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30289,
											"end": 30315,
											"name": "PUSH",
											"source": 14,
											"value": "4D69736D617463686564206172726179206C656E677468730000000000000000"
										},
										{
											"begin": 30285,
											"end": 30286,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 30277,
											"end": 30283,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 30273,
											"end": 30287,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 30266,
											"end": 30316,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 30149,
											"end": 30323,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30149,
											"end": 30323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30329,
											"end": 30695,
											"name": "tag",
											"source": 14,
											"value": "408"
										},
										{
											"begin": 30329,
											"end": 30695,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30471,
											"end": 30474,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 30492,
											"end": 30559,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "721"
										},
										{
											"begin": 30556,
											"end": 30558,
											"name": "PUSH",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 30551,
											"end": 30554,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 30492,
											"end": 30559,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 30492,
											"end": 30559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30492,
											"end": 30559,
											"name": "tag",
											"source": 14,
											"value": "721"
										},
										{
											"begin": 30492,
											"end": 30559,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30485,
											"end": 30559,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 30485,
											"end": 30559,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30568,
											"end": 30661,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "722"
										},
										{
											"begin": 30657,
											"end": 30660,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 30568,
											"end": 30661,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 30568,
											"end": 30661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30568,
											"end": 30661,
											"name": "tag",
											"source": 14,
											"value": "722"
										},
										{
											"begin": 30568,
											"end": 30661,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30686,
											"end": 30688,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 30681,
											"end": 30684,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 30677,
											"end": 30689,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 30670,
											"end": 30689,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 30670,
											"end": 30689,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30329,
											"end": 30695,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 30329,
											"end": 30695,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 30329,
											"end": 30695,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30329,
											"end": 30695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30701,
											"end": 31120,
											"name": "tag",
											"source": 14,
											"value": "217"
										},
										{
											"begin": 30701,
											"end": 31120,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30867,
											"end": 30871,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 30905,
											"end": 30907,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 30894,
											"end": 30903,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 30890,
											"end": 30908,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 30882,
											"end": 30908,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 30882,
											"end": 30908,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30954,
											"end": 30963,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 30948,
											"end": 30952,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 30944,
											"end": 30964,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 30940,
											"end": 30941,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 30929,
											"end": 30938,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 30925,
											"end": 30942,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 30918,
											"end": 30965,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 30982,
											"end": 31113,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "724"
										},
										{
											"begin": 31108,
											"end": 31112,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 30982,
											"end": 31113,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "408"
										},
										{
											"begin": 30982,
											"end": 31113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30982,
											"end": 31113,
											"name": "tag",
											"source": 14,
											"value": "724"
										},
										{
											"begin": 30982,
											"end": 31113,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30974,
											"end": 31113,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 30974,
											"end": 31113,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30701,
											"end": 31120,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 30701,
											"end": 31120,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 30701,
											"end": 31120,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30701,
											"end": 31120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 31126,
											"end": 31306,
											"name": "tag",
											"source": 14,
											"value": "223"
										},
										{
											"begin": 31126,
											"end": 31306,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31174,
											"end": 31251,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31171,
											"end": 31172,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 31164,
											"end": 31252,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 31271,
											"end": 31275,
											"name": "PUSH",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 31268,
											"end": 31269,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 31261,
											"end": 31276,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 31295,
											"end": 31299,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 31292,
											"end": 31293,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 31285,
											"end": 31300,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 31312,
											"end": 31542,
											"name": "tag",
											"source": 14,
											"value": "409"
										},
										{
											"begin": 31312,
											"end": 31542,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31452,
											"end": 31486,
											"name": "PUSH",
											"source": 14,
											"value": "5769746864726177616C20616D6F756E74206D75737420626520677265617465"
										},
										{
											"begin": 31448,
											"end": 31449,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 31440,
											"end": 31446,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 31436,
											"end": 31450,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 31429,
											"end": 31487,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 31521,
											"end": 31534,
											"name": "PUSH",
											"source": 14,
											"value": "72207468616E207A65726F000000000000000000000000000000000000000000"
										},
										{
											"begin": 31516,
											"end": 31518,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 31508,
											"end": 31514,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 31504,
											"end": 31519,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 31497,
											"end": 31535,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 31312,
											"end": 31542,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31312,
											"end": 31542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 31548,
											"end": 31914,
											"name": "tag",
											"source": 14,
											"value": "410"
										},
										{
											"begin": 31548,
											"end": 31914,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31690,
											"end": 31693,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 31711,
											"end": 31778,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "728"
										},
										{
											"begin": 31775,
											"end": 31777,
											"name": "PUSH",
											"source": 14,
											"value": "2B"
										},
										{
											"begin": 31770,
											"end": 31773,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 31711,
											"end": 31778,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 31711,
											"end": 31778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 31711,
											"end": 31778,
											"name": "tag",
											"source": 14,
											"value": "728"
										},
										{
											"begin": 31711,
											"end": 31778,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31704,
											"end": 31778,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 31704,
											"end": 31778,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31787,
											"end": 31880,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "729"
										},
										{
											"begin": 31876,
											"end": 31879,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 31787,
											"end": 31880,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "409"
										},
										{
											"begin": 31787,
											"end": 31880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 31787,
											"end": 31880,
											"name": "tag",
											"source": 14,
											"value": "729"
										},
										{
											"begin": 31787,
											"end": 31880,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31905,
											"end": 31907,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 31900,
											"end": 31903,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 31896,
											"end": 31908,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 31889,
											"end": 31908,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 31889,
											"end": 31908,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31548,
											"end": 31914,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 31548,
											"end": 31914,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 31548,
											"end": 31914,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31548,
											"end": 31914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 31920,
											"end": 32339,
											"name": "tag",
											"source": 14,
											"value": "246"
										},
										{
											"begin": 31920,
											"end": 32339,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 32086,
											"end": 32090,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 32124,
											"end": 32126,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 32113,
											"end": 32122,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 32109,
											"end": 32127,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 32101,
											"end": 32127,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 32101,
											"end": 32127,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 32173,
											"end": 32182,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 32167,
											"end": 32171,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 32163,
											"end": 32183,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 32159,
											"end": 32160,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 32148,
											"end": 32157,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 32144,
											"end": 32161,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 32137,
											"end": 32184,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 32201,
											"end": 32332,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "731"
										},
										{
											"begin": 32327,
											"end": 32331,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 32201,
											"end": 32332,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "410"
										},
										{
											"begin": 32201,
											"end": 32332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 32201,
											"end": 32332,
											"name": "tag",
											"source": 14,
											"value": "731"
										},
										{
											"begin": 32201,
											"end": 32332,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 32193,
											"end": 32332,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 32193,
											"end": 32332,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31920,
											"end": 32339,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 31920,
											"end": 32339,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 31920,
											"end": 32339,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31920,
											"end": 32339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 32345,
											"end": 32513,
											"name": "tag",
											"source": 14,
											"value": "411"
										},
										{
											"begin": 32345,
											"end": 32513,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 32485,
											"end": 32505,
											"name": "PUSH",
											"source": 14,
											"value": "496E73756666696369656E742066756E64730000000000000000000000000000"
										},
										{
											"begin": 32481,
											"end": 32482,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 32473,
											"end": 32479,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 32469,
											"end": 32483,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 32462,
											"end": 32506,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 32345,
											"end": 32513,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 32345,
											"end": 32513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 32519,
											"end": 32885,
											"name": "tag",
											"source": 14,
											"value": "412"
										},
										{
											"begin": 32519,
											"end": 32885,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 32661,
											"end": 32664,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 32682,
											"end": 32749,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "734"
										},
										{
											"begin": 32746,
											"end": 32748,
											"name": "PUSH",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 32741,
											"end": 32744,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 32682,
											"end": 32749,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 32682,
											"end": 32749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 32682,
											"end": 32749,
											"name": "tag",
											"source": 14,
											"value": "734"
										},
										{
											"begin": 32682,
											"end": 32749,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 32675,
											"end": 32749,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 32675,
											"end": 32749,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 32758,
											"end": 32851,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "735"
										},
										{
											"begin": 32847,
											"end": 32850,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 32758,
											"end": 32851,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "411"
										},
										{
											"begin": 32758,
											"end": 32851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 32758,
											"end": 32851,
											"name": "tag",
											"source": 14,
											"value": "735"
										},
										{
											"begin": 32758,
											"end": 32851,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 32876,
											"end": 32878,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 32871,
											"end": 32874,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 32867,
											"end": 32879,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 32860,
											"end": 32879,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 32860,
											"end": 32879,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 32519,
											"end": 32885,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 32519,
											"end": 32885,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 32519,
											"end": 32885,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 32519,
											"end": 32885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 32891,
											"end": 33310,
											"name": "tag",
											"source": 14,
											"value": "249"
										},
										{
											"begin": 32891,
											"end": 33310,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 33057,
											"end": 33061,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 33095,
											"end": 33097,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 33084,
											"end": 33093,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 33080,
											"end": 33098,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 33072,
											"end": 33098,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 33072,
											"end": 33098,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 33144,
											"end": 33153,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 33138,
											"end": 33142,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 33134,
											"end": 33154,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 33130,
											"end": 33131,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 33119,
											"end": 33128,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 33115,
											"end": 33132,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 33108,
											"end": 33155,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 33172,
											"end": 33303,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "737"
										},
										{
											"begin": 33298,
											"end": 33302,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 33172,
											"end": 33303,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "412"
										},
										{
											"begin": 33172,
											"end": 33303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 33172,
											"end": 33303,
											"name": "tag",
											"source": 14,
											"value": "737"
										},
										{
											"begin": 33172,
											"end": 33303,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 33164,
											"end": 33303,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 33164,
											"end": 33303,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 32891,
											"end": 33310,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 32891,
											"end": 33310,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 32891,
											"end": 33310,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 32891,
											"end": 33310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 33316,
											"end": 33497,
											"name": "tag",
											"source": 14,
											"value": "413"
										},
										{
											"begin": 33316,
											"end": 33497,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 33456,
											"end": 33489,
											"name": "PUSH",
											"source": 14,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 33452,
											"end": 33453,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 33444,
											"end": 33450,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 33440,
											"end": 33454,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 33433,
											"end": 33490,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 33316,
											"end": 33497,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 33316,
											"end": 33497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 33503,
											"end": 33869,
											"name": "tag",
											"source": 14,
											"value": "414"
										},
										{
											"begin": 33503,
											"end": 33869,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 33645,
											"end": 33648,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 33666,
											"end": 33733,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "740"
										},
										{
											"begin": 33730,
											"end": 33732,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 33725,
											"end": 33728,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 33666,
											"end": 33733,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 33666,
											"end": 33733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 33666,
											"end": 33733,
											"name": "tag",
											"source": 14,
											"value": "740"
										},
										{
											"begin": 33666,
											"end": 33733,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 33659,
											"end": 33733,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 33659,
											"end": 33733,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 33742,
											"end": 33835,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "741"
										},
										{
											"begin": 33831,
											"end": 33834,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 33742,
											"end": 33835,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "413"
										},
										{
											"begin": 33742,
											"end": 33835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 33742,
											"end": 33835,
											"name": "tag",
											"source": 14,
											"value": "741"
										},
										{
											"begin": 33742,
											"end": 33835,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 33860,
											"end": 33862,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 33855,
											"end": 33858,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 33851,
											"end": 33863,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 33844,
											"end": 33863,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 33844,
											"end": 33863,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 33503,
											"end": 33869,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 33503,
											"end": 33869,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 33503,
											"end": 33869,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 33503,
											"end": 33869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 33875,
											"end": 34294,
											"name": "tag",
											"source": 14,
											"value": "268"
										},
										{
											"begin": 33875,
											"end": 34294,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 34041,
											"end": 34045,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 34079,
											"end": 34081,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 34068,
											"end": 34077,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 34064,
											"end": 34082,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 34056,
											"end": 34082,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 34056,
											"end": 34082,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 34128,
											"end": 34137,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 34122,
											"end": 34126,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 34118,
											"end": 34138,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 34114,
											"end": 34115,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 34103,
											"end": 34112,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 34099,
											"end": 34116,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 34092,
											"end": 34139,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 34156,
											"end": 34287,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "743"
										},
										{
											"begin": 34282,
											"end": 34286,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 34156,
											"end": 34287,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "414"
										},
										{
											"begin": 34156,
											"end": 34287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 34156,
											"end": 34287,
											"name": "tag",
											"source": 14,
											"value": "743"
										},
										{
											"begin": 34156,
											"end": 34287,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 34148,
											"end": 34287,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 34148,
											"end": 34287,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 33875,
											"end": 34294,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 33875,
											"end": 34294,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 33875,
											"end": 34294,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 33875,
											"end": 34294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 34300,
											"end": 34632,
											"name": "tag",
											"source": 14,
											"value": "272"
										},
										{
											"begin": 34300,
											"end": 34632,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 34421,
											"end": 34425,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 34459,
											"end": 34461,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 34448,
											"end": 34457,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 34444,
											"end": 34462,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 34436,
											"end": 34462,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 34436,
											"end": 34462,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 34472,
											"end": 34543,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "745"
										},
										{
											"begin": 34540,
											"end": 34541,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 34529,
											"end": 34538,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 34525,
											"end": 34542,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 34516,
											"end": 34522,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 34472,
											"end": 34543,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 34472,
											"end": 34543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 34472,
											"end": 34543,
											"name": "tag",
											"source": 14,
											"value": "745"
										},
										{
											"begin": 34472,
											"end": 34543,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 34553,
											"end": 34625,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "746"
										},
										{
											"begin": 34621,
											"end": 34623,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 34610,
											"end": 34619,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 34606,
											"end": 34624,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 34597,
											"end": 34603,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 34553,
											"end": 34625,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 34553,
											"end": 34625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 34553,
											"end": 34625,
											"name": "tag",
											"source": 14,
											"value": "746"
										},
										{
											"begin": 34553,
											"end": 34625,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 34300,
											"end": 34632,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 34300,
											"end": 34632,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 34300,
											"end": 34632,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 34300,
											"end": 34632,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 34300,
											"end": 34632,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 34300,
											"end": 34632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 34638,
											"end": 35080,
											"name": "tag",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 34638,
											"end": 35080,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 34787,
											"end": 34791,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 34825,
											"end": 34827,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 34814,
											"end": 34823,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 34810,
											"end": 34828,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 34802,
											"end": 34828,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 34802,
											"end": 34828,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 34838,
											"end": 34909,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "748"
										},
										{
											"begin": 34906,
											"end": 34907,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 34895,
											"end": 34904,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 34891,
											"end": 34908,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 34882,
											"end": 34888,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 34838,
											"end": 34909,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 34838,
											"end": 34909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 34838,
											"end": 34909,
											"name": "tag",
											"source": 14,
											"value": "748"
										},
										{
											"begin": 34838,
											"end": 34909,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 34919,
											"end": 34991,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "749"
										},
										{
											"begin": 34987,
											"end": 34989,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 34976,
											"end": 34985,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 34972,
											"end": 34990,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 34963,
											"end": 34969,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 34919,
											"end": 34991,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 34919,
											"end": 34991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 34919,
											"end": 34991,
											"name": "tag",
											"source": 14,
											"value": "749"
										},
										{
											"begin": 34919,
											"end": 34991,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 35001,
											"end": 35073,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "750"
										},
										{
											"begin": 35069,
											"end": 35071,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 35058,
											"end": 35067,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 35054,
											"end": 35072,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 35045,
											"end": 35051,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 35001,
											"end": 35073,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 35001,
											"end": 35073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 35001,
											"end": 35073,
											"name": "tag",
											"source": 14,
											"value": "750"
										},
										{
											"begin": 35001,
											"end": 35073,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 34638,
											"end": 35080,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 34638,
											"end": 35080,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 34638,
											"end": 35080,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 34638,
											"end": 35080,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 34638,
											"end": 35080,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 34638,
											"end": 35080,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 34638,
											"end": 35080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/interface/IScorer.sol",
								"contracts/sweetspot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"NATIVE_TOKEN()": "31f7d964",
							"allowedAmounts(address,address)": "a9590e8a",
							"bulkSetAllowedAmount(address,address[],uint256[])": "e3e7c1f9",
							"claim(address)": "1e83409a",
							"currentRound()": "8a19c8bc",
							"deposit(address,uint256)": "47e7ef24",
							"initialize(address,address)": "485cc955",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"scorer()": "85c758f7",
							"setAllowedAmount(address,address,uint256)": "b807a3c4",
							"setRound(uint64,uint64,string)": "a9012c89",
							"totalBalances(address)": "aee9c872",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(address,uint256)": "f3fef3a3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"currentTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"name\":\"NotWithinRound\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"AllowedAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"RoundUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"NATIVE_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"users\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"bulkSetAllowedAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentRound\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"start\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"end\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_scorer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scorer\",\"outputs\":[{\"internalType\":\"contract IScorer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setAllowedAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"start\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"end\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"setRound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"deposit(address,uint256)\":{\"params\":{\"amount\":\"The value to add (in wei for Ether).\",\"token\":\"The token address (address(0) for Ether).\"}},\"initialize(address,address)\":{\"params\":{\"_scorer\":\"The scoring contract address.\",\"owner\":\"The owner address.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setAllowedAmount(address,address,uint256)\":{\"params\":{\"amount\":\"The allowed amount for the user.\",\"token\":\"The token address.\",\"user\":\"The address of the user.\"}},\"setRound(uint64,uint64,string)\":{\"params\":{\"end\":\"The end timestamp of the round.\",\"metadataURI\":\"The IPFS URI for the round metadata.\",\"start\":\"The start timestamp of the round.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(address,uint256)\":{\"params\":{\"amount\":\"The amount to withdraw.\",\"token\":\"The token address (address(0) for Ether).\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"bulkSetAllowedAmount(address,address[],uint256[])\":{\"notice\":\"Sets the allowed amount for multiple users for a given token in one call.\"},\"claim(address)\":{\"notice\":\"Claims the full allowed amount for a user during the round.\"},\"deposit(address,uint256)\":{\"notice\":\"Deposits funds into this jar for a specific token or Ether.\"},\"initialize(address,address)\":{\"notice\":\"Initializes this contract with its initial state.\"},\"setAllowedAmount(address,address,uint256)\":{\"notice\":\"Sets the allowed amount for a specific user and token.\"},\"setRound(uint64,uint64,string)\":{\"notice\":\"Sets the round duration and metadata URI.\"},\"withdraw(address,uint256)\":{\"notice\":\"Withdraws funds from the jar for a specific token or Ether.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sweetspot.sol\":\"sweetspot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x2025ccf05f6f1f2fd4e078e552836f525a1864e3854ed555047cd732320ab29b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d27f4b23c2dee42394aebaf42bf238285230f472dfd3282a39c3f000ec28214f\",\"dweb:/ipfs/QmQa3DnvccwdWJeWrjgXPnFMTWbzWQWR39hVqC7eEwo2PC\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/interface/IScorer.sol\":{\"keccak256\":\"0x5bf83793e4290e7e68813647ee12b8abc4c538289be58958e32b7333b5b04e50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f2ae1e6cfcef833b0424c313a99b39e98c418ba4fc037c081644ef42e598776\",\"dweb:/ipfs/QmSyyx1J5C2o3KCaWxDf3Gd9szsZGdzJCbe4u4SvdNXPjV\"]},\"contracts/sweetspot.sol\":{\"keccak256\":\"0xc1f06e157c4b41c57a88ca0a24e18bed54aa00b3e66c6f32e2cb7583d85b9e32\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6171bb0be84030314e9c9800a981442a1323945aacdd94aa20aaf939ac767434\",\"dweb:/ipfs/QmQbhNwxkMXDCTnjsdPP584CBZbjWpqfVq943Q6VCRBWp2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 463,
								"contract": "contracts/sweetspot.sol:sweetspot",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 532,
								"contract": "contracts/sweetspot.sol:sweetspot",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 1498,
								"contract": "contracts/sweetspot.sol:sweetspot",
								"label": "scorer",
								"offset": 0,
								"slot": "50",
								"type": "t_contract(IScorer)1472"
							},
							{
								"astId": 1508,
								"contract": "contracts/sweetspot.sol:sweetspot",
								"label": "currentRound",
								"offset": 0,
								"slot": "51",
								"type": "t_struct(Round)1505_storage"
							},
							{
								"astId": 1512,
								"contract": "contracts/sweetspot.sol:sweetspot",
								"label": "totalBalances",
								"offset": 0,
								"slot": "53",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1518,
								"contract": "contracts/sweetspot.sol:sweetspot",
								"label": "allowedAmounts",
								"offset": 0,
								"slot": "54",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_contract(IScorer)1472": {
								"encoding": "inplace",
								"label": "contract IScorer",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Round)1505_storage": {
								"encoding": "inplace",
								"label": "struct sweetspot.Round",
								"members": [
									{
										"astId": 1500,
										"contract": "contracts/sweetspot.sol:sweetspot",
										"label": "start",
										"offset": 0,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 1502,
										"contract": "contracts/sweetspot.sol:sweetspot",
										"label": "end",
										"offset": 8,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 1504,
										"contract": "contracts/sweetspot.sol:sweetspot",
										"label": "metadataURI",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"bulkSetAllowedAmount(address,address[],uint256[])": {
								"notice": "Sets the allowed amount for multiple users for a given token in one call."
							},
							"claim(address)": {
								"notice": "Claims the full allowed amount for a user during the round."
							},
							"deposit(address,uint256)": {
								"notice": "Deposits funds into this jar for a specific token or Ether."
							},
							"initialize(address,address)": {
								"notice": "Initializes this contract with its initial state."
							},
							"setAllowedAmount(address,address,uint256)": {
								"notice": "Sets the allowed amount for a specific user and token."
							},
							"setRound(uint64,uint64,string)": {
								"notice": "Sets the round duration and metadata URI."
							},
							"withdraw(address,uint256)": {
								"notice": "Withdraws funds from the jar for a specific token or Ether."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							579
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						]
					},
					"id": 195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 580,
							"src": "128:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 579,
										"src": "136:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 449,
							"src": "196:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "204:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Initializable",
										"nameLocations": [
											"789:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "789:13:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 579,
										"src": "804:18:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194,
								579,
								448
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "931:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 12,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:0",
									"nodeType": "StructDefinition",
									"scope": 194,
									"src": "899:53:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "1069:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 15,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "1270:81:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1289:56:0",
													"nodeType": "YulBlock",
													"src": "1289:56:0",
													"statements": [
														{
															"nativeSrc": "1303:32:0",
															"nodeType": "YulAssignment",
															"src": "1303:32:0",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1313:22:0",
																"nodeType": "YulIdentifier",
																"src": "1313:22:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1303:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 17,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "1280:65:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1244:24:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 20,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 19,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "1244:14:0"
													},
													"referencedDeclaration": 14,
													"src": "1244:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:0"
									},
									"scope": 194,
									"src": "1192:159:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 30,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1480:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:0"
									},
									"src": "1447:50:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 35,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1616:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:0"
									},
									"src": "1590:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 41,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1664:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1695:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:0"
									},
									"src": "1637:84:0"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1919:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 50,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 49,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "1929:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 47,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 46,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1902:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1871:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:0"
									},
									"scope": 194,
									"src": "1847:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2062:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 61,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2076:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 62,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "IfStatement",
												"src": "2072:95:0",
												"trueBody": {
													"id": 74,
													"nodeType": "Block",
													"src": "2104:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 69,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 68,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 67,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "2125:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 73,
															"nodeType": "RevertStatement",
															"src": "2118:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 77,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "2195:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 76,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:0"
											}
										]
									},
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 59,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 58,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2045:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2014:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:0"
									},
									"scope": 194,
									"src": "1980:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "2324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 84,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:0"
											},
											{
												"id": 87,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 89,
									"name": "onlyOwner",
									"nameLocation": "2312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:0"
									},
									"src": "2303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2496:89:0",
										"statements": [
											{
												"assignments": [
													97
												],
												"declarations": [
													{
														"constant": false,
														"id": 97,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 104,
														"src": "2506:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 96,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 95,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "2506:14:0"
															},
															"referencedDeclaration": 14,
															"src": "2506:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 98,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2533:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:0"
											},
											{
												"expression": {
													"expression": {
														"id": 101,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "2570:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "2570:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 94,
												"id": 103,
												"nodeType": "Return",
												"src": "2563:15:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:0"
									},
									"scope": 194,
									"src": "2441:144:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "2703:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 109,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 111,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "2728:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2713:101:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2742:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 115,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 561,
																			"src": "2790:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 114,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2763:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2756:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:0"
									},
									"scope": 194,
									"src": "2658:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "3209:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 128,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3219:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 125,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3199:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:0"
									},
									"scope": 194,
									"src": "3155:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "3475:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 144,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "3489:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 145,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "3485:91:0",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "3513:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 151,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 150,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "3534:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 156,
															"nodeType": "RevertStatement",
															"src": "3527:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 160,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "3604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 159,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3585:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:0"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 141,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3465:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3432:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:0"
									},
									"scope": 194,
									"src": "3405:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "3837:185:0",
										"statements": [
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3847:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 171,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 170,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "3847:14:0"
															},
															"referencedDeclaration": 14,
															"src": "3847:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3874:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:0"
											},
											{
												"assignments": [
													177
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3904:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 176,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"expression": {
														"id": 178,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "3923:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "3923:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:0"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 181,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "3941:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:0",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "3941:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "3952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 188,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3996:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4006:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 187,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "3975:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "EmitStatement",
												"src": "3970:45:0"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3802:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:0"
									},
									"scope": 194,
									"src": "3774:248:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 195,
							"src": "749:3275:0",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219
							]
						}
					],
					"src": "102:3923:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							448
						]
					},
					"id": 449,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 448,
							"linearizedBaseContracts": [
								448
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 205,
									"members": [
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 200,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 204,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 203,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 448,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 208,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 448,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 206,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 211,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 214,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 219,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 216,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4092:1081:1",
										"statements": [
											{
												"assignments": [
													224
												],
												"declarations": [
													{
														"constant": false,
														"id": 224,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 223,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 222,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 205,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 225,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 230,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													235
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 234,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"expression": {
														"id": 236,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4706:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 239,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 241,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4726:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 244,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4746:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:1"
											},
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4770:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 249,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4790:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 254,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 252,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:1",
														"subExpression": {
															"id": 262,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "4856:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:1",
														"subExpression": {
															"id": 264,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "4873:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"nodeType": "IfStatement",
												"src": "4851:91:1",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "4887:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 267,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "4908:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 269,
															"nodeType": "RevertStatement",
															"src": "4901:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 272,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4951:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "4951:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:1"
											},
											{
												"condition": {
													"id": 278,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "4983:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 286,
												"nodeType": "IfStatement",
												"src": "4979:67:1",
												"trueBody": {
													"id": 285,
													"nodeType": "Block",
													"src": "4999:47:1",
													"statements": [
														{
															"expression": {
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 279,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5013:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5013:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 284,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:1"
														}
													]
												}
											},
											{
												"id": 287,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:1"
											},
											{
												"condition": {
													"id": 288,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "5070:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "5066:101:1",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "5086:81:1",
													"statements": [
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 289,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5100:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5100:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 295,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5142:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 298,
															"nodeType": "EmitStatement",
															"src": "5137:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 302,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1104:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "6291:392:1",
										"statements": [
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "6357:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 308,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 307,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "6357:20:1"
															},
															"referencedDeclaration": 205,
															"src": "6357:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "6390:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 313,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6431:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6431:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 315,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "6450:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 201,
															"src": "6450:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 317,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6468:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 324,
												"nodeType": "IfStatement",
												"src": "6427:105:1",
												"trueBody": {
													"id": 323,
													"nodeType": "Block",
													"src": "6477:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 320,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "6498:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 322,
															"nodeType": "RevertStatement",
															"src": "6491:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 325,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6541:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "6541:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "6558:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:1"
											},
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 331,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6575:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6575:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:1"
											},
											{
												"id": 337,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:1"
											},
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 338,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6618:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6618:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 345,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6668:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 344,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "6656:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "EmitStatement",
												"src": "6651:25:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 349,
									"name": "reinitializer",
									"nameLocation": "6261:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "6275:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 304,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:1"
									},
									"src": "6252:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "6921:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 352,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "6931:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:1"
											},
											{
												"id": 355,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:1"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 357,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:1"
									},
									"src": "6893:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "7136:89:1",
										"statements": [
											{
												"condition": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 361,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "7151:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7146:73:1",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7170:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 364,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "7191:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 366,
															"nodeType": "RevertStatement",
															"src": "7184:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:1"
									},
									"scope": 448,
									"src": "7084:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "7760:373:1",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "7826:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 375,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 374,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "7826:20:1"
															},
															"referencedDeclaration": 205,
															"src": "7826:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 377,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "7859:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 380,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "7900:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "7900:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 386,
												"nodeType": "IfStatement",
												"src": "7896:76:1",
												"trueBody": {
													"id": 385,
													"nodeType": "Block",
													"src": "7917:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 382,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "7938:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 384,
															"nodeType": "RevertStatement",
															"src": "7931:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 387,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "7985:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "7985:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 390,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 389,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "7981:146:1",
												"trueBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "8021:106:1",
													"statements": [
														{
															"expression": {
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 395,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "8035:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 201,
																	"src": "8035:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 399,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 398,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 404,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 407,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 406,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 405,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "8087:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 412,
															"nodeType": "EmitStatement",
															"src": "8082:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:1"
									},
									"scope": 448,
									"src": "7711:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "8308:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 422,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8325:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "8325:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 421,
												"id": 425,
												"nodeType": "Return",
												"src": "8318:46:1"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "8300:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 419,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:1"
									},
									"scope": 448,
									"src": "8243:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "8543:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 433,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8560:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "8560:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 432,
												"id": 436,
												"nodeType": "Return",
												"src": "8553:47:1"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "8537:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:1"
									},
									"scope": 448,
									"src": "8487:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "8827:80:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:1",
													"nodeType": "YulBlock",
													"src": "8846:55:1",
													"statements": [
														{
															"nativeSrc": "8860:31:1",
															"nodeType": "YulAssignment",
															"src": "8860:31:1",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:1",
																"nodeType": "YulIdentifier",
																"src": "8870:21:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 443,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 208,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:1",
														"valueSize": 1
													}
												],
												"id": 445,
												"nodeType": "InlineAssembly",
												"src": "8837:64:1"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:1"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "8795:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 442,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 441,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 205,
														"src": "8795:20:1"
													},
													"referencedDeclaration": 205,
													"src": "8795:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:1"
									},
									"scope": 448,
									"src": "8737:170:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 449,
							"src": "2349:6560:1",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "113:8797:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
					"exportedSymbols": {
						"Initializable": [
							448
						],
						"ReentrancyGuardUpgradeable": [
							533
						]
					},
					"id": 534,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 450,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 452,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 534,
							"sourceUnit": 449,
							"src": "136:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 451,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "144:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 454,
										"name": "Initializable",
										"nameLocations": [
											"1000:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "1000:13:2"
									},
									"id": 455,
									"nodeType": "InheritanceSpecifier",
									"src": "1000:13:2"
								}
							],
							"canonicalName": "ReentrancyGuardUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 453,
								"nodeType": "StructuredDocumentation",
								"src": "201:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 533,
							"linearizedBaseContracts": [
								533,
								448
							],
							"name": "ReentrancyGuardUpgradeable",
							"nameLocation": "970:26:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 458,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1793:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 533,
									"src": "1768:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 456,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1768:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 457,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1808:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 461,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1840:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 533,
									"src": "1815:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 459,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1815:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 460,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1851:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 463,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1875:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 533,
									"src": "1859:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 462,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1859:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "1949:51:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 468,
														"name": "__ReentrancyGuard_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "1959:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1959:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "1959:34:2"
											}
										]
									},
									"id": 472,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 466,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 465,
												"name": "onlyInitializing",
												"nameLocations": [
													"1932:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1932:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1932:16:2"
										}
									],
									"name": "__ReentrancyGuard_init",
									"nameLocation": "1898:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1920:2:2"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1949:0:2"
									},
									"scope": 533,
									"src": "1889:111:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "2076:39:2",
										"statements": [
											{
												"expression": {
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 477,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "2086:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 478,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "2096:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2086:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 480,
												"nodeType": "ExpressionStatement",
												"src": "2086:22:2"
											}
										]
									},
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 475,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 474,
												"name": "onlyInitializing",
												"nameLocations": [
													"2059:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2059:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2059:16:2"
										}
									],
									"name": "__ReentrancyGuard_init_unchained",
									"nameLocation": "2015:32:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2047:2:2"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2076:0:2"
									},
									"scope": 533,
									"src": "2006:109:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "2516:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 485,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "2526:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2526:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "2526:21:2"
											},
											{
												"id": 488,
												"nodeType": "PlaceholderStatement",
												"src": "2557:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 489,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 516,
														"src": "2568:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2568:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 491,
												"nodeType": "ExpressionStatement",
												"src": "2568:20:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "2121:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 493,
									"name": "nonReentrant",
									"nameLocation": "2501:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2513:2:2"
									},
									"src": "2492:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "2640:248:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 497,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 463,
																"src": "2733:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 498,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 461,
																"src": "2744:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2733:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2754:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 496,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2725:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2725:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 502,
												"nodeType": "ExpressionStatement",
												"src": "2725:63:2"
											},
											{
												"expression": {
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 503,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "2863:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 504,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "2873:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2863:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 506,
												"nodeType": "ExpressionStatement",
												"src": "2863:18:2"
											}
										]
									},
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2610:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2629:2:2"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:0:2"
									},
									"scope": 533,
									"src": "2601:287:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "2932:171:2",
										"statements": [
											{
												"expression": {
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 511,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "3074:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 512,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "3084:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3074:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "3074:22:2"
											}
										]
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2903:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2921:2:2"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2932:0:2"
									},
									"scope": 533,
									"src": "2894:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "3346:43:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 522,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "3363:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 523,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "3374:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3363:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 521,
												"id": 525,
												"nodeType": "Return",
												"src": "3356:26:2"
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "3109:168:2",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3291:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3314:2:2"
									},
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "3340:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 519,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3340:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:6:2"
									},
									"scope": 533,
									"src": "3282:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "3395:254:2",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 532,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3674:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 533,
									"src": "3654:25:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 529,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3654:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 531,
										"length": {
											"hexValue": "3439",
											"id": 530,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3662:2:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3654:11:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 534,
							"src": "952:2730:2",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "112:3571:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							579
						],
						"Initializable": [
							448
						]
					},
					"id": 580,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 535,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 537,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 580,
							"sourceUnit": 449,
							"src": "126:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 536,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "134:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 539,
										"name": "Initializable",
										"nameLocations": [
											"728:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "728:13:3"
									},
									"id": 540,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:3"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 538,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 579,
							"linearizedBaseContracts": [
								579,
								448
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 545,
										"nodeType": "Block",
										"src": "800:7:3",
										"statements": []
									},
									"id": 546,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 543,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 542,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "783:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:3"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:3"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:3"
									},
									"scope": 579,
									"src": "748:59:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 551,
										"nodeType": "Block",
										"src": "875:7:3",
										"statements": []
									},
									"id": 552,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 549,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 548,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "858:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:3"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:3"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:3"
									},
									"scope": 579,
									"src": "813:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 560,
										"nodeType": "Block",
										"src": "949:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 557,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 556,
												"id": 559,
												"nodeType": "Return",
												"src": "959:17:3"
											}
										]
									},
									"id": 561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:3"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "940:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:3"
									},
									"scope": 579,
									"src": "887:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "1056:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 566,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 565,
												"id": 568,
												"nodeType": "Return",
												"src": "1066:15:3"
											}
										]
									},
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:3"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "1040:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 563,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:3"
									},
									"scope": 579,
									"src": "989:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "1166:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 574,
												"id": 576,
												"nodeType": "Return",
												"src": "1176:8:3"
											}
										]
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:3"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "1157:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:3"
									},
									"scope": 579,
									"src": "1094:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 580,
							"src": "688:505:3",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "101:1093:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							661
						],
						"IERC165": [
							1451
						],
						"IERC20": [
							747
						]
					},
					"id": 662,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 581,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 583,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 662,
							"sourceUnit": 670,
							"src": "133:36:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 582,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 747,
										"src": "141:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 585,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 662,
							"sourceUnit": 666,
							"src": "170:38:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 584,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1451,
										"src": "178:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 587,
										"name": "IERC20",
										"nameLocations": [
											"590:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 747,
										"src": "590:6:4"
									},
									"id": 588,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:4"
								},
								{
									"baseName": {
										"id": 589,
										"name": "IERC165",
										"nameLocations": [
											"598:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1451,
										"src": "598:7:4"
									},
									"id": 590,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:4"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 586,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:4",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 661,
							"linearizedBaseContracts": [
								661,
								1451,
								747
							],
							"name": "IERC1363",
							"nameLocation": "578:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 600,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "1548:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "1560:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:4"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "1593:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 597,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:4"
									},
									"scope": 661,
									"src": "1523:76:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 601,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 612,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "2088:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "2100:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "2115:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 606,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:4"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "2154:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 609,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:4"
									},
									"scope": 661,
									"src": "2063:97:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 624,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "2653:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "2667:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "2679:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:4"
									},
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "2712:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 621,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:4"
									},
									"scope": 661,
									"src": "2624:94:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 625,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 638,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "3294:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "3308:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "3320:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "3335:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 632,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:4"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "3374:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 635,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:4"
									},
									"scope": 661,
									"src": "3265:115:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 639,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 648,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "3805:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "3822:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:4"
									},
									"returnParameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "3855:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 645,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:4"
									},
									"scope": 661,
									"src": "3781:80:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 660,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "4374:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "4391:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "4406:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 654,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:4"
									},
									"returnParameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "4445:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 657,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:4"
									},
									"scope": 661,
									"src": "4350:101:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 662,
							"src": "568:3885:4",
							"usedErrors": [],
							"usedEvents": [
								681,
								690
							]
						}
					],
					"src": "107:4347:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1451
						]
					},
					"id": 666,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 663,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 665,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 666,
							"sourceUnit": 1452,
							"src": "132:59:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 664,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1451,
										"src": "140:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							747
						]
					},
					"id": 670,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 667,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 669,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 670,
							"sourceUnit": 748,
							"src": "131:49:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 668,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 747,
										"src": "139:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							747
						]
					},
					"id": 748,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 671,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 672,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:7",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 747,
							"linearizedBaseContracts": [
								747
							],
							"name": "IERC20",
							"nameLocation": "214:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:7",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 681,
									"name": "Transfer",
									"nameLocation": "396:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "405:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "427:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "447:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:7"
									},
									"src": "390:72:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:7",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 690,
									"name": "Approval",
									"nameLocation": "627:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "636:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "659:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "684:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:7"
									},
									"src": "621:78:7"
								},
								{
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:7",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:7"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "821:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:7"
									},
									"scope": 747,
									"src": "775:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:7",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 704,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "931:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:7"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "971:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:7"
									},
									"scope": 747,
									"src": "912:68:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:7",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 714,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "1222:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "1234:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:7"
									},
									"returnParameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "1267:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 711,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:7"
									},
									"scope": 747,
									"src": "1204:69:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:7",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 724,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "1567:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "1582:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:7"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "1622:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:7"
									},
									"scope": 747,
									"src": "1548:83:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 725,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:7",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 734,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "2326:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "2343:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:7"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "2376:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 731,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:7"
									},
									"scope": 747,
									"src": "2309:73:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 735,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:7",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 746,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "2712:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "2726:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "2738:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:7"
									},
									"returnParameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "2771:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 743,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:7"
									},
									"scope": 747,
									"src": "2690:87:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 748,
							"src": "204:2575:7",
							"usedErrors": [],
							"usedEvents": [
								681,
								690
							]
						}
					],
					"src": "106:2674:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1417
						],
						"IERC1363": [
							661
						],
						"IERC20": [
							747
						],
						"SafeERC20": [
							1158
						]
					},
					"id": 1159,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 749,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 751,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1159,
							"sourceUnit": 748,
							"src": "141:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 750,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 747,
										"src": "149:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 753,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1159,
							"sourceUnit": 662,
							"src": "179:58:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 752,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 661,
										"src": "187:8:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 755,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1159,
							"sourceUnit": 1418,
							"src": "238:51:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 754,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1417,
										"src": "246:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 756,
								"nodeType": "StructuredDocumentation",
								"src": "291:458:8",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1158,
							"linearizedBaseContracts": [
								1158
							],
							"name": "SafeERC20",
							"nameLocation": "758:9:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 757,
										"nodeType": "StructuredDocumentation",
										"src": "774:65:8",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 761,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "850:24:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "883:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "875:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "874:15:8"
									},
									"src": "844:46:8"
								},
								{
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "896:71:8",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 770,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "978:32:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1019:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "1011:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1036:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "1028:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1062:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "1054:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:70:8"
									},
									"src": "972:109:8"
								},
								{
									"body": {
										"id": 793,
										"nodeType": "Block",
										"src": "1343:88:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 782,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "1373:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$747",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 785,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 774,
																		"src": "1395:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$747",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1401:8:8",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 714,
																	"src": "1395:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 787,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 776,
																			"src": "1412:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 788,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 778,
																			"src": "1416:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 789,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1411:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 783,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1380:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1384:10:8",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1380:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1380:43:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$747",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 781,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1116,
														"src": "1353:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1353:71:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 792,
												"nodeType": "ExpressionStatement",
												"src": "1353:71:8"
											}
										]
									},
									"documentation": {
										"id": 771,
										"nodeType": "StructuredDocumentation",
										"src": "1087:179:8",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1280:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1300:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "1293:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$747",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 773,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 772,
														"name": "IERC20",
														"nameLocations": [
															"1293:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 747,
														"src": "1293:6:8"
													},
													"referencedDeclaration": 747,
													"src": "1293:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$747",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1315:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "1307:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1307:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1327:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "1319:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1292:41:8"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1343:0:8"
									},
									"scope": 1158,
									"src": "1271:160:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 820,
										"nodeType": "Block",
										"src": "1760:98:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 808,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "1790:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$747",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 811,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 798,
																		"src": "1812:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$747",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1818:12:8",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 746,
																	"src": "1812:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 813,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 800,
																			"src": "1833:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 814,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 802,
																			"src": "1839:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 815,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 804,
																			"src": "1843:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 816,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1832:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 809,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1797:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1801:10:8",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1797:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1797:53:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$747",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 807,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1116,
														"src": "1770:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1770:81:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 819,
												"nodeType": "ExpressionStatement",
												"src": "1770:81:8"
											}
										]
									},
									"documentation": {
										"id": 795,
										"nodeType": "StructuredDocumentation",
										"src": "1437:228:8",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1679:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1703:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "1696:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$747",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 797,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 796,
														"name": "IERC20",
														"nameLocations": [
															"1696:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 747,
														"src": "1696:6:8"
													},
													"referencedDeclaration": 747,
													"src": "1696:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$747",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1718:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "1710:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1710:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1732:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "1724:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1724:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1744:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "1736:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1736:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1695:55:8"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1760:0:8"
									},
									"scope": 1158,
									"src": "1670:188:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 851,
										"nodeType": "Block",
										"src": "2600:139:8",
										"statements": [
											{
												"assignments": [
													833
												],
												"declarations": [
													{
														"constant": false,
														"id": 833,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2618:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 851,
														"src": "2610:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 832,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2610:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 842,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 838,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2657:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1158",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1158",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 837,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2649:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 836,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2649:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2649:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 840,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "2664:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 834,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "2633:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$747",
																"typeString": "contract IERC20"
															}
														},
														"id": 835,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2639:9:8",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 724,
														"src": "2633:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2633:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2610:62:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 844,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "2695:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$747",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 845,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "2702:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 846,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 833,
																"src": "2711:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 847,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 829,
																"src": "2726:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2711:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$747",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 843,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "2682:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2682:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "2682:50:8"
											}
										]
									},
									"documentation": {
										"id": 822,
										"nodeType": "StructuredDocumentation",
										"src": "1864:645:8",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2523:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2552:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "2545:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$747",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 824,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 823,
														"name": "IERC20",
														"nameLocations": [
															"2545:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 747,
														"src": "2545:6:8"
													},
													"referencedDeclaration": 747,
													"src": "2545:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$747",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2567:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "2559:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2559:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2584:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "2576:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2576:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2544:46:8"
									},
									"returnParameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2600:0:8"
									},
									"scope": 1158,
									"src": "2514:225:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "3505:370:8",
										"statements": [
											{
												"id": 893,
												"nodeType": "UncheckedBlock",
												"src": "3515:354:8",
												"statements": [
													{
														"assignments": [
															864
														],
														"declarations": [
															{
																"constant": false,
																"id": 864,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "3547:16:8",
																"nodeType": "VariableDeclaration",
																"scope": 893,
																"src": "3539:24:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 863,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3539:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 873,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 869,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3590:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1158",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1158",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3582:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 867,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3582:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3582:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 871,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 858,
																	"src": "3597:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 865,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 856,
																	"src": "3566:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$747",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3572:9:8",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 724,
																"src": "3566:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3566:39:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3539:66:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 874,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 864,
																"src": "3623:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 875,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 860,
																"src": "3642:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3623:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 884,
														"nodeType": "IfStatement",
														"src": "3619:160:8",
														"trueBody": {
															"id": 883,
															"nodeType": "Block",
															"src": "3661:118:8",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 878,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 858,
																				"src": "3719:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 879,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 864,
																				"src": "3728:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 880,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 860,
																				"src": "3746:17:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 877,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 770,
																			"src": "3686:32:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3686:78:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 882,
																	"nodeType": "RevertStatement",
																	"src": "3679:85:8"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 886,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 856,
																	"src": "3805:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$747",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 887,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 858,
																	"src": "3812:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 888,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 864,
																		"src": "3821:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 889,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 860,
																		"src": "3840:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3821:36:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$747",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 885,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 942,
																"src": "3792:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3792:66:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 892,
														"nodeType": "ExpressionStatement",
														"src": "3792:66:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 853,
										"nodeType": "StructuredDocumentation",
										"src": "2745:657:8",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3416:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3445:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "3438:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$747",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 855,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 854,
														"name": "IERC20",
														"nameLocations": [
															"3438:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 747,
														"src": "3438:6:8"
													},
													"referencedDeclaration": 747,
													"src": "3438:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$747",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3460:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "3452:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "3477:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "3469:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3469:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3437:58:8"
									},
									"returnParameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:8"
									},
									"scope": 1158,
									"src": "3407:468:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 941,
										"nodeType": "Block",
										"src": "4529:303:8",
										"statements": [
											{
												"assignments": [
													907
												],
												"declarations": [
													{
														"constant": false,
														"id": 907,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4552:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 941,
														"src": "4539:25:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 906,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4539:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 916,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 910,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 899,
																"src": "4582:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$747",
																	"typeString": "contract IERC20"
																}
															},
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4588:7:8",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 734,
															"src": "4582:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 912,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 901,
																	"src": "4598:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 913,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 903,
																	"src": "4607:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 914,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4597:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 908,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4567:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 909,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4571:10:8",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "4567:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4567:47:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4539:75:8"
											},
											{
												"condition": {
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4629:45:8",
													"subExpression": {
														"arguments": [
															{
																"id": 918,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 899,
																"src": "4654:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$747",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 919,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 907,
																"src": "4661:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$747",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 917,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1157,
															"src": "4630:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 920,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4630:44:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 940,
												"nodeType": "IfStatement",
												"src": "4625:201:8",
												"trueBody": {
													"id": 939,
													"nodeType": "Block",
													"src": "4676:150:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 923,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 899,
																		"src": "4710:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$747",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 926,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 899,
																					"src": "4732:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$747",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 927,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4738:7:8",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 734,
																				"src": "4732:13:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 928,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 901,
																						"src": "4748:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 929,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4757:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 930,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4747:12:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 924,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4717:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 925,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4721:10:8",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "4717:14:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 931,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4717:43:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$747",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 922,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1116,
																	"src": "4690:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4690:71:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 933,
															"nodeType": "ExpressionStatement",
															"src": "4690:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 935,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 899,
																		"src": "4795:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$747",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 936,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 907,
																		"src": "4802:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$747",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 934,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1116,
																	"src": "4775:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4775:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 938,
															"nodeType": "ExpressionStatement",
															"src": "4775:40:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 896,
										"nodeType": "StructuredDocumentation",
										"src": "3881:566:8",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "4461:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4481:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "4474:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$747",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 898,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 897,
														"name": "IERC20",
														"nameLocations": [
															"4474:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 747,
														"src": "4474:6:8"
													},
													"referencedDeclaration": 747,
													"src": "4474:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$747",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4496:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "4488:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 900,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4488:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4513:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "4505:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4505:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4473:46:8"
									},
									"returnParameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4529:0:8"
									},
									"scope": 1158,
									"src": "4452:380:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 984,
										"nodeType": "Block",
										"src": "5279:219:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 955,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 948,
																"src": "5293:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5296:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5293:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 957,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5301:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5293:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 958,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5311:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5293:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 973,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5379:39:8",
														"subExpression": {
															"arguments": [
																{
																	"id": 969,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 948,
																	"src": "5402:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 970,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 950,
																	"src": "5406:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 971,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 952,
																	"src": "5413:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 967,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 946,
																	"src": "5380:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$661",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 968,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5386:15:8",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 612,
																"src": "5380:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5380:38:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 982,
													"nodeType": "IfStatement",
													"src": "5375:117:8",
													"trueBody": {
														"id": 981,
														"nodeType": "Block",
														"src": "5420:72:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 977,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 946,
																					"src": "5474:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$661",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$661",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 976,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5466:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 975,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5466:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 978,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5466:14:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 974,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 761,
																		"src": "5441:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5441:40:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 980,
																"nodeType": "RevertStatement",
																"src": "5434:47:8"
															}
														]
													}
												},
												"id": 983,
												"nodeType": "IfStatement",
												"src": "5289:203:8",
												"trueBody": {
													"id": 966,
													"nodeType": "Block",
													"src": "5314:55:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 961,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 946,
																		"src": "5341:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$661",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 962,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 948,
																		"src": "5348:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 963,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 950,
																		"src": "5352:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$661",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 960,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 794,
																	"src": "5328:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5328:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 965,
															"nodeType": "ExpressionStatement",
															"src": "5328:30:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "4838:333:8",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 985,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5185:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5217:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "5208:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$661",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 945,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 944,
														"name": "IERC1363",
														"nameLocations": [
															"5208:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 661,
														"src": "5208:8:8"
													},
													"referencedDeclaration": 661,
													"src": "5208:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$661",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5232:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "5224:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5224:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5244:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "5236:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5236:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5264:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "5251:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 951,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5251:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5207:62:8"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5279:0:8"
									},
									"scope": 1158,
									"src": "5176:322:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1031,
										"nodeType": "Block",
										"src": "6017:239:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1000,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 993,
																"src": "6031:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6034:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6031:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1002,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6039:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6031:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1003,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6049:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6031:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1020,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6127:49:8",
														"subExpression": {
															"arguments": [
																{
																	"id": 1015,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 991,
																	"src": "6154:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1016,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 993,
																	"src": "6160:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1017,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 995,
																	"src": "6164:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1018,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 997,
																	"src": "6171:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1013,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 989,
																	"src": "6128:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$661",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6134:19:8",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 638,
																"src": "6128:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6128:48:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1029,
													"nodeType": "IfStatement",
													"src": "6123:127:8",
													"trueBody": {
														"id": 1028,
														"nodeType": "Block",
														"src": "6178:72:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1024,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 989,
																					"src": "6232:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$661",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$661",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1023,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6224:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1022,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6224:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1025,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6224:14:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1021,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 761,
																		"src": "6199:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1026,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6199:40:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1027,
																"nodeType": "RevertStatement",
																"src": "6192:47:8"
															}
														]
													}
												},
												"id": 1030,
												"nodeType": "IfStatement",
												"src": "6027:223:8",
												"trueBody": {
													"id": 1012,
													"nodeType": "Block",
													"src": "6052:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1006,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 989,
																		"src": "6083:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$661",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1007,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 991,
																		"src": "6090:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1008,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 993,
																		"src": "6096:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1009,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 995,
																		"src": "6100:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$661",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1005,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 821,
																	"src": "6066:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6066:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1011,
															"nodeType": "ExpressionStatement",
															"src": "6066:40:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 986,
										"nodeType": "StructuredDocumentation",
										"src": "5504:341:8",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 1032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "5859:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5904:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "5895:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$661",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 988,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 987,
														"name": "IERC1363",
														"nameLocations": [
															"5895:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 661,
														"src": "5895:8:8"
													},
													"referencedDeclaration": 661,
													"src": "5895:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$661",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5927:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "5919:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5919:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5949:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "5941:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5941:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5969:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "5961:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5961:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5997:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "5984:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 996,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5984:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5885:122:8"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6017:0:8"
									},
									"scope": 1158,
									"src": "5850:406:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1074,
										"nodeType": "Block",
										"src": "7023:218:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1045,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1038,
																"src": "7037:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7040:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7037:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1047,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7045:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7037:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1048,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7055:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7037:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1063,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7123:38:8",
														"subExpression": {
															"arguments": [
																{
																	"id": 1059,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1038,
																	"src": "7145:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1060,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1040,
																	"src": "7149:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1061,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1042,
																	"src": "7156:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1057,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1036,
																	"src": "7124:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$661",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1058,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7130:14:8",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 660,
																"src": "7124:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7124:37:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1072,
													"nodeType": "IfStatement",
													"src": "7119:116:8",
													"trueBody": {
														"id": 1071,
														"nodeType": "Block",
														"src": "7163:72:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1067,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1036,
																					"src": "7217:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$661",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$661",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1066,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7209:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1065,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7209:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1068,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7209:14:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1064,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 761,
																		"src": "7184:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7184:40:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1070,
																"nodeType": "RevertStatement",
																"src": "7177:47:8"
															}
														]
													}
												},
												"id": 1073,
												"nodeType": "IfStatement",
												"src": "7033:202:8",
												"trueBody": {
													"id": 1056,
													"nodeType": "Block",
													"src": "7058:55:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1051,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1036,
																		"src": "7085:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$661",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1052,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1038,
																		"src": "7092:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1053,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1040,
																		"src": "7096:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$661",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1050,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 942,
																	"src": "7072:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1054,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7072:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1055,
															"nodeType": "ExpressionStatement",
															"src": "7072:30:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1033,
										"nodeType": "StructuredDocumentation",
										"src": "6262:654:8",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 1075,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "6930:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6961:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "6952:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$661",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 1035,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1034,
														"name": "IERC1363",
														"nameLocations": [
															"6952:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 661,
														"src": "6952:8:8"
													},
													"referencedDeclaration": 661,
													"src": "6952:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$661",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6976:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "6968:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6968:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6988:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "6980:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6980:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7008:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "6995:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1041,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6995:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6951:62:8"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7023:0:8"
									},
									"scope": 1158,
									"src": "6921:320:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1115,
										"nodeType": "Block",
										"src": "7808:650:8",
										"statements": [
											{
												"assignments": [
													1085
												],
												"declarations": [
													{
														"constant": false,
														"id": 1085,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "7826:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1115,
														"src": "7818:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1084,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7818:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1086,
												"nodeType": "VariableDeclarationStatement",
												"src": "7818:18:8"
											},
											{
												"assignments": [
													1088
												],
												"declarations": [
													{
														"constant": false,
														"id": 1088,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "7854:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1115,
														"src": "7846:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1087,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7846:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1089,
												"nodeType": "VariableDeclarationStatement",
												"src": "7846:19:8"
											},
											{
												"AST": {
													"nativeSrc": "7900:396:8",
													"nodeType": "YulBlock",
													"src": "7900:396:8",
													"statements": [
														{
															"nativeSrc": "7914:75:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7914:75:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "7934:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7934:3:8"
																		},
																		"nativeSrc": "7934:5:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7934:5:8"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "7941:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7941:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7948:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7948:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7955:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7955:4:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7961:4:8",
																				"nodeType": "YulLiteral",
																				"src": "7961:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7951:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7951:3:8"
																		},
																		"nativeSrc": "7951:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7951:15:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7974:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7974:4:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7968:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "7968:5:8"
																		},
																		"nativeSrc": "7968:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7968:11:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7981:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7981:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7984:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7984:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "7929:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7929:4:8"
																},
																"nativeSrc": "7929:60:8",
																"nodeType": "YulFunctionCall",
																"src": "7929:60:8"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "7918:7:8",
																	"nodeType": "YulTypedName",
																	"src": "7918:7:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8050:157:8",
																"nodeType": "YulBlock",
																"src": "8050:157:8",
																"statements": [
																	{
																		"nativeSrc": "8068:22:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8068:22:8",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8085:4:8",
																					"nodeType": "YulLiteral",
																					"src": "8085:4:8",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8079:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "8079:5:8"
																			},
																			"nativeSrc": "8079:11:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8079:11:8"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8072:3:8",
																				"nodeType": "YulTypedName",
																				"src": "8072:3:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8122:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8122:3:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8127:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8127:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8130:14:8",
																						"nodeType": "YulIdentifier",
																						"src": "8130:14:8"
																					},
																					"nativeSrc": "8130:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8130:16:8"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8107:14:8",
																				"nodeType": "YulIdentifier",
																				"src": "8107:14:8"
																			},
																			"nativeSrc": "8107:40:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8107:40:8"
																		},
																		"nativeSrc": "8107:40:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8107:40:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8171:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8171:3:8"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8176:14:8",
																						"nodeType": "YulIdentifier",
																						"src": "8176:14:8"
																					},
																					"nativeSrc": "8176:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8176:16:8"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8164:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8164:6:8"
																			},
																			"nativeSrc": "8164:29:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8164:29:8"
																		},
																		"nativeSrc": "8164:29:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8164:29:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8041:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "8041:7:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8034:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8034:6:8"
																},
																"nativeSrc": "8034:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8034:15:8"
															},
															"nativeSrc": "8031:176:8",
															"nodeType": "YulIf",
															"src": "8031:176:8"
														},
														{
															"nativeSrc": "8220:30:8",
															"nodeType": "YulAssignment",
															"src": "8220:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8234:14:8",
																	"nodeType": "YulIdentifier",
																	"src": "8234:14:8"
																},
																"nativeSrc": "8234:16:8",
																"nodeType": "YulFunctionCall",
																"src": "8234:16:8"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8220:10:8",
																	"nodeType": "YulIdentifier",
																	"src": "8220:10:8"
																}
															]
														},
														{
															"nativeSrc": "8263:23:8",
															"nodeType": "YulAssignment",
															"src": "8263:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8284:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8284:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8278:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "8278:5:8"
																},
																"nativeSrc": "8278:8:8",
																"nodeType": "YulFunctionCall",
																"src": "8278:8:8"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8263:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "8263:11:8"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1081,
														"isOffset": false,
														"isSlot": false,
														"src": "7955:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1081,
														"isOffset": false,
														"isSlot": false,
														"src": "7974:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1085,
														"isOffset": false,
														"isSlot": false,
														"src": "8220:10:8",
														"valueSize": 1
													},
													{
														"declaration": 1088,
														"isOffset": false,
														"isSlot": false,
														"src": "8263:11:8",
														"valueSize": 1
													},
													{
														"declaration": 1079,
														"isOffset": false,
														"isSlot": false,
														"src": "7941:5:8",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1090,
												"nodeType": "InlineAssembly",
												"src": "7875:421:8"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1093,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1091,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "8310:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8324:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8310:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1102,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "8362:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8377:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8362:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8310:68:8",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1096,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1079,
																			"src": "8336:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$747",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$747",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1095,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8328:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1094,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8328:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8328:14:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1098,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8343:4:8",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8328:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8348:6:8",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8328:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8358:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8328:31:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1114,
												"nodeType": "IfStatement",
												"src": "8306:146:8",
												"trueBody": {
													"id": 1113,
													"nodeType": "Block",
													"src": "8380:72:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1109,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1079,
																				"src": "8434:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$747",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$747",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 1108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8426:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1107,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8426:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8426:14:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1106,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "8401:24:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8401:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1112,
															"nodeType": "RevertStatement",
															"src": "8394:47:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1076,
										"nodeType": "StructuredDocumentation",
										"src": "7247:486:8",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 1116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "7747:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7774:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "7767:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$747",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1078,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1077,
														"name": "IERC20",
														"nameLocations": [
															"7767:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 747,
														"src": "7767:6:8"
													},
													"referencedDeclaration": 747,
													"src": "7767:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$747",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7794:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "7781:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1080,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7781:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7766:33:8"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7808:0:8"
									},
									"scope": 1158,
									"src": "7738:720:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1156,
										"nodeType": "Block",
										"src": "9049:391:8",
										"statements": [
											{
												"assignments": [
													1128
												],
												"declarations": [
													{
														"constant": false,
														"id": 1128,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9064:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1156,
														"src": "9059:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1127,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9059:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1129,
												"nodeType": "VariableDeclarationStatement",
												"src": "9059:12:8"
											},
											{
												"assignments": [
													1131
												],
												"declarations": [
													{
														"constant": false,
														"id": 1131,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9089:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1156,
														"src": "9081:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1130,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9081:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1132,
												"nodeType": "VariableDeclarationStatement",
												"src": "9081:18:8"
											},
											{
												"assignments": [
													1134
												],
												"declarations": [
													{
														"constant": false,
														"id": 1134,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9117:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1156,
														"src": "9109:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1133,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9109:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1135,
												"nodeType": "VariableDeclarationStatement",
												"src": "9109:19:8"
											},
											{
												"AST": {
													"nativeSrc": "9163:174:8",
													"nodeType": "YulBlock",
													"src": "9163:174:8",
													"statements": [
														{
															"nativeSrc": "9177:71:8",
															"nodeType": "YulAssignment",
															"src": "9177:71:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9193:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9193:3:8"
																		},
																		"nativeSrc": "9193:5:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9193:5:8"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9200:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9200:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9207:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9207:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9214:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9214:4:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9220:4:8",
																				"nodeType": "YulLiteral",
																				"src": "9220:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9210:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9210:3:8"
																		},
																		"nativeSrc": "9210:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9210:15:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9233:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9233:4:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9227:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "9227:5:8"
																		},
																		"nativeSrc": "9227:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9227:11:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9240:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9240:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9243:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9243:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9188:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9188:4:8"
																},
																"nativeSrc": "9188:60:8",
																"nodeType": "YulFunctionCall",
																"src": "9188:60:8"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9177:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "9177:7:8"
																}
															]
														},
														{
															"nativeSrc": "9261:30:8",
															"nodeType": "YulAssignment",
															"src": "9261:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9275:14:8",
																	"nodeType": "YulIdentifier",
																	"src": "9275:14:8"
																},
																"nativeSrc": "9275:16:8",
																"nodeType": "YulFunctionCall",
																"src": "9275:16:8"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9261:10:8",
																	"nodeType": "YulIdentifier",
																	"src": "9261:10:8"
																}
															]
														},
														{
															"nativeSrc": "9304:23:8",
															"nodeType": "YulAssignment",
															"src": "9304:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9325:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9325:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9319:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9319:5:8"
																},
																"nativeSrc": "9319:8:8",
																"nodeType": "YulFunctionCall",
																"src": "9319:8:8"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9304:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "9304:11:8"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1122,
														"isOffset": false,
														"isSlot": false,
														"src": "9214:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1122,
														"isOffset": false,
														"isSlot": false,
														"src": "9233:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1131,
														"isOffset": false,
														"isSlot": false,
														"src": "9261:10:8",
														"valueSize": 1
													},
													{
														"declaration": 1134,
														"isOffset": false,
														"isSlot": false,
														"src": "9304:11:8",
														"valueSize": 1
													},
													{
														"declaration": 1128,
														"isOffset": false,
														"isSlot": false,
														"src": "9177:7:8",
														"valueSize": 1
													},
													{
														"declaration": 1120,
														"isOffset": false,
														"isSlot": false,
														"src": "9200:5:8",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1136,
												"nodeType": "InlineAssembly",
												"src": "9138:199:8"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1137,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "9353:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1138,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1131,
																		"src": "9365:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9379:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9365:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1149,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1134,
																		"src": "9416:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9431:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9416:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9365:67:8",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 1143,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1120,
																						"src": "9391:5:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$747",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$747",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 1142,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9383:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1141,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9383:7:8",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1144,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9383:14:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1145,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9398:4:8",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "9383:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1146,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9403:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "9383:26:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9412:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9383:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1153,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9364:69:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9353:80:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1126,
												"id": 1155,
												"nodeType": "Return",
												"src": "9346:87:8"
											}
										]
									},
									"documentation": {
										"id": 1117,
										"nodeType": "StructuredDocumentation",
										"src": "8464:491:8",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 1157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "8969:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9000:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "8993:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$747",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1119,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1118,
														"name": "IERC20",
														"nameLocations": [
															"8993:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 747,
														"src": "8993:6:8"
													},
													"referencedDeclaration": 747,
													"src": "8993:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$747",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9020:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "9007:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1121,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9007:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8992:33:8"
									},
									"returnParameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "9043:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1124,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9043:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9042:6:8"
									},
									"scope": 1158,
									"src": "8960:480:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1159,
							"src": "750:8692:8",
							"usedErrors": [
								761,
								770
							],
							"usedEvents": []
						}
					],
					"src": "115:9328:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1417
						],
						"Errors": [
							1439
						]
					},
					"id": 1418,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1160,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 1162,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1418,
							"sourceUnit": 1440,
							"src": "127:36:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1161,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1439,
										"src": "135:6:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1163,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:9",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1417,
							"linearizedBaseContracts": [
								1417
							],
							"name": "Address",
							"nameLocation": "241:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1164,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:9",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1168,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "358:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:9"
									},
									"src": "335:39:9"
								},
								{
									"body": {
										"id": 1214,
										"nodeType": "Block",
										"src": "1361:278:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1178,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1417",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1417",
																		"typeString": "library Address"
																	}
																],
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1176,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:9",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1181,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "1399:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1195,
												"nodeType": "IfStatement",
												"src": "1371:125:9",
												"trueBody": {
													"id": 1194,
													"nodeType": "Block",
													"src": "1407:89:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1188,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1417",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1417",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1187,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1186,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1189,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:9",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1191,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1173,
																		"src": "1478:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1183,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1439,
																		"src": "1428:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1439_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:9",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1427,
																	"src": "1428:26:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1193,
															"nodeType": "RevertStatement",
															"src": "1421:64:9"
														}
													]
												}
											},
											{
												"assignments": [
													1197,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1197,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1214,
														"src": "1507:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1196,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1204,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1555:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1198,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1171,
																"src": "1525:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1535:4:9",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1525:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1200,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1173,
																"src": "1547:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1525:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1525:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:52:9"
											},
											{
												"condition": {
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1572:8:9",
													"subExpression": {
														"id": 1205,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1197,
														"src": "1573:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1213,
												"nodeType": "IfStatement",
												"src": "1568:65:9",
												"trueBody": {
													"id": 1212,
													"nodeType": "Block",
													"src": "1582:51:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1207,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1439,
																		"src": "1603:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1439_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1610:10:9",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1430,
																	"src": "1603:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1603:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1211,
															"nodeType": "RevertStatement",
															"src": "1596:26:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1169,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:9",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "1309:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:9",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "1336:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:9"
									},
									"returnParameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:9"
									},
									"scope": 1417,
									"src": "1290:349:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1231,
										"nodeType": "Block",
										"src": "2573:62:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1226,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "2612:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1227,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "2620:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1225,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1282,
														"src": "2590:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2590:38:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1224,
												"id": 1230,
												"nodeType": "Return",
												"src": "2583:45:9"
											}
										]
									},
									"documentation": {
										"id": 1216,
										"nodeType": "StructuredDocumentation",
										"src": "1645:834:9",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2493:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2514:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "2506:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2535:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "2522:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2522:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:35:9"
									},
									"returnParameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "2559:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2559:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2558:14:9"
									},
									"scope": 1417,
									"src": "2484:151:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1281,
										"nodeType": "Block",
										"src": "3072:294:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1246,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3094:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1417",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1417",
																		"typeString": "library Address"
																	}
																],
																"id": 1245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3086:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1244,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3086:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3086:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1248,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3100:7:9",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3086:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1249,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1239,
														"src": "3110:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3086:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1263,
												"nodeType": "IfStatement",
												"src": "3082:123:9",
												"trueBody": {
													"id": 1262,
													"nodeType": "Block",
													"src": "3117:88:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1256,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3173:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1417",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1417",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1255,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3165:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1254,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3165:7:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1257,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3165:13:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3179:7:9",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3165:21:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1259,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1239,
																		"src": "3188:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1251,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1439,
																		"src": "3138:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1439_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3145:19:9",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1427,
																	"src": "3138:26:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3138:56:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1261,
															"nodeType": "RevertStatement",
															"src": "3131:63:9"
														}
													]
												}
											},
											{
												"assignments": [
													1265,
													1267
												],
												"declarations": [
													{
														"constant": false,
														"id": 1265,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3220:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1281,
														"src": "3215:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1264,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3215:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1267,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3242:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1281,
														"src": "3229:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1266,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3229:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1274,
												"initialValue": {
													"arguments": [
														{
															"id": 1272,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1237,
															"src": "3282:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1268,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1235,
																"src": "3256:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3263:4:9",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3256:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1270,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1239,
																"src": "3275:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3256:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3256:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3214:73:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1276,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1235,
															"src": "3331:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1277,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1265,
															"src": "3339:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1278,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "3348:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1275,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1374,
														"src": "3304:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3304:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1243,
												"id": 1280,
												"nodeType": "Return",
												"src": "3297:62:9"
											}
										]
									},
									"documentation": {
										"id": 1233,
										"nodeType": "StructuredDocumentation",
										"src": "2641:313:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2968:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2998:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "2990:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2990:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3019:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "3006:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1236,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3006:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3033:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "3025:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3025:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2989:50:9"
									},
									"returnParameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "3058:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1241,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3058:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3057:14:9"
									},
									"scope": 1417,
									"src": "2959:407:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1307,
										"nodeType": "Block",
										"src": "3605:154:9",
										"statements": [
											{
												"assignments": [
													1293,
													1295
												],
												"declarations": [
													{
														"constant": false,
														"id": 1293,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3621:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1307,
														"src": "3616:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1292,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3616:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1295,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3643:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1307,
														"src": "3630:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1294,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3630:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1300,
												"initialValue": {
													"arguments": [
														{
															"id": 1298,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1287,
															"src": "3675:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1296,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1285,
															"src": "3657:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1297,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3664:10:9",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3657:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3615:65:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1302,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1285,
															"src": "3724:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1303,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1293,
															"src": "3732:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1304,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1295,
															"src": "3741:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1301,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1374,
														"src": "3697:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3697:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1291,
												"id": 1306,
												"nodeType": "Return",
												"src": "3690:62:9"
											}
										]
									},
									"documentation": {
										"id": 1283,
										"nodeType": "StructuredDocumentation",
										"src": "3372:128:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3514:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3541:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "3533:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3562:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "3549:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1286,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3549:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:35:9"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "3591:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3591:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3590:14:9"
									},
									"scope": 1417,
									"src": "3505:254:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1333,
										"nodeType": "Block",
										"src": "3997:156:9",
										"statements": [
											{
												"assignments": [
													1319,
													1321
												],
												"declarations": [
													{
														"constant": false,
														"id": 1319,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4013:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1333,
														"src": "4008:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1318,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4008:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1321,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4035:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1333,
														"src": "4022:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1320,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4022:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1326,
												"initialValue": {
													"arguments": [
														{
															"id": 1324,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "4069:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1322,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1311,
															"src": "4049:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1323,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4056:12:9",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4049:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4049:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4007:67:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1328,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1311,
															"src": "4118:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1329,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "4126:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1330,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1321,
															"src": "4135:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1327,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1374,
														"src": "4091:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4091:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1317,
												"id": 1332,
												"nodeType": "Return",
												"src": "4084:62:9"
											}
										]
									},
									"documentation": {
										"id": 1309,
										"nodeType": "StructuredDocumentation",
										"src": "3765:130:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3909:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3938:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "3930:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3959:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "3946:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1312,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3946:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3929:35:9"
									},
									"returnParameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "3983:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1315,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3983:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:14:9"
									},
									"scope": 1417,
									"src": "3900:253:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1373,
										"nodeType": "Block",
										"src": "4579:424:9",
										"statements": [
											{
												"condition": {
													"id": 1347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4593:8:9",
													"subExpression": {
														"id": 1346,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1339,
														"src": "4594:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1371,
													"nodeType": "Block",
													"src": "4653:344:9",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1353,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1341,
																			"src": "4841:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4852:6:9",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4841:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4862:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4841:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1357,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1337,
																				"src": "4867:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1358,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4874:4:9",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4867:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4879:6:9",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4867:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4889:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4867:23:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4841:49:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1368,
															"nodeType": "IfStatement",
															"src": "4837:119:9",
															"trueBody": {
																"id": 1367,
																"nodeType": "Block",
																"src": "4892:64:9",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1364,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1337,
																					"src": "4934:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1363,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1168,
																				"src": "4917:16:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1365,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4917:24:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1366,
																		"nodeType": "RevertStatement",
																		"src": "4910:31:9"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1369,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1341,
																"src": "4976:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1345,
															"id": 1370,
															"nodeType": "Return",
															"src": "4969:17:9"
														}
													]
												},
												"id": 1372,
												"nodeType": "IfStatement",
												"src": "4589:408:9",
												"trueBody": {
													"id": 1352,
													"nodeType": "Block",
													"src": "4603:44:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1349,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1341,
																		"src": "4625:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1348,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1416,
																	"src": "4617:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4617:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1351,
															"nodeType": "ExpressionStatement",
															"src": "4617:19:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1335,
										"nodeType": "StructuredDocumentation",
										"src": "4159:257:9",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 1374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4430:26:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4474:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "4466:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4495:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "4490:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1338,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4490:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4525:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "4512:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1340,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4512:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:85:9"
									},
									"returnParameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "4565:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1343,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4565:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4564:14:9"
									},
									"scope": 1417,
									"src": "4421:582:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1395,
										"nodeType": "Block",
										"src": "5307:122:9",
										"statements": [
											{
												"condition": {
													"id": 1385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5321:8:9",
													"subExpression": {
														"id": 1384,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1377,
														"src": "5322:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1393,
													"nodeType": "Block",
													"src": "5381:42:9",
													"statements": [
														{
															"expression": {
																"id": 1391,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1379,
																"src": "5402:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1383,
															"id": 1392,
															"nodeType": "Return",
															"src": "5395:17:9"
														}
													]
												},
												"id": 1394,
												"nodeType": "IfStatement",
												"src": "5317:106:9",
												"trueBody": {
													"id": 1390,
													"nodeType": "Block",
													"src": "5331:44:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1387,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1379,
																		"src": "5353:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1386,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1416,
																	"src": "5345:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5345:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1389,
															"nodeType": "ExpressionStatement",
															"src": "5345:19:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1375,
										"nodeType": "StructuredDocumentation",
										"src": "5009:191:9",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 1396,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5214:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5236:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "5231:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5231:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5258:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "5245:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1378,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5245:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5230:39:9"
									},
									"returnParameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "5293:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1381,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5293:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5292:14:9"
									},
									"scope": 1417,
									"src": "5205:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1415,
										"nodeType": "Block",
										"src": "5598:432:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1402,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1399,
															"src": "5674:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1403,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5685:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5674:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1404,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5694:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5674:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1413,
													"nodeType": "Block",
													"src": "5973:51:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1408,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1439,
																		"src": "5994:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1439_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6001:10:9",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1430,
																	"src": "5994:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5994:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1412,
															"nodeType": "RevertStatement",
															"src": "5987:26:9"
														}
													]
												},
												"id": 1414,
												"nodeType": "IfStatement",
												"src": "5670:354:9",
												"trueBody": {
													"id": 1407,
													"nodeType": "Block",
													"src": "5697:270:9",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5824:133:9",
																"nodeType": "YulBlock",
																"src": "5824:133:9",
																"statements": [
																	{
																		"nativeSrc": "5842:40:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5842:40:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5871:10:9",
																					"nodeType": "YulIdentifier",
																					"src": "5871:10:9"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5865:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5865:5:9"
																			},
																			"nativeSrc": "5865:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5865:17:9"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5846:15:9",
																				"nodeType": "YulTypedName",
																				"src": "5846:15:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5910:2:9",
																							"nodeType": "YulLiteral",
																							"src": "5910:2:9",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5914:10:9",
																							"nodeType": "YulIdentifier",
																							"src": "5914:10:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5906:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "5906:3:9"
																					},
																					"nativeSrc": "5906:19:9",
																					"nodeType": "YulFunctionCall",
																					"src": "5906:19:9"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5927:15:9",
																					"nodeType": "YulIdentifier",
																					"src": "5927:15:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5899:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5899:6:9"
																			},
																			"nativeSrc": "5899:44:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:44:9"
																		},
																		"nativeSrc": "5899:44:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:44:9"
																	}
																]
															},
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 1399,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5871:10:9",
																	"valueSize": 1
																},
																{
																	"declaration": 1399,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5914:10:9",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 1406,
															"nodeType": "InlineAssembly",
															"src": "5799:158:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1397,
										"nodeType": "StructuredDocumentation",
										"src": "5435:103:9",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 1416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5552:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5573:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "5560:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1398,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5560:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5559:25:9"
									},
									"returnParameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5598:0:9"
									},
									"scope": 1417,
									"src": "5543:487:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1418,
							"src": "233:5799:9",
							"usedErrors": [
								1168
							],
							"usedEvents": []
						}
					],
					"src": "101:5932:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							1439
						]
					},
					"id": 1440,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1419,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1420,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:10",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 1439,
							"linearizedBaseContracts": [
								1439
							],
							"name": "Errors",
							"nameLocation": "419:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1421,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:10",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 1427,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "557:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "574:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:10"
									},
									"src": "531:59:10"
								},
								{
									"documentation": {
										"id": 1428,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:10",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 1430,
									"name": "FailedCall",
									"nameLocation": "696:10:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:10"
									},
									"src": "690:19:10"
								},
								{
									"documentation": {
										"id": 1431,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:10",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 1433,
									"name": "FailedDeployment",
									"nameLocation": "772:16:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:10"
									},
									"src": "766:25:10"
								},
								{
									"documentation": {
										"id": 1434,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:10",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 1438,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "884:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:10"
									},
									"src": "860:33:10"
								}
							],
							"scope": 1440,
							"src": "411:484:10",
							"usedErrors": [
								1427,
								1430,
								1433,
								1438
							],
							"usedEvents": []
						}
					],
					"src": "100:796:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1451
						]
					},
					"id": 1452,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1441,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1442,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:11",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1451,
							"linearizedBaseContracts": [
								1451
							],
							"name": "IERC165",
							"nameLocation": "432:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1443,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1450,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "818:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1444,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:11"
									},
									"returnParameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "861:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1447,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:11"
									},
									"scope": 1451,
									"src": "791:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1452,
							"src": "422:447:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:11"
				},
				"id": 11
			},
			"contracts/interface/IScorer.sol": {
				"ast": {
					"absolutePath": "contracts/interface/IScorer.sol",
					"exportedSymbols": {
						"IScorer": [
							1472
						]
					},
					"id": 1473,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1453,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IScorer",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1472,
							"linearizedBaseContracts": [
								1472
							],
							"name": "IScorer",
							"nameLocation": "71:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1454,
										"nodeType": "StructuredDocumentation",
										"src": "86:741:12",
										"text": " @dev Returns the score of a specific user for a given score type.\n      The score type is represented as a `bytes32` hash (e.g., keccak256(\"Trust\")).\n      The score is typically used to determine the user's eligibility for certain actions or claims.\n      The exact logic for scoring is determined by the implementation of the contract that inherits this interface.\n @param user The address of the user whose score is being queried.\n @param scoreType The type of score to query, represented as a `bytes32` hash.\n @return The score of the user as a uint256 value.\n @notice This function should be implemented in the contract that inherits the `IScorer` interface."
									},
									"functionSelector": "db4f1024",
									"id": 1463,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "score",
									"nameLocation": "842:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "856:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "848:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "848:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "scoreType",
												"nameLocation": "876:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "862:23:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1457,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "862:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "847:39:12"
									},
									"returnParameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "910:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "909:9:12"
									},
									"scope": 1472,
									"src": "833:86:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1464,
										"nodeType": "StructuredDocumentation",
										"src": "927:302:12",
										"text": " @dev Checks if the provided address is an admin.\n @param admin The address to check for admin status.\n @return True if the address is an admin, false otherwise.\n @notice This function should be implemented in the contract that inherits the `IScorer` interface."
									},
									"functionSelector": "24d7806c",
									"id": 1471,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isAdmin",
									"nameLocation": "1244:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1260:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "1252:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1251:15:12"
									},
									"returnParameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "1290:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1468,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1290:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1289:6:12"
									},
									"scope": 1472,
									"src": "1235:61:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1473,
							"src": "61:1238:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1268:12"
				},
				"id": 12
			},
			"contracts/sweetspot.sol": {
				"ast": {
					"absolutePath": "contracts/sweetspot.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							579
						],
						"IERC20": [
							747
						],
						"IScorer": [
							1472
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						],
						"ReentrancyGuardUpgradeable": [
							533
						],
						"SafeERC20": [
							1158
						],
						"sweetspot": [
							2000
						]
					},
					"id": 2001,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1474,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1475,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2001,
							"sourceUnit": 195,
							"src": "61:75:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1477,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2001,
							"sourceUnit": 748,
							"src": "138:72:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1476,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 747,
										"src": "147:6:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1479,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2001,
							"sourceUnit": 1159,
							"src": "212:84:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1478,
										"name": "SafeERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1158,
										"src": "221:9:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
							"id": 1480,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2001,
							"sourceUnit": 534,
							"src": "298:85:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interface/IScorer.sol",
							"file": "./interface/IScorer.sol",
							"id": 1481,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2001,
							"sourceUnit": 1473,
							"src": "385:33:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1482,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"476:18:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "476:18:13"
									},
									"id": 1483,
									"nodeType": "InheritanceSpecifier",
									"src": "476:18:13"
								},
								{
									"baseName": {
										"id": 1484,
										"name": "ReentrancyGuardUpgradeable",
										"nameLocations": [
											"496:26:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 533,
										"src": "496:26:13"
									},
									"id": 1485,
									"nodeType": "InheritanceSpecifier",
									"src": "496:26:13"
								}
							],
							"canonicalName": "sweetspot",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2000,
							"linearizedBaseContracts": [
								2000,
								533,
								194,
								579,
								448
							],
							"name": "sweetspot",
							"nameLocation": "463:9:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1489,
									"libraryName": {
										"id": 1486,
										"name": "SafeERC20",
										"nameLocations": [
											"537:9:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1158,
										"src": "537:9:13"
									},
									"nodeType": "UsingForDirective",
									"src": "531:27:13",
									"typeName": {
										"id": 1488,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1487,
											"name": "IERC20",
											"nameLocations": [
												"551:6:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 747,
											"src": "551:6:13"
										},
										"referencedDeclaration": 747,
										"src": "551:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$747",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "31f7d964",
									"id": 1495,
									"mutability": "constant",
									"name": "NATIVE_TOKEN",
									"nameLocation": "590:12:13",
									"nodeType": "VariableDeclaration",
									"scope": 2000,
									"src": "566:49:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1490,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "566:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30",
												"id": 1493,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "613:1:13",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												}
											],
											"id": 1492,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "605:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 1491,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "605:7:13",
												"typeDescriptions": {}
											}
										},
										"id": 1494,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "605:10:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "85c758f7",
									"id": 1498,
									"mutability": "mutable",
									"name": "scorer",
									"nameLocation": "637:6:13",
									"nodeType": "VariableDeclaration",
									"scope": 2000,
									"src": "622:21:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IScorer_$1472",
										"typeString": "contract IScorer"
									},
									"typeName": {
										"id": 1497,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1496,
											"name": "IScorer",
											"nameLocations": [
												"622:7:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1472,
											"src": "622:7:13"
										},
										"referencedDeclaration": 1472,
										"src": "622:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IScorer_$1472",
											"typeString": "contract IScorer"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "sweetspot.Round",
									"id": 1505,
									"members": [
										{
											"constant": false,
											"id": 1500,
											"mutability": "mutable",
											"name": "start",
											"nameLocation": "719:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1505,
											"src": "712:12:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1499,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "712:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1502,
											"mutability": "mutable",
											"name": "end",
											"nameLocation": "774:3:13",
											"nodeType": "VariableDeclaration",
											"scope": 1505,
											"src": "767:10:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1501,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "767:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1504,
											"mutability": "mutable",
											"name": "metadataURI",
											"nameLocation": "825:11:13",
											"nodeType": "VariableDeclaration",
											"scope": 1505,
											"src": "818:18:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1503,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "818:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Round",
									"nameLocation": "695:5:13",
									"nodeType": "StructDefinition",
									"scope": 2000,
									"src": "688:187:13",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8a19c8bc",
									"id": 1508,
									"mutability": "mutable",
									"name": "currentRound",
									"nameLocation": "896:12:13",
									"nodeType": "VariableDeclaration",
									"scope": 2000,
									"src": "883:25:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Round_$1505_storage",
										"typeString": "struct sweetspot.Round"
									},
									"typeName": {
										"id": 1507,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1506,
											"name": "Round",
											"nameLocations": [
												"883:5:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1505,
											"src": "883:5:13"
										},
										"referencedDeclaration": 1505,
										"src": "883:5:13",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Round_$1505_storage_ptr",
											"typeString": "struct sweetspot.Round"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "aee9c872",
									"id": 1512,
									"mutability": "mutable",
									"name": "totalBalances",
									"nameLocation": "1034:13:13",
									"nodeType": "VariableDeclaration",
									"scope": 2000,
									"src": "999:48:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1511,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1509,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1007:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "999:27:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1510,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1018:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a9590e8a",
									"id": 1518,
									"mutability": "mutable",
									"name": "allowedAmounts",
									"nameLocation": "1152:14:13",
									"nodeType": "VariableDeclaration",
									"scope": 2000,
									"src": "1097:69:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1517,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1513,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1105:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1097:47:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1516,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1514,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1124:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1116:27:13",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1515,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1135:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62",
									"id": 1526,
									"name": "Deposit",
									"nameLocation": "1182:7:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1520,
												"indexed": true,
												"mutability": "mutable",
												"name": "depositor",
												"nameLocation": "1206:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "1190:25:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1190:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1522,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1233:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "1217:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1217:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1524,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1248:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "1240:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1240:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1189:66:13"
									},
									"src": "1176:80:13"
								},
								{
									"anonymous": false,
									"eventSelector": "9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb",
									"id": 1534,
									"name": "Withdraw",
									"nameLocation": "1268:8:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"indexed": true,
												"mutability": "mutable",
												"name": "withdrawer",
												"nameLocation": "1293:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "1277:26:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1277:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1530,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1321:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "1305:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1305:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1532,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1336:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "1328:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1328:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1276:67:13"
									},
									"src": "1262:82:13"
								},
								{
									"anonymous": false,
									"eventSelector": "f7a40077ff7a04c7e61f6f26fb13774259ddf1b6bce9ecf26a8276cdd3992683",
									"id": 1542,
									"name": "Claimed",
									"nameLocation": "1356:7:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimant",
												"nameLocation": "1380:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1364:24:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1364:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1538,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1406:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1390:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1390:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1540,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1421:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1413:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1413:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1363:65:13"
									},
									"src": "1350:79:13"
								},
								{
									"anonymous": false,
									"eventSelector": "3d0601f3b0e52fd772f1fa71d91651b34b6a11144bea30d74e0f820019a04dc2",
									"id": 1550,
									"name": "AllowedAmountUpdated",
									"nameLocation": "1441:20:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1544,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1478:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "1462:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1462:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1546,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1500:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "1484:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1484:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1548,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAmount",
												"nameLocation": "1515:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "1507:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1507:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:64:13"
									},
									"src": "1435:91:13"
								},
								{
									"anonymous": false,
									"eventSelector": "09e6db48f22357e6dce2bbff89db8ff25f0012a08186d6ea72e2343fdc112e13",
									"id": 1558,
									"name": "RoundUpdated",
									"nameLocation": "1538:12:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1552,
												"indexed": false,
												"mutability": "mutable",
												"name": "start",
												"nameLocation": "1559:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "1551:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1551:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1554,
												"indexed": false,
												"mutability": "mutable",
												"name": "end",
												"nameLocation": "1574:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "1566:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1556,
												"indexed": false,
												"mutability": "mutable",
												"name": "metadataURI",
												"nameLocation": "1586:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "1579:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1555,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1579:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1550:48:13"
									},
									"src": "1532:67:13"
								},
								{
									"errorSelector": "fa7410d4",
									"id": 1566,
									"name": "NotWithinRound",
									"nameLocation": "1613:14:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "currentTime",
												"nameLocation": "1636:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "1628:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1628:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "start",
												"nameLocation": "1657:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "1649:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1649:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "end",
												"nameLocation": "1672:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "1664:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1627:49:13"
									},
									"src": "1607:70:13"
								},
								{
									"body": {
										"id": 1578,
										"nodeType": "Block",
										"src": "1706:92:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1571,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1740:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1744:6:13",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1740:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1569,
																	"name": "scorer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1498,
																	"src": "1725:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IScorer_$1472",
																		"typeString": "contract IScorer"
																	}
																},
																"id": 1570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1732:7:13",
																"memberName": "isAdmin",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1471,
																"src": "1725:14:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view external returns (bool)"
																}
															},
															"id": 1573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1725:26:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f7420616e2061646d696e",
															"id": 1574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1753:24:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226",
																"typeString": "literal_string \"Caller is not an admin\""
															},
															"value": "Caller is not an admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226",
																"typeString": "literal_string \"Caller is not an admin\""
															}
														],
														"id": 1568,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1717:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1717:61:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1576,
												"nodeType": "ExpressionStatement",
												"src": "1717:61:13"
											},
											{
												"id": 1577,
												"nodeType": "PlaceholderStatement",
												"src": "1789:1:13"
											}
										]
									},
									"id": 1579,
									"name": "onlyAdmin",
									"nameLocation": "1694:9:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1703:2:13"
									},
									"src": "1685:113:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1602,
										"nodeType": "Block",
										"src": "2050:144:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1590,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1584,
															"src": "2076:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1589,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "2061:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2061:21:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1592,
												"nodeType": "ExpressionStatement",
												"src": "2061:21:13"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1593,
														"name": "__ReentrancyGuard_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "2126:22:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2126:24:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1595,
												"nodeType": "ExpressionStatement",
												"src": "2126:24:13"
											},
											{
												"expression": {
													"id": 1600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1596,
														"name": "scorer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1498,
														"src": "2161:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IScorer_$1472",
															"typeString": "contract IScorer"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1598,
																"name": "_scorer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1582,
																"src": "2178:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1597,
															"name": "IScorer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1472,
															"src": "2170:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IScorer_$1472_$",
																"typeString": "type(contract IScorer)"
															}
														},
														"id": 1599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2170:16:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IScorer_$1472",
															"typeString": "contract IScorer"
														}
													},
													"src": "2161:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IScorer_$1472",
														"typeString": "contract IScorer"
													}
												},
												"id": 1601,
												"nodeType": "ExpressionStatement",
												"src": "2161:25:13"
											}
										]
									},
									"documentation": {
										"id": 1580,
										"nodeType": "StructuredDocumentation",
										"src": "1806:165:13",
										"text": "@notice Initializes this contract with its initial state.\n @param _scorer The scoring contract address.\n @param owner The owner address."
									},
									"functionSelector": "485cc955",
									"id": 1603,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1587,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1586,
												"name": "initializer",
												"nameLocations": [
													"2038:11:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 302,
												"src": "2038:11:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "2038:11:13"
										}
									],
									"name": "initialize",
									"nameLocation": "1986:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "_scorer",
												"nameLocation": "2005:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "1997:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2022:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "2014:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:32:13"
									},
									"returnParameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2050:0:13"
									},
									"scope": 2000,
									"src": "1977:217:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1660,
										"nodeType": "Block",
										"src": "2491:395:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1613,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1606,
														"src": "2506:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1614,
														"name": "NATIVE_TOKEN",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1495,
														"src": "2515:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2506:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1645,
													"nodeType": "Block",
													"src": "2616:170:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1626,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1608,
																			"src": "2639:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2648:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2639:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4465706f73697420616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
																		"id": 1629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2651:42:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71",
																			"typeString": "literal_string \"Deposit amount must be greater than zero\""
																		},
																		"value": "Deposit amount must be greater than zero"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71",
																			"typeString": "literal_string \"Deposit amount must be greater than zero\""
																		}
																	],
																	"id": 1625,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2631:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2631:63:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1631,
															"nodeType": "ExpressionStatement",
															"src": "2631:63:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1636,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2740:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2744:6:13",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2740:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1640,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2760:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_sweetspot_$2000",
																					"typeString": "contract sweetspot"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_sweetspot_$2000",
																					"typeString": "contract sweetspot"
																				}
																			],
																			"id": 1639,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2752:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1638,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2752:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1641,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2752:13:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1642,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1608,
																		"src": "2767:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1633,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1606,
																				"src": "2716:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1632,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 747,
																			"src": "2709:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$747_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2709:13:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$747",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2723:16:13",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 821,
																	"src": "2709:30:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$747_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2709:65:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1644,
															"nodeType": "ExpressionStatement",
															"src": "2709:65:13"
														}
													]
												},
												"id": 1646,
												"nodeType": "IfStatement",
												"src": "2502:284:13",
												"trueBody": {
													"id": 1624,
													"nodeType": "Block",
													"src": "2529:81:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1617,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2552:3:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1618,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2556:5:13",
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "2552:9:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 1619,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1608,
																			"src": "2565:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2552:19:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e636f727265637420457468657220616d6f756e74",
																		"id": 1621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2573:24:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375",
																			"typeString": "literal_string \"Incorrect Ether amount\""
																		},
																		"value": "Incorrect Ether amount"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375",
																			"typeString": "literal_string \"Incorrect Ether amount\""
																		}
																	],
																	"id": 1616,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2544:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2544:54:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1623,
															"nodeType": "ExpressionStatement",
															"src": "2544:54:13"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1647,
															"name": "totalBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "2798:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1649,
														"indexExpression": {
															"id": 1648,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1606,
															"src": "2812:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2798:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1650,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1608,
														"src": "2822:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2798:30:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1652,
												"nodeType": "ExpressionStatement",
												"src": "2798:30:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1654,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2852:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2856:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2852:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1656,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1606,
															"src": "2864:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1657,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1608,
															"src": "2871:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1653,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1526,
														"src": "2844:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2844:34:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1659,
												"nodeType": "EmitStatement",
												"src": "2839:39:13"
											}
										]
									},
									"documentation": {
										"id": 1604,
										"nodeType": "StructuredDocumentation",
										"src": "2202:204:13",
										"text": "@notice Deposits funds into this jar for a specific token or Ether.\n @param token The token address (address(0) for Ether).\n @param amount The value to add (in wei for Ether)."
									},
									"functionSelector": "47e7ef24",
									"id": 1661,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1611,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1610,
												"name": "nonReentrant",
												"nameLocations": [
													"2477:12:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 493,
												"src": "2477:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "2477:12:13"
										}
									],
									"name": "deposit",
									"nameLocation": "2421:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2437:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "2429:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2452:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "2444:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2444:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2428:31:13"
									},
									"returnParameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2491:0:13"
									},
									"scope": 2000,
									"src": "2412:474:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1768,
										"nodeType": "Block",
										"src": "3023:880:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1673,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1669,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3048:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3054:9:13",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3048:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"expression": {
																"id": 1671,
																"name": "currentRound",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1508,
																"src": "3066:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Round_$1505_storage",
																	"typeString": "struct sweetspot.Round storage ref"
																}
															},
															"id": 1672,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3079:5:13",
															"memberName": "start",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1500,
															"src": "3066:18:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "3048:36:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1678,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1674,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3088:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3094:9:13",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3088:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 1676,
																"name": "currentRound",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1508,
																"src": "3106:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Round_$1505_storage",
																	"typeString": "struct sweetspot.Round storage ref"
																}
															},
															"id": 1677,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3119:3:13",
															"memberName": "end",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1502,
															"src": "3106:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "3088:34:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3048:74:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1690,
												"nodeType": "IfStatement",
												"src": "3044:183:13",
												"trueBody": {
													"id": 1689,
													"nodeType": "Block",
													"src": "3124:103:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1681,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "3161:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3167:9:13",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "3161:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1683,
																			"name": "currentRound",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1508,
																			"src": "3178:12:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Round_$1505_storage",
																				"typeString": "struct sweetspot.Round storage ref"
																			}
																		},
																		"id": 1684,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3191:5:13",
																		"memberName": "start",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1500,
																		"src": "3178:18:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	},
																	{
																		"expression": {
																			"id": 1685,
																			"name": "currentRound",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1508,
																			"src": "3198:12:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Round_$1505_storage",
																				"typeString": "struct sweetspot.Round storage ref"
																			}
																		},
																		"id": 1686,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3211:3:13",
																		"memberName": "end",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1502,
																		"src": "3198:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		},
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 1680,
																	"name": "NotWithinRound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1566,
																	"src": "3146:14:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3146:69:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1688,
															"nodeType": "RevertStatement",
															"src": "3139:76:13"
														}
													]
												}
											},
											{
												"assignments": [
													1692
												],
												"declarations": [
													{
														"constant": false,
														"id": 1692,
														"mutability": "mutable",
														"name": "userAllowedAmount",
														"nameLocation": "3247:17:13",
														"nodeType": "VariableDeclaration",
														"scope": 1768,
														"src": "3239:25:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1691,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3239:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1699,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1693,
															"name": "allowedAmounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1518,
															"src": "3267:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1696,
														"indexExpression": {
															"expression": {
																"id": 1694,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3282:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3286:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3282:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3267:26:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1698,
													"indexExpression": {
														"id": 1697,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1664,
														"src": "3294:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3267:33:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3239:61:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1701,
																"name": "userAllowedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1692,
																"src": "3319:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1702,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3339:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3319:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20636c61696d61626c6520616d6f756e74",
															"id": 1704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3342:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf",
																"typeString": "literal_string \"No claimable amount\""
															},
															"value": "No claimable amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf",
																"typeString": "literal_string \"No claimable amount\""
															}
														],
														"id": 1700,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3311:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3311:53:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1706,
												"nodeType": "ExpressionStatement",
												"src": "3311:53:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1708,
																	"name": "totalBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1512,
																	"src": "3383:13:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1710,
																"indexExpression": {
																	"id": 1709,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1664,
																	"src": "3397:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3383:20:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1711,
																"name": "userAllowedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1692,
																"src": "3407:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3383:41:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742066756e647320696e206a6172",
															"id": 1713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3426:27:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d",
																"typeString": "literal_string \"Insufficient funds in jar\""
															},
															"value": "Insufficient funds in jar"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d",
																"typeString": "literal_string \"Insufficient funds in jar\""
															}
														],
														"id": 1707,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3375:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3375:79:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1715,
												"nodeType": "ExpressionStatement",
												"src": "3375:79:13"
											},
											{
												"expression": {
													"id": 1723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1716,
																"name": "allowedAmounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1518,
																"src": "3467:14:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1720,
															"indexExpression": {
																"expression": {
																	"id": 1717,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3482:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3486:6:13",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3482:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3467:26:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1721,
														"indexExpression": {
															"id": 1719,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "3494:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3467:33:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1722,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3503:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3467:37:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1724,
												"nodeType": "ExpressionStatement",
												"src": "3467:37:13"
											},
											{
												"expression": {
													"id": 1729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1725,
															"name": "totalBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "3515:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1727,
														"indexExpression": {
															"id": 1726,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "3529:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3515:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1728,
														"name": "userAllowedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1692,
														"src": "3539:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3515:41:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1730,
												"nodeType": "ExpressionStatement",
												"src": "3515:41:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1731,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1664,
														"src": "3573:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1732,
														"name": "NATIVE_TOKEN",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1495,
														"src": "3582:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3573:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1759,
													"nodeType": "Block",
													"src": "3749:84:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1754,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3791:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1755,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3795:6:13",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3791:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1756,
																		"name": "userAllowedAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1692,
																		"src": "3803:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1751,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1664,
																				"src": "3771:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1750,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 747,
																			"src": "3764:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$747_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3764:13:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$747",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3778:12:13",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 794,
																	"src": "3764:26:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$747_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1757,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3764:57:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1758,
															"nodeType": "ExpressionStatement",
															"src": "3764:57:13"
														}
													]
												},
												"id": 1760,
												"nodeType": "IfStatement",
												"src": "3569:264:13",
												"trueBody": {
													"id": 1749,
													"nodeType": "Block",
													"src": "3596:147:13",
													"statements": [
														{
															"assignments": [
																1735,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1735,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "3617:7:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 1749,
																	"src": "3612:12:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1734,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "3612:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 1743,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 1741,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3672:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1736,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "3630:3:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1737,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3634:6:13",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "3630:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1738,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3641:4:13",
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "3630:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 1740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 1739,
																			"name": "userAllowedAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1692,
																			"src": "3653:17:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "3630:41:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 1742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3630:45:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3611:64:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1745,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1735,
																		"src": "3698:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4574686572207472616e73666572206661696c6564",
																		"id": 1746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3707:23:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be",
																			"typeString": "literal_string \"Ether transfer failed\""
																		},
																		"value": "Ether transfer failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be",
																			"typeString": "literal_string \"Ether transfer failed\""
																		}
																	],
																	"id": 1744,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3690:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1747,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3690:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1748,
															"nodeType": "ExpressionStatement",
															"src": "3690:41:13"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1762,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3858:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3862:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3858:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1764,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "3870:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1765,
															"name": "userAllowedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1692,
															"src": "3877:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1761,
														"name": "Claimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1542,
														"src": "3850:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3850:45:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1767,
												"nodeType": "EmitStatement",
												"src": "3845:50:13"
											}
										]
									},
									"documentation": {
										"id": 1662,
										"nodeType": "StructuredDocumentation",
										"src": "2894:71:13",
										"text": "@notice Claims the full allowed amount for a user during the round."
									},
									"functionSelector": "1e83409a",
									"id": 1769,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1667,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1666,
												"name": "nonReentrant",
												"nameLocations": [
													"3010:12:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 493,
												"src": "3010:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "3010:12:13"
										}
									],
									"name": "claim",
									"nameLocation": "2980:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2994:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "2986:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2986:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:15:13"
									},
									"returnParameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3023:0:13"
									},
									"scope": 2000,
									"src": "2971:932:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1805,
										"nodeType": "Block",
										"src": "4225:171:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1782,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1772,
																"src": "4244:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4260:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4252:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1783,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4252:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 1786,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4252:10:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4244:18:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f20616464726573732075736572",
															"id": 1788,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4264:19:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d",
																"typeString": "literal_string \"Zero address user\""
															},
															"value": "Zero address user"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d",
																"typeString": "literal_string \"Zero address user\""
															}
														],
														"id": 1781,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4236:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4236:48:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1790,
												"nodeType": "ExpressionStatement",
												"src": "4236:48:13"
											},
											{
												"expression": {
													"id": 1797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1791,
																"name": "allowedAmounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1518,
																"src": "4295:14:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1794,
															"indexExpression": {
																"id": 1792,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1772,
																"src": "4310:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4295:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1795,
														"indexExpression": {
															"id": 1793,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1774,
															"src": "4316:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4295:27:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1796,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1776,
														"src": "4325:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4295:36:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1798,
												"nodeType": "ExpressionStatement",
												"src": "4295:36:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1800,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1772,
															"src": "4368:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1801,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1774,
															"src": "4374:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1802,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1776,
															"src": "4381:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1799,
														"name": "AllowedAmountUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1550,
														"src": "4347:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4347:41:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1804,
												"nodeType": "EmitStatement",
												"src": "4342:46:13"
											}
										]
									},
									"documentation": {
										"id": 1770,
										"nodeType": "StructuredDocumentation",
										"src": "3911:218:13",
										"text": "@notice Sets the allowed amount for a specific user and token.\n @param user The address of the user.\n @param token The token address.\n @param amount The allowed amount for the user."
									},
									"functionSelector": "b807a3c4",
									"id": 1806,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1779,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1778,
												"name": "onlyAdmin",
												"nameLocations": [
													"4215:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1579,
												"src": "4215:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "4215:9:13"
										}
									],
									"name": "setAllowedAmount",
									"nameLocation": "4144:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4169:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "4161:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4161:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4183:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "4175:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4175:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4198:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "4190:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4190:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4160:45:13"
									},
									"returnParameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4225:0:13"
									},
									"scope": 2000,
									"src": "4135:261:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1864,
										"nodeType": "Block",
										"src": "4647:365:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1821,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1812,
																	"src": "4666:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 1822,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4672:6:13",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4666:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1823,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1815,
																	"src": "4682:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 1824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4690:6:13",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4682:14:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4666:30:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d69736d617463686564206172726179206c656e67746873",
															"id": 1826,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4698:26:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085",
																"typeString": "literal_string \"Mismatched array lengths\""
															},
															"value": "Mismatched array lengths"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085",
																"typeString": "literal_string \"Mismatched array lengths\""
															}
														],
														"id": 1820,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4658:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4658:67:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1828,
												"nodeType": "ExpressionStatement",
												"src": "4658:67:13"
											},
											{
												"body": {
													"id": 1862,
													"nodeType": "Block",
													"src": "4779:226:13",
													"statements": [
														{
															"expression": {
																"id": 1850,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1840,
																			"name": "allowedAmounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1518,
																			"src": "4880:14:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1845,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 1841,
																				"name": "users",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1812,
																				"src": "4895:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																					"typeString": "address[] calldata"
																				}
																			},
																			"id": 1843,
																			"indexExpression": {
																				"id": 1842,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1830,
																				"src": "4901:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4895:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4880:24:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1846,
																	"indexExpression": {
																		"id": 1844,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1809,
																		"src": "4905:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4880:31:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1847,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1815,
																		"src": "4914:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	},
																	"id": 1849,
																	"indexExpression": {
																		"id": 1848,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1830,
																		"src": "4922:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4914:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4880:44:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1851,
															"nodeType": "ExpressionStatement",
															"src": "4880:44:13"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1853,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1812,
																			"src": "4965:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 1855,
																		"indexExpression": {
																			"id": 1854,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1830,
																			"src": "4971:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4965:8:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1856,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1809,
																		"src": "4975:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1857,
																			"name": "amounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1815,
																			"src": "4982:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 1859,
																		"indexExpression": {
																			"id": 1858,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1830,
																			"src": "4990:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4982:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1852,
																	"name": "AllowedAmountUpdated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1550,
																	"src": "4944:20:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1860,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4944:49:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1861,
															"nodeType": "EmitStatement",
															"src": "4939:54:13"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1833,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1830,
														"src": "4756:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1834,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1812,
															"src": "4760:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 1835,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4766:6:13",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4760:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4756:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1863,
												"initializationExpression": {
													"assignments": [
														1830
													],
													"declarations": [
														{
															"constant": false,
															"id": 1830,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4749:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 1863,
															"src": "4741:9:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1829,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4741:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1832,
													"initialValue": {
														"hexValue": "30",
														"id": 1831,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4753:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4741:13:13"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1838,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4774:3:13",
														"subExpression": {
															"id": 1837,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1830,
															"src": "4774:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1839,
													"nodeType": "ExpressionStatement",
													"src": "4774:3:13"
												},
												"nodeType": "ForStatement",
												"src": "4736:269:13"
											}
										]
									},
									"documentation": {
										"id": 1807,
										"nodeType": "StructuredDocumentation",
										"src": "4404:85:13",
										"text": "@notice Sets the allowed amount for multiple users for a given token in one call."
									},
									"functionSelector": "e3e7c1f9",
									"id": 1865,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1818,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1817,
												"name": "onlyAdmin",
												"nameLocations": [
													"4637:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1579,
												"src": "4637:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "4637:9:13"
										}
									],
									"name": "bulkSetAllowedAmount",
									"nameLocation": "4504:20:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4543:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "4535:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4535:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "users",
												"nameLocation": "4578:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "4559:24:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1810,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4559:7:13",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1811,
													"nodeType": "ArrayTypeName",
													"src": "4559:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4613:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "4594:26:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1813,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4594:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1814,
													"nodeType": "ArrayTypeName",
													"src": "4594:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4524:103:13"
									},
									"returnParameters": {
										"id": 1819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4647:0:13"
									},
									"scope": 2000,
									"src": "4495:517:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1898,
										"nodeType": "Block",
										"src": "5353:186:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"id": 1880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1878,
																"name": "start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1868,
																"src": "5372:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1879,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1870,
																"src": "5380:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "5372:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53746172742074696d65206d757374206265206265666f726520656e642074696d65",
															"id": 1881,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5385:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f",
																"typeString": "literal_string \"Start time must be before end time\""
															},
															"value": "Start time must be before end time"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f",
																"typeString": "literal_string \"Start time must be before end time\""
															}
														],
														"id": 1877,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5364:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5364:58:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1883,
												"nodeType": "ExpressionStatement",
												"src": "5364:58:13"
											},
											{
												"expression": {
													"id": 1890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1884,
														"name": "currentRound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1508,
														"src": "5433:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Round_$1505_storage",
															"typeString": "struct sweetspot.Round storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1886,
																"name": "start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1868,
																"src": "5454:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															{
																"id": 1887,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1870,
																"src": "5461:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															{
																"id": 1888,
																"name": "metadataURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1872,
																"src": "5466:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"id": 1885,
															"name": "Round",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1505,
															"src": "5448:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Round_$1505_storage_ptr_$",
																"typeString": "type(struct sweetspot.Round storage pointer)"
															}
														},
														"id": 1889,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5448:30:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Round_$1505_memory_ptr",
															"typeString": "struct sweetspot.Round memory"
														}
													},
													"src": "5433:45:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Round_$1505_storage",
														"typeString": "struct sweetspot.Round storage ref"
													}
												},
												"id": 1891,
												"nodeType": "ExpressionStatement",
												"src": "5433:45:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1893,
															"name": "start",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1868,
															"src": "5507:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"id": 1894,
															"name": "end",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1870,
															"src": "5514:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"id": 1895,
															"name": "metadataURI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1872,
															"src": "5519:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1892,
														"name": "RoundUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1558,
														"src": "5494:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,uint256,string memory)"
														}
													},
													"id": 1896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5494:37:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1897,
												"nodeType": "EmitStatement",
												"src": "5489:42:13"
											}
										]
									},
									"documentation": {
										"id": 1866,
										"nodeType": "StructuredDocumentation",
										"src": "5020:235:13",
										"text": "@notice Sets the round duration and metadata URI.\n @param start The start timestamp of the round.\n @param end The end timestamp of the round.\n @param metadataURI The IPFS URI for the round metadata."
									},
									"functionSelector": "a9012c89",
									"id": 1899,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1875,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1874,
												"name": "onlyAdmin",
												"nameLocations": [
													"5343:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1579,
												"src": "5343:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "5343:9:13"
										}
									],
									"name": "setRound",
									"nameLocation": "5270:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "start",
												"nameLocation": "5287:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "5279:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1867,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "5279:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1870,
												"mutability": "mutable",
												"name": "end",
												"nameLocation": "5302:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "5294:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1869,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "5294:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "metadataURI",
												"nameLocation": "5321:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "5307:25:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1871,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5307:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5278:55:13"
									},
									"returnParameters": {
										"id": 1876,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5353:0:13"
									},
									"scope": 2000,
									"src": "5261:278:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1970,
										"nodeType": "Block",
										"src": "5826:496:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1912,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "5845:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1913,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5854:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5845:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5769746864726177616c20616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 1915,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5857:45:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76",
																"typeString": "literal_string \"Withdrawal amount must be greater than zero\""
															},
															"value": "Withdrawal amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76",
																"typeString": "literal_string \"Withdrawal amount must be greater than zero\""
															}
														],
														"id": 1911,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5837:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5837:66:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1917,
												"nodeType": "ExpressionStatement",
												"src": "5837:66:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1919,
																	"name": "totalBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1512,
																	"src": "5922:13:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1921,
																"indexExpression": {
																	"id": 1920,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1902,
																	"src": "5936:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5922:20:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1922,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "5946:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5922:30:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742066756e6473",
															"id": 1924,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5954:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
																"typeString": "literal_string \"Insufficient funds\""
															},
															"value": "Insufficient funds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
																"typeString": "literal_string \"Insufficient funds\""
															}
														],
														"id": 1918,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5914:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5914:61:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1926,
												"nodeType": "ExpressionStatement",
												"src": "5914:61:13"
											},
											{
												"expression": {
													"id": 1931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1927,
															"name": "totalBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "5988:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1929,
														"indexExpression": {
															"id": 1928,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1902,
															"src": "6002:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5988:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1930,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1904,
														"src": "6012:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5988:30:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1932,
												"nodeType": "ExpressionStatement",
												"src": "5988:30:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1933,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1902,
														"src": "6035:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1934,
														"name": "NATIVE_TOKEN",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1495,
														"src": "6044:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6035:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1961,
													"nodeType": "Block",
													"src": "6197:70:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1956,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 105,
																			"src": "6239:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6239:7:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1958,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1904,
																		"src": "6248:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1953,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1902,
																				"src": "6219:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1952,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 747,
																			"src": "6212:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$747_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6212:13:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$747",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1955,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6226:12:13",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 794,
																	"src": "6212:26:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$747_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1959,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6212:43:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1960,
															"nodeType": "ExpressionStatement",
															"src": "6212:43:13"
														}
													]
												},
												"id": 1962,
												"nodeType": "IfStatement",
												"src": "6031:236:13",
												"trueBody": {
													"id": 1951,
													"nodeType": "Block",
													"src": "6058:133:13",
													"statements": [
														{
															"assignments": [
																1937,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1937,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "6079:7:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 1951,
																	"src": "6074:12:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1936,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "6074:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 1945,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 1943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6120:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1938,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 105,
																				"src": "6092:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 1939,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6092:7:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1940,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6100:4:13",
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "6092:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 1942,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 1941,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1904,
																			"src": "6112:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "6092:27:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 1944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6092:31:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6073:50:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1947,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1937,
																		"src": "6146:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4574686572207472616e73666572206661696c6564",
																		"id": 1948,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6155:23:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be",
																			"typeString": "literal_string \"Ether transfer failed\""
																		},
																		"value": "Ether transfer failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be",
																			"typeString": "literal_string \"Ether transfer failed\""
																		}
																	],
																	"id": 1946,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6138:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6138:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1950,
															"nodeType": "ExpressionStatement",
															"src": "6138:41:13"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1964,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 105,
																"src": "6291:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6291:7:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1966,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1902,
															"src": "6300:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1967,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1904,
															"src": "6307:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1963,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1534,
														"src": "6282:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6282:32:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1969,
												"nodeType": "EmitStatement",
												"src": "6277:37:13"
											}
										]
									},
									"documentation": {
										"id": 1900,
										"nodeType": "StructuredDocumentation",
										"src": "5547:191:13",
										"text": "@notice Withdraws funds from the jar for a specific token or Ether.\n @param token The token address (address(0) for Ether).\n @param amount The amount to withdraw."
									},
									"functionSelector": "f3fef3a3",
									"id": 1971,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1907,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1906,
												"name": "onlyOwner",
												"nameLocations": [
													"5802:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "5802:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "5802:9:13"
										},
										{
											"id": 1909,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1908,
												"name": "nonReentrant",
												"nameLocations": [
													"5812:12:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 493,
												"src": "5812:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "5812:12:13"
										}
									],
									"name": "withdraw",
									"nameLocation": "5753:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1902,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5770:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "5762:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5762:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1904,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5785:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "5777:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5777:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5761:31:13"
									},
									"returnParameters": {
										"id": 1910,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5826:0:13"
									},
									"scope": 2000,
									"src": "5744:578:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1990,
										"nodeType": "Block",
										"src": "6428:119:13",
										"statements": [
											{
												"expression": {
													"id": 1980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1975,
															"name": "totalBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "6439:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1977,
														"indexExpression": {
															"id": 1976,
															"name": "NATIVE_TOKEN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1495,
															"src": "6453:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6439:27:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 1978,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6470:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1979,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6474:5:13",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6470:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6439:40:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1981,
												"nodeType": "ExpressionStatement",
												"src": "6439:40:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1983,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6503:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6507:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6503:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1985,
															"name": "NATIVE_TOKEN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1495,
															"src": "6515:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1986,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6529:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6533:5:13",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "6529:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1982,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1526,
														"src": "6495:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6495:44:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1989,
												"nodeType": "EmitStatement",
												"src": "6490:49:13"
											}
										]
									},
									"documentation": {
										"id": 1972,
										"nodeType": "StructuredDocumentation",
										"src": "6330:65:13",
										"text": "@notice Allows Ether deposits directly via fallback function."
									},
									"id": 1991,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6408:2:13"
									},
									"returnParameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6428:0:13"
									},
									"scope": 2000,
									"src": "6401:146:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1998,
										"nodeType": "Block",
										"src": "6583:118:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "537765657473706f743a20757365206465706f7369742829",
															"id": 1995,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6666:26:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_27d7ea81cbaf0a0b02eea7b1644019cc31271c4da24dc2abdb33127b3a05742f",
																"typeString": "literal_string \"Sweetspot: use deposit()\""
															},
															"value": "Sweetspot: use deposit()"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_27d7ea81cbaf0a0b02eea7b1644019cc31271c4da24dc2abdb33127b3a05742f",
																"typeString": "literal_string \"Sweetspot: use deposit()\""
															}
														],
														"id": 1994,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "6659:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 1996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6659:34:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1997,
												"nodeType": "ExpressionStatement",
												"src": "6659:34:13"
											}
										]
									},
									"id": 1999,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6563:2:13"
									},
									"returnParameters": {
										"id": 1993,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6583:0:13"
									},
									"scope": 2000,
									"src": "6555:146:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2001,
							"src": "454:6250:13",
							"usedErrors": [
								30,
								35,
								211,
								214,
								761,
								1566
							],
							"usedEvents": [
								41,
								219,
								1526,
								1534,
								1542,
								1550,
								1558
							]
						}
					],
					"src": "33:6673:13"
				},
				"id": 13
			}
		}
	}
}